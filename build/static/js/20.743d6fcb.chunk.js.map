{"version":3,"sources":["containers/navs/Breadcrumb.js","components/Layouts.js","constants/tableOptions.js","components/Transitions.js","containers/dialogs/CreateChemicalSolutionControlWorksheetDialog.js","containers/dialogs/EditChemicalSolutionControlWorksheetDialog.js","containers/dialogs/ReviseChemicalSolutionControlWorksheetDialog.js","containers/dialogs/DeleteChemicalSolutionControlWorksheetDialog.js","containers/dialogs/CreateChemicalSolutionControlRecordDialog.js","containers/dialogs/EditChemicalSolutionControlRecordDialog.js","containers/dialogs/DeleteChemicalSolutionControlRecordDialog.js","containers/dialogs/VerifyChemicalSolutionControlRecordDialog.js","containers/dialogs/UndoVerifyChemicalSolutionControlRecordDialog.js","containers/dialogs/AttachCcrChemicalSolutionControlRecordDialog.js","views/app/qaChemicalSolutionControl.js"],"names":["BreadcrumbContainer","heading","match","Separator","props","className","style","backgroundColor","organizationUnitTableOptions","download","elevation","filter","filterType","print","responsive","rowsPerPage","rowsPerPageOptions","searchPlaceholder","selectableRows","laboratoryTestUserTableOptions","chemicalSolutionControlUserTableOptions","electroplatingChemicalProcessControlUserTableOptions","laboratoryTestTableOptions","downloadOptions","filename","separator","draggableColumns","enabled","transitionTime","expandableRows","expandableRowsHeader","expandableRowsOnClick","filterList","renderExpandableRow","rowData","colSpan","length","chemicalSolutionControlWorksheetsTableOptions","selectableRowsHideCheckboxes","chemicalSolutionControlTableOptions","pagination","search","viewColumns","solutionTargetLimitsTableOptions","specificationReferencesTableOptions","chemicalSolutionAnalysisTableOptions","electroplatingChemicalProcessControlTableOptions","SlideTransition","React","forwardRef","ref","Slide","direction","CreateChemicalSolutionControlWorksheetDialog","triggerCreateChemicalSolutionControlWorksheet","values","token","loading","createChemicalSolutionControlWorksheet","id","jwt_decode","newWorksheet","solutionContents","creator","i","e","solutionSpecificationReferences","push","setState","state","dummyOptions","solutionProcess","tankNumber","tankSize","tankVolume","location","testMethod","frequencyOfTest","temperatureRangeInCelcius","solutionTargetLimits","solution","min","target","max","organization","specification","value","specificationReferences","analysisSolutions","this","showCreateChemicalSolutionControlWorksheetDialog","toggleCreateChemicalSolutionControlWorksheetDialog","chemicalSolutionControlWorksheetFormInitialValues","Dialog","open","TransitionComponent","fullWidth","maxWidth","scroll","disableBackdropClick","disableEscapeKeyDown","onClose","DialogTitle","initialValues","onSubmit","validationSchema","chemicalSolutionControlCreateWorksheetFormValidationSchema","setFieldValue","touched","errors","handleChange","setSpecificationReferencesValue","name","autoComplete","DialogContent","dividers","Container","Grid","container","spacing","item","xs","Autocomplete","freeSolo","getOptionLabel","option","onInputChange","_event","openOnFocus","options","renderInput","params","TextField","error","helperText","InputLabelProps","shrink","label","renderOption","inputValue","matches","parts","parse","map","part","index","fontWeight","highlight","text","onChange","type","alignItems","display","fontSize","justifyContent","render","insert","remove","solutionTargetLimit","IconButton","color","onClick","DeleteOutline","AddCircleOutline","solutionContent","event","specificationReference","specificationReferencesValue","disabled","scLength","srLength","j","Sync","_analysisSolution","DialogActions","margin","Button","variant","PureComponent","mapActionsToProps","connect","auth","qaChemicalSolutionControl","EditChemicalSolutionControlWorksheetDialog","triggerEditChemicalSolutionControlWorksheet","selectedChemicalSolutionControlWorksheetToEdit","editChemicalSolutionControlWorksheet","prevProps","_prevState","showEditChemicalSolutionControlWorksheetDialog","v","a","findIndex","t","JSON","stringify","toggleEditChemicalSolutionControlWorksheetDialog","chemicalSolutionControlEditWorksheetFormValidationSchema","defaultValue","ReviseChemicalSolutionControlWorksheetDialog","selectedChemicalSolutionControlWorksheetToRevise","reviseChemicalSolutionControlWorksheet","revision","revisedWorksheet","showReviseChemicalSolutionControlWorksheetDialog","toggleReviseChemicalSolutionControlWorksheetDialog","chemicalSolutionControlReviseWorksheetFormValidationSchema","DeleteChemicalSolutionControlWorksheetDialog","showDeleteChemicalSolutionControlWorksheetDialog","selectedChemicalSolutionControlWorksheetToDelete","toggleDeleteChemicalSolutionControlWorksheetDialog","deleteChemicalSolutionControlWorksheet","DialogContentText","CreateChemicalSolutionControlRecordDialog","triggerCreateChemicalSolutionControlRecord","selectedChemicalSolutionControlWorksheet","createChemicalSolutionControlRecord","sampleTakenDate","sampleTakenTime","agitationInMinutes","temperatureInCelcius","sampleAnalysisDate","sampleAnalysisTime","analysisResult0","analysisResult1","analysisResult2","analysisResult3","analysisResult4","analysisResult5","analysisResult6","analysisResult7","analysisResult8","analysisResult9","analysisResult10","analysisResult11","analysisResult12","analysisResult13","analysisResult14","analysisResult15","analysisResult16","analysisResult17","analysisResult18","analysisResult19","analysisResult20","analysisResult21","analysisResult22","analysisResult23","analysisResult24","analysisResult25","analysisResult26","analysisResult27","analysisResult28","analysisResult29","remarks","analysisResults","slice","showCreateChemicalSolutionControlRecordDialog","toggleCreateChemicalSolutionControlRecordDialog","chemicalSolutionControlRecordFormInitialValues","chemicalSolutionControlCreateRecordFormValidationSchema","hidden","EditChemicalSolutionControlRecordDialog","triggerEditChemicalSolutionControlRecord","selectedChemicalSolutionControlRecord","editChemicalSolutionControlRecord","showEditChemicalSolutionControlRecordDialog","substr","toggleEditChemicalSolutionControlRecordDialog","chemicalSolutionControlEditRecordFormValidationSchema","DeleteChemicalSolutionControlRecordDialog","showDeleteChemicalSolutionControlRecordDialog","toggleDeleteChemicalSolutionControlRecordDialog","deleteChemicalSolutionControlRecord","VerifyChemicalSolutionControlRecordDialog","showVerifyChemicalSolutionControlRecordDialog","toggleVerifyChemicalSolutionControlRecordDialog","verifyChemicalSolutionControlRecord","userId","verifier","result","UndoVerifyChemicalSolutionControlRecordDialog","showUndoVerifyChemicalSolutionControlRecordDialog","toggleUndoVerifyChemicalSolutionControlRecordDialog","undoVerifyChemicalSolutionControlRecord","AttachCcrChemicalSolutionControlRecordDialog","triggerAttachCcrChemicalSolutionControlRecord","attachCcrChemicalSolutionControlRecord","chemicalChargingRecordNumber","chemicalChargingRecordReceivedDate","showAttachCcrChemicalSolutionControlRecordDialog","toggleAttachCcrChemicalSolutionControlRecordDialog","chemicalChargingRecordFormInitialValues","chemicalSolutionControlRecordAttachCcrFormValidationSchema","QaChemicalSolutionControl","componentDidMount","selectedChemicalSolutionControlStatus","getChemicalSolutionControlWorksheets","_isMounted","chemicalSolutionControlTableData","solutionTargetLimitsTableData","specificationReferencesTableData","chemicalSolutionAnalysisTableData","hideWorksheets","chemicalSolutionAnalysisLabel0","chemicalSolutionAnalysisLabel1","chemicalSolutionAnalysisLabel2","chemicalSolutionAnalysisLabel3","chemicalSolutionAnalysisLabel4","chemicalSolutionAnalysisLabel5","chemicalSolutionAnalysisLabel6","chemicalSolutionAnalysisLabel7","chemicalSolutionAnalysisLabel8","chemicalSolutionAnalysisLabel9","chemicalSolutionAnalysisLabel10","chemicalSolutionAnalysisLabel11","chemicalSolutionAnalysisLabel12","chemicalSolutionAnalysisLabel13","chemicalSolutionAnalysisLabel14","chemicalSolutionAnalysisLabel15","chemicalSolutionAnalysisLabel16","chemicalSolutionAnalysisLabel17","chemicalSolutionAnalysisLabel18","chemicalSolutionAnalysisLabel19","chemicalSolutionAnalysisLabel20","chemicalSolutionAnalysisLabel21","chemicalSolutionAnalysisLabel22","chemicalSolutionAnalysisLabel23","chemicalSolutionAnalysisLabel24","chemicalSolutionAnalysisLabel25","chemicalSolutionAnalysisLabel26","chemicalSolutionAnalysisLabel27","chemicalSolutionAnalysisLabel28","chemicalSolutionAnalysisLabel29","chemicalSolutionAnalysisChartData","chemicalSolutionAnalysisChartOptions","changeSelectedChemicalSolutionControlWorksheet","chemicalSolutionControlWorksheets","changeSelectedChemicalSolutionControlStatus","authorization","superAdmin","chemicalSolutionControlCreateWorksheet","chemicalSolutionControlCreateRecord","chemicalSolutionControlVerifyRecord","solutionTargetLimitsTableDataExists","chemicalSolutionControlWorksheetsTableColumns","empty","searchable","sort","customBodyRender","revised","ButtonGroup","size","EditOutlined","records","DeleteForever","UpdateOutlined","SubjectOutlined","sortThirdClickReset","Chip","icon","CheckOutlined","ClearOutlined","chemicalSolutionControlTableColumns","customHeadRender","borderBottom","solutionTargetLimitsTableColumns","specificationReferencesTableColumns","columnName0","columnName1","columnName2","columnName3","columnName4","columnName5","columnName6","columnName7","columnName8","columnName9","columnName10","chemicalSolutionAnalysisTableColumns","verifierName","DoneAllOutlined","UndoOutlined","PostAddOutlined","setCellProps","minWidth","textLabels","body","noMatch","customToolbar","Tooltip","title","Add","fallback","Breadcrumb","FormControl","Select","MenuItem","Card","CardContent","minHeight","padding","columns","data","Object","keys","marginLeft","CloseOutlined","chart","colors","xaxis","yaxis","tickAmount","labels","grid","lines","show","markers","stroke","curve","legend","position","horizontalAlign","width","floating","itemMargin","vertical","radius","series","height","marginTop","parameter","reduce","res","curr","assign","reduceArray","row","rowName","f","counter","isNaN","parseFloat","Date","getTime"],"mappings":"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","file":"static/js/20.743d6fcb.chunk.js","sourcesContent":["// import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport React, { Fragment } from \"react\";\r\n\r\n// import IntlMessages from '../../helpers/IntlMessages';\r\n// import { NavLink } from 'react-router-dom';\r\n\r\n// const getMenuTitle = (sub) => {\r\n// \treturn <IntlMessages id={`menu.sidebar.${sub}`} />;\r\n// };\r\n\r\n// const getUrl = (path, sub, index) => {\r\n// \tif (index === 0) {\r\n// \t\treturn '';\r\n// \t} else {\r\n// \t\treturn path.split(sub)[0] + sub;\r\n// \t}\r\n// };\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && (\r\n        <h1>\r\n          {/* <IntlMessages id={heading} /> */}\r\n          {heading}\r\n        </h1>\r\n      )}\r\n      {/* <BreadcrumbItems match={match} /> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter((x) => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {/* <Breadcrumb className='pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block'>\r\n\t\t\t\t{paths.map((sub, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n\t\t\t\t\t\t\t{paths.length !== index + 1 ? (\r\n\t\t\t\t\t\t\t\t<NavLink to={'/' + getUrl(path, sub, index)}>\r\n\t\t\t\t\t\t\t\t\t{getMenuTitle(sub)}\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\tgetMenuTitle(sub)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</Breadcrumb> */}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import { Col } from 'reactstrap';\r\n\r\nconst Colxx = (props) => (\r\n  <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\n\r\nconst Separator = (props) => (\r\n  <div\r\n    className={`separator ${props.className}`}\r\n    style={{ backgroundColor: 'transparent' }}\r\n  ></div>\r\n);\r\n\r\nexport { Colxx, Separator };\r\n","import { TableCell, TableRow } from \"@material-ui/core\";\r\n\r\nconst mediaVideoTableOptions = {\r\n  download: false,\r\n  elevation: 0,\r\n  filter: false,\r\n  filterType: \"multiselect\",\r\n  print: false,\r\n  responsive: \"standard\",\r\n  rowsPerPage: 3,\r\n  rowsPerPageOptions: [3],\r\n  selectableRows: \"none\",\r\n  viewColumns: false,\r\n};\r\n\r\nconst organizationUnitTableOptions = {\r\n  download: false,\r\n  elevation: 0,\r\n  filter: true,\r\n  filterType: \"multiselect\",\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 25, 50],\r\n  searchPlaceholder:\r\n    \"NIK / Name / Gender Education / Major / Organization / Email / Phone No.\",\r\n  selectableRows: \"none\",\r\n};\r\n\r\nconst laboratoryTestUserTableOptions = {\r\n  download: false,\r\n  elevation: 0,\r\n  filter: true,\r\n  filterType: \"multiselect\",\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 25, 50],\r\n  selectableRows: \"none\",\r\n};\r\n\r\nconst chemicalSolutionControlUserTableOptions = {\r\n  download: false,\r\n  elevation: 0,\r\n  filter: true,\r\n  filterType: \"multiselect\",\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 25, 50],\r\n  selectableRows: \"none\",\r\n};\r\n\r\nconst electroplatingChemicalProcessControlUserTableOptions = {\r\n  download: false,\r\n  elevation: 0,\r\n  filter: true,\r\n  filterType: \"multiselect\",\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 25, 50],\r\n  selectableRows: \"none\",\r\n};\r\n\r\nconst laboratoryTestTableOptions = {\r\n  downloadOptions: { filename: \"Laboratory Test.csv\", separator: \",\" },\r\n  draggableColumns: { enabled: true, transitionTime: 1 },\r\n  elevation: 0,\r\n  expandableRows: true,\r\n  expandableRowsHeader: true,\r\n  expandableRowsOnClick: false,\r\n  filter: true,\r\n  filterType: \"multiselect\",\r\n  filterList: [[\"PE8000\"], [], [], [], []],\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 100,\r\n  rowsPerPageOptions: [5, 10, 25, 50, 100, 250, 500],\r\n  selectableRows: \"none\",\r\n  renderExpandableRow: (rowData) => {\r\n    return (\r\n      <TableRow>\r\n        <TableCell colSpan={3}>\r\n          <b>Request for Laboratory</b>\r\n          <br />\r\n          <b>Material</b>\r\n          <br />\r\n          <b>Type / Code / Model</b>\r\n          <br />\r\n          <b>Material Specification</b>\r\n          <br />\r\n          <b>Manufactured by</b>\r\n          <br />\r\n          <b>Condition</b>\r\n          <br />\r\n          <b>Unit</b>\r\n          <br />\r\n          <b>Batch / Roll Number</b>\r\n          <br />\r\n          <b>Manufacturing Date</b>\r\n          <br />\r\n          <b>Expired Date</b>\r\n          <br />\r\n          <b>Program</b>\r\n          <br />\r\n          <b>Budget No. / RV No. / JID No.</b>\r\n          <br />\r\n          <b>Quantity of Sample</b>\r\n          <br />\r\n          <b>Quantity of Material</b>\r\n          <br />\r\n          <b>Reason of Test</b>\r\n          <br />\r\n          <b>Type of Test</b>\r\n          <br />\r\n          <b>Test According to Specification</b>\r\n          <br />\r\n        </TableCell>\r\n        <TableCell colSpan={rowData.length - 2}>\r\n          {rowData[13]}\r\n          <br />\r\n          {rowData[14]}\r\n          <br />\r\n          {rowData[15]}\r\n          <br />\r\n          {rowData[16]}\r\n          <br />\r\n          {rowData[17]}\r\n          <br />\r\n          {rowData[18]}\r\n          <br />\r\n          {rowData[19]}\r\n          <br />\r\n          {rowData[20]}\r\n          <br />\r\n          {rowData[21]}\r\n          <br />\r\n          {rowData[22]}\r\n          <br />\r\n          {rowData[23]}\r\n          <br />\r\n          {rowData[24]}\r\n          <br />\r\n          {rowData[25]}\r\n          <br />\r\n          {rowData[26]}\r\n          <br />\r\n          {rowData[27]}\r\n          <br />\r\n          {rowData[28]}\r\n          <br />\r\n          {rowData[29]}\r\n          <br />\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  },\r\n};\r\n\r\nconst chemicalSolutionControlWorksheetsTableOptions = {\r\n  downloadOptions: {\r\n    filename: \"Chemical Solution Control Worksheets.csv\",\r\n    separator: \",\",\r\n  },\r\n  elevation: 0,\r\n  filter: true,\r\n  filterType: \"multiselect\",\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 250,\r\n  rowsPerPageOptions: [5, 10, 25, 50, 100, 250, 500],\r\n  selectableRows: \"single\",\r\n  selectableRowsHideCheckboxes: true,\r\n};\r\n\r\nconst chemicalSolutionControlTableOptions = {\r\n  download: false,\r\n  draggableColumns: {\r\n    enabled: false,\r\n    transitionTime: 1,\r\n  },\r\n  elevation: 0,\r\n  filter: false,\r\n  pagination: false,\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 15,\r\n  rowsPerPageOptions: [15],\r\n  search: false,\r\n  selectableRows: \"none\",\r\n  viewColumns: false,\r\n};\r\n\r\nconst solutionTargetLimitsTableOptions = {\r\n  downloadOptions: {\r\n    filename: \"Chemical Solution Control Worksheet Solution Target Limits.csv\",\r\n    separator: \",\",\r\n  },\r\n  draggableColumns: {\r\n    enabled: false,\r\n    transitionTime: 1,\r\n  },\r\n  elevation: 0,\r\n  filter: false,\r\n  pagination: false,\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 15,\r\n  rowsPerPageOptions: [15],\r\n  search: false,\r\n  selectableRows: \"none\",\r\n};\r\n\r\nconst specificationReferencesTableOptions = {\r\n  downloadOptions: {\r\n    filename:\r\n      \"Chemical Solution Control Worksheet Specification References.csv\",\r\n    separator: \",\",\r\n  },\r\n  draggableColumns: {\r\n    enabled: false,\r\n    transitionTime: 1,\r\n  },\r\n  elevation: 0,\r\n  filter: false,\r\n  pagination: false,\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 15,\r\n  rowsPerPageOptions: [15],\r\n  search: false,\r\n  selectableRows: \"none\",\r\n};\r\n\r\nconst chemicalSolutionAnalysisTableOptions = {\r\n  downloadOptions: {\r\n    filename: \"Chemical Solution Control Records.csv\",\r\n    separator: \",\",\r\n  },\r\n  draggableColumns: {\r\n    enabled: false,\r\n    transitionTime: 1,\r\n  },\r\n  elevation: 0,\r\n  filter: false,\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 5,\r\n  rowsPerPageOptions: [5, 10, 25, 50, 100, 250, 500],\r\n  search: false,\r\n  selectableRows: \"none\",\r\n};\r\n\r\nconst electroplatingChemicalProcessControlTableOptions = {\r\n  downloadOptions: {\r\n    filename: \"Control of Electroplating and Chemical Processes.csv\",\r\n    separator: \",\",\r\n  },\r\n  elevation: 0,\r\n  filter: true,\r\n  filterType: \"multiselect\",\r\n  print: false,\r\n  responsive: \"vertical\",\r\n  rowsPerPage: 100,\r\n  rowsPerPageOptions: [5, 10, 25, 50, 100, 250, 500],\r\n  selectableRows: \"single\",\r\n  selectableRowsHideCheckboxes: true,\r\n};\r\n\r\nexport {\r\n  mediaVideoTableOptions,\r\n  organizationUnitTableOptions,\r\n  laboratoryTestUserTableOptions,\r\n  chemicalSolutionControlUserTableOptions,\r\n  electroplatingChemicalProcessControlUserTableOptions,\r\n  laboratoryTestTableOptions,\r\n  chemicalSolutionControlWorksheetsTableOptions,\r\n  chemicalSolutionControlTableOptions,\r\n  solutionTargetLimitsTableOptions,\r\n  specificationReferencesTableOptions,\r\n  chemicalSolutionAnalysisTableOptions,\r\n  electroplatingChemicalProcessControlTableOptions,\r\n};\r\n","import React from 'react';\r\nimport { Slide } from '@material-ui/core';\r\n\r\nconst SlideTransition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport { SlideTransition };\r\n","import {\r\n  AddCircleOutline as AddCircleOutlineIcon,\r\n  DeleteOutline as DeleteOutlineIcon,\r\n  Sync as SyncIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport React, { PureComponent } from \"react\";\r\nimport {\r\n  createChemicalSolutionControlWorksheet,\r\n  toggleCreateChemicalSolutionControlWorksheetDialog,\r\n} from \"../../redux/actions\";\r\nimport { SlideTransition } from \"../../components/Transitions\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { LoadingSpinner } from \"../../components/Miscellaneous\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport { chemicalSolutionControlCreateWorksheetFormValidationSchema } from \"../../constants/validationSchemas\";\r\n\r\nclass CreateChemicalSolutionControlWorksheetDialog extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dummyOptions: [],\r\n      solutionProcess: \"\",\r\n      tankNumber: \"\",\r\n      tankSize: \"\",\r\n      tankVolume: \"\",\r\n      location: \"\",\r\n      testMethod: \"\",\r\n      frequencyOfTest: \"\",\r\n      temperatureRangeInCelcius: \"\",\r\n      solutionTargetLimits: [{ solution: \"\", min: \"\", target: \"\", max: \"\" }],\r\n      solutionContents: [\r\n        {\r\n          solution: \"\",\r\n          organization: \"IAe\",\r\n          specification: \"Solution Control Limit\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n      specificationReferences: [{ organization: \"\", specification: \"\" }],\r\n      solutionSpecificationReferences: [],\r\n      analysisSolutions: [\r\n        {\r\n          solution: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  triggerCreateChemicalSolutionControlWorksheet = (values) => {\r\n    const { token, loading, createChemicalSolutionControlWorksheet } =\r\n      this.props;\r\n    const { id } = jwt_decode(token);\r\n    let newWorksheet = values;\r\n\r\n    if (!loading) {\r\n      const { solutionContents } = newWorksheet;\r\n\r\n      newWorksheet.creator = id;\r\n      for (let i = 0; i < solutionContents.length; i++) {\r\n        const e = solutionContents[i];\r\n        newWorksheet.solutionSpecificationReferences.push(e);\r\n      }\r\n      this.setState({ solutionSpecificationReferences: [] });\r\n      createChemicalSolutionControlWorksheet(newWorksheet);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      showCreateChemicalSolutionControlWorksheetDialog,\r\n      toggleCreateChemicalSolutionControlWorksheetDialog,\r\n    } = this.props;\r\n    const {\r\n      dummyOptions,\r\n      solutionProcess,\r\n      tankNumber,\r\n      tankSize,\r\n      tankVolume,\r\n      location,\r\n      testMethod,\r\n      frequencyOfTest,\r\n      temperatureRangeInCelcius,\r\n      solutionTargetLimits,\r\n      solutionContents,\r\n      specificationReferences,\r\n      solutionSpecificationReferences,\r\n      analysisSolutions,\r\n    } = this.state;\r\n    let chemicalSolutionControlWorksheetFormInitialValues = {};\r\n\r\n    if (showCreateChemicalSolutionControlWorksheetDialog) {\r\n      chemicalSolutionControlWorksheetFormInitialValues = {\r\n        solutionProcess,\r\n        tankNumber,\r\n        tankSize,\r\n        tankVolume,\r\n        location,\r\n        testMethod,\r\n        frequencyOfTest,\r\n        temperatureRangeInCelcius,\r\n        solutionTargetLimits,\r\n        solutionContents,\r\n        specificationReferences,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      };\r\n    }\r\n    return (\r\n      <Dialog\r\n        open={showCreateChemicalSolutionControlWorksheetDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"xl\"\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleCreateChemicalSolutionControlWorksheetDialog();\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Create a New Chemical Solution Control Worksheet\r\n        </DialogTitle>\r\n        {showCreateChemicalSolutionControlWorksheetDialog ? (\r\n          <Formik\r\n            initialValues={chemicalSolutionControlWorksheetFormInitialValues}\r\n            onSubmit={this.triggerCreateChemicalSolutionControlWorksheet}\r\n            validationSchema={\r\n              chemicalSolutionControlCreateWorksheetFormValidationSchema\r\n            }\r\n          >\r\n            {({ setFieldValue, values, touched, errors, handleChange }) => {\r\n              const setSpecificationReferencesValue = (name, value) => {\r\n                setFieldValue(name, value);\r\n              };\r\n              return (\r\n                <Form autoComplete=\"off\">\r\n                  <DialogContent dividers>\r\n                    <Container>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"solutionProcess\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.solutionProcess &&\r\n                                  touched.solutionProcess\r\n                                }\r\n                                helperText={\r\n                                  errors.solutionProcess &&\r\n                                  touched.solutionProcess &&\r\n                                  errors.solutionProcess\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Solution Process\"\r\n                                name=\"solutionProcess\"\r\n                                value={values.solutionProcess}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"tankNumber\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.tankNumber && touched.tankNumber}\r\n                                helperText={\r\n                                  errors.tankNumber &&\r\n                                  touched.tankNumber &&\r\n                                  errors.tankNumber\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Tank Number\"\r\n                                name=\"tankNumber\"\r\n                                value={values.tankNumber}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={errors.tankSize && touched.tankSize}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.tankSize &&\r\n                              touched.tankSize &&\r\n                              errors.tankSize\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Tank Size\"\r\n                            name=\"tankSize\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.tankSize}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={errors.tankVolume && touched.tankVolume}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.tankVolume &&\r\n                              touched.tankVolume &&\r\n                              errors.tankVolume\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Tank Volume\"\r\n                            name=\"tankVolume\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.tankVolume}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"location\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.location && touched.location}\r\n                                helperText={\r\n                                  errors.location &&\r\n                                  touched.location &&\r\n                                  errors.location\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Location\"\r\n                                name=\"location\"\r\n                                value={values.location}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"testMethod\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.testMethod && touched.testMethod}\r\n                                helperText={\r\n                                  errors.testMethod &&\r\n                                  touched.testMethod &&\r\n                                  errors.testMethod\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Test Method\"\r\n                                name=\"testMethod\"\r\n                                value={values.testMethod}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"frequencyOfTest\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.frequencyOfTest &&\r\n                                  touched.frequencyOfTest\r\n                                }\r\n                                helperText={\r\n                                  errors.frequencyOfTest &&\r\n                                  touched.frequencyOfTest &&\r\n                                  errors.frequencyOfTest\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Frequency Of Test\"\r\n                                name=\"frequencyOfTest\"\r\n                                value={values.frequencyOfTest}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"temperatureRangeInCelcius\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.temperatureRangeInCelcius &&\r\n                                  touched.temperatureRangeInCelcius\r\n                                }\r\n                                helperText={\r\n                                  errors.temperatureRangeInCelcius &&\r\n                                  touched.temperatureRangeInCelcius &&\r\n                                  errors.temperatureRangeInCelcius\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Temperature Range (°C)\"\r\n                                name=\"temperatureRangeInCelcius\"\r\n                                value={values.temperatureRangeInCelcius}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Solution Target Limit\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionTargetLimits\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionTargetLimits.length > 0 &&\r\n                                  values.solutionTargetLimits.map(\r\n                                    (solutionTargetLimit, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .solution &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content To Be Analyzed\"\r\n                                            name={`solutionTargetLimits.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .min &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].min\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Minimum\"\r\n                                            name={`solutionTargetLimits.${index}.min`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .min\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .target &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].target\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Target\"\r\n                                            name={`solutionTargetLimits.${index}.target`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .target\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .max &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].max\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Maximum\"\r\n                                            name={`solutionTargetLimits.${index}.max`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .max\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.solutionTargetLimits?.length >\r\n                                        1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.solutionTargetLimits.length <= 14 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          solution: \"\",\r\n                                          min: \"\",\r\n                                          target: \"\",\r\n                                          max: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Specification References: Solutions\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionContents\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionContents.length > 0 &&\r\n                                  values.solutionContents.map(\r\n                                    (solutionContent, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionContents &&\r\n                                              errors.solutionContents[index] &&\r\n                                              errors.solutionContents[index]\r\n                                                .solution &&\r\n                                              touched.solutionContents &&\r\n                                              touched.solutionContents[index]\r\n                                                .solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content to be Analyzed\"\r\n                                            name={`solutionContents.${index}.solution`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `solutionContents.${index}.solution`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionContents[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionContents &&\r\n                                              errors.solutionContents[index] &&\r\n                                              errors.solutionContents[index]\r\n                                                .value &&\r\n                                              touched.solutionContents &&\r\n                                              touched.solutionContents[index]\r\n                                                .value\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"IAe Solution Control Limit\"\r\n                                            name={`solutionContents.${index}.value`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `solutionContents.${index}.value`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionContents[index]\r\n                                                .value\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.solutionContents?.length > 1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.solutionContents.length <= 14 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() => {\r\n                                        push({\r\n                                          solution: \"\",\r\n                                          organization: \"IAe\",\r\n                                          specification:\r\n                                            \"Solution Control Limit\",\r\n                                          value: \"\",\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Specification References: Specifications\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"specificationReferences\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.specificationReferences.length > 0 &&\r\n                                  values.specificationReferences.map(\r\n                                    (specificationReference, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.specificationReferences &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ].organization &&\r\n                                              touched.specificationReferences &&\r\n                                              touched.specificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Name\"\r\n                                            name={`specificationReferences.${index}.organization`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `specificationReferences.${index}.organization`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.specificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.specificationReferences &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ].specification &&\r\n                                              touched.specificationReferences &&\r\n                                              touched.specificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Specification\"\r\n                                            name={`specificationReferences.${index}.specification`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `specificationReferences.${index}.specification`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.specificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.specificationReferences\r\n                                          ?.length > 1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.specificationReferences.length <= 9 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          organization: \"\",\r\n                                          specification: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Specification References: Values\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionSpecificationReferences\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionSpecificationReferences.length >\r\n                                  0 &&\r\n                                  values.solutionSpecificationReferences.map(\r\n                                    (specificationReferencesValue, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content to be Analyzed\"\r\n                                            name={`solutionSpecificationReferences.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Organization\"\r\n                                            name={`solutionSpecificationReferences.${index}.organization`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Specification\"\r\n                                            name={`solutionSpecificationReferences.${index}.specification`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Value\"\r\n                                            name={`solutionSpecificationReferences.${index}.value`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                <div\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <IconButton\r\n                                    aria-label=\"add\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      const {\r\n                                        solutionContents,\r\n                                        specificationReferences,\r\n                                      } = values;\r\n                                      const scLength = solutionContents.length;\r\n                                      const srLength =\r\n                                        specificationReferences.length;\r\n\r\n                                      setFieldValue(\r\n                                        `solutionSpecificationReferences`,\r\n                                        []\r\n                                      );\r\n                                      for (let i = 0; i < scLength; i++) {\r\n                                        for (let j = 0; j < srLength; j++) {\r\n                                          push({\r\n                                            solution:\r\n                                              values.solutionContents[i]\r\n                                                .solution,\r\n                                            organization:\r\n                                              values.specificationReferences[j]\r\n                                                .organization,\r\n                                            specification:\r\n                                              values.specificationReferences[j]\r\n                                                .specification,\r\n                                            value: \"\",\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <SyncIcon />\r\n                                  </IconButton>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Chemical Solution Analysis: Solutions\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"analysisSolutions\"\r\n                            render={({ remove, push }) => (\r\n                              <div>\r\n                                {values.analysisSolutions.length > 0 &&\r\n                                  values.analysisSolutions.map(\r\n                                    (_analysisSolution, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.analysisSolutions &&\r\n                                              errors.analysisSolutions[index] &&\r\n                                              errors.analysisSolutions[index]\r\n                                                .solution &&\r\n                                              touched.analysisSolutions &&\r\n                                              touched.analysisSolutions[index]\r\n                                                .solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Chemical Solution Name\"\r\n                                            name={`analysisSolutions.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.analysisSolutions[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.analysisSolutions?.length >\r\n                                        1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.analysisSolutions.length <= 29 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          solution: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Container>\r\n                  </DialogContent>\r\n                  <DialogActions style={{ margin: 4 }}>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"secondary\"\r\n                      onClick={\r\n                        !loading\r\n                          ? () => {\r\n                              toggleCreateChemicalSolutionControlWorksheetDialog();\r\n                            }\r\n                          : null\r\n                      }\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Cancel</span>\r\n                    </Button>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type={loading ? \"button\" : \"submit\"}\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Submit</span>\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        ) : null}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, qaChemicalSolutionControl }) => {\r\n  const { token } = auth;\r\n  const { loading, showCreateChemicalSolutionControlWorksheetDialog } =\r\n    qaChemicalSolutionControl;\r\n\r\n  return {\r\n    token,\r\n    loading,\r\n    showCreateChemicalSolutionControlWorksheetDialog,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleCreateChemicalSolutionControlWorksheetDialog,\r\n  createChemicalSolutionControlWorksheet,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(CreateChemicalSolutionControlWorksheetDialog);\r\n","import {\r\n  AddCircleOutline as AddCircleOutlineIcon,\r\n  DeleteOutline as DeleteOutlineIcon,\r\n  Sync as SyncIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport React, { PureComponent } from \"react\";\r\nimport {\r\n  editChemicalSolutionControlWorksheet,\r\n  toggleEditChemicalSolutionControlWorksheetDialog,\r\n} from \"../../redux/actions\";\r\nimport { SlideTransition } from \"../../components/Transitions\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { LoadingSpinner } from \"../../components/Miscellaneous\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport { chemicalSolutionControlEditWorksheetFormValidationSchema } from \"../../constants/validationSchemas\";\r\n\r\nclass EditChemicalSolutionControlWorksheetDialog extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dummyOptions: [],\r\n      solutionProcess: \"\",\r\n      tankNumber: \"\",\r\n      tankSize: \"\",\r\n      tankVolume: \"\",\r\n      location: \"\",\r\n      testMethod: \"\",\r\n      frequencyOfTest: \"\",\r\n      temperatureRangeInCelcius: \"\",\r\n      solutionTargetLimits: [{ solution: \"\", min: \"\", target: \"\", max: \"\" }],\r\n      solutionContents: [\r\n        {\r\n          solution: \"\",\r\n          organization: \"IAe\",\r\n          specification: \"Solution Control Limit\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n      specificationReferences: [{ organization: \"\", specification: \"\" }],\r\n      solutionSpecificationReferences: [],\r\n      analysisSolutions: [\r\n        {\r\n          solution: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, _prevState) {\r\n    const {\r\n      showEditChemicalSolutionControlWorksheetDialog,\r\n      selectedChemicalSolutionControlWorksheetToEdit,\r\n    } = this.props;\r\n\r\n    if (\r\n      showEditChemicalSolutionControlWorksheetDialog !==\r\n        prevProps.showEditChemicalSolutionControlWorksheetDialog &&\r\n      showEditChemicalSolutionControlWorksheetDialog &&\r\n      selectedChemicalSolutionControlWorksheetToEdit\r\n    ) {\r\n      let {\r\n        solutionProcess,\r\n        tankNumber,\r\n        tankSize,\r\n        tankVolume,\r\n        location,\r\n        testMethod,\r\n        frequencyOfTest,\r\n        temperatureRangeInCelcius,\r\n        solutionTargetLimits,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      } = selectedChemicalSolutionControlWorksheetToEdit;\r\n      let solutionContents = solutionSpecificationReferences.filter((e) => {\r\n        return e.specification === \"Solution Control Limit\";\r\n      });\r\n      let specificationReferences = solutionSpecificationReferences\r\n        .map(({ organization, specification }) => ({\r\n          organization,\r\n          specification,\r\n        }))\r\n        .filter((e) => {\r\n          return (\r\n            e.organization !== \"IAe\" &&\r\n            e.specification !== \"Solution Control Limit\"\r\n          );\r\n        })\r\n        .filter(\r\n          (v, i, a) =>\r\n            a.findIndex((t) => JSON.stringify(t) === JSON.stringify(v)) === i\r\n        );\r\n      solutionSpecificationReferences = solutionSpecificationReferences.filter(\r\n        (e) => {\r\n          return (\r\n            e.organization !== \"IAe\" &&\r\n            e.specification !== \"Solution Control Limit\"\r\n          );\r\n        }\r\n      );\r\n\r\n      this.setState({\r\n        solutionProcess,\r\n        tankNumber,\r\n        tankSize,\r\n        tankVolume,\r\n        location,\r\n        testMethod,\r\n        frequencyOfTest,\r\n        temperatureRangeInCelcius,\r\n        solutionTargetLimits,\r\n        solutionContents,\r\n        specificationReferences,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      });\r\n    }\r\n  }\r\n\r\n  triggerEditChemicalSolutionControlWorksheet = (values) => {\r\n    const {\r\n      token,\r\n      loading,\r\n      selectedChemicalSolutionControlWorksheetToEdit,\r\n      editChemicalSolutionControlWorksheet,\r\n    } = this.props;\r\n    const { id } = jwt_decode(token);\r\n    let newWorksheet = values;\r\n\r\n    if (!loading) {\r\n      let {\r\n        solutionContents,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      } = newWorksheet;\r\n\r\n      newWorksheet.creator = id;\r\n      newWorksheet.solutionSpecificationReferences =\r\n        solutionSpecificationReferences.map(\r\n          ({ solution, organization, specification, value }) => ({\r\n            solution,\r\n            organization,\r\n            specification,\r\n            value,\r\n          })\r\n        );\r\n      solutionContents = solutionContents.map(\r\n        ({ solution, organization, specification, value }) => ({\r\n          solution,\r\n          organization,\r\n          specification,\r\n          value,\r\n        })\r\n      );\r\n      newWorksheet.analysisSolutions = analysisSolutions.map(\r\n        ({ solution }) => ({\r\n          solution,\r\n        })\r\n      );\r\n      for (let i = 0; i < solutionContents.length; i++) {\r\n        const e = solutionContents[i];\r\n        newWorksheet.solutionSpecificationReferences.push(e);\r\n      }\r\n      this.setState({ solutionSpecificationReferences: [] });\r\n      editChemicalSolutionControlWorksheet(\r\n        selectedChemicalSolutionControlWorksheetToEdit?.id,\r\n        newWorksheet\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      showEditChemicalSolutionControlWorksheetDialog,\r\n      toggleEditChemicalSolutionControlWorksheetDialog,\r\n    } = this.props;\r\n    const {\r\n      dummyOptions,\r\n      solutionProcess,\r\n      tankNumber,\r\n      tankSize,\r\n      tankVolume,\r\n      location,\r\n      testMethod,\r\n      frequencyOfTest,\r\n      temperatureRangeInCelcius,\r\n      solutionTargetLimits,\r\n      solutionContents,\r\n      specificationReferences,\r\n      solutionSpecificationReferences,\r\n      analysisSolutions,\r\n    } = this.state;\r\n    let chemicalSolutionControlWorksheetFormInitialValues = {};\r\n\r\n    if (showEditChemicalSolutionControlWorksheetDialog) {\r\n      chemicalSolutionControlWorksheetFormInitialValues = {\r\n        solutionProcess,\r\n        tankNumber,\r\n        tankSize,\r\n        tankVolume,\r\n        location,\r\n        testMethod,\r\n        frequencyOfTest,\r\n        temperatureRangeInCelcius,\r\n        solutionTargetLimits,\r\n        solutionContents,\r\n        specificationReferences,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      };\r\n    }\r\n    return (\r\n      <Dialog\r\n        open={showEditChemicalSolutionControlWorksheetDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"xl\"\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleEditChemicalSolutionControlWorksheetDialog({});\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Edit chemical control worksheet\r\n        </DialogTitle>\r\n        {showEditChemicalSolutionControlWorksheetDialog ? (\r\n          <Formik\r\n            initialValues={chemicalSolutionControlWorksheetFormInitialValues}\r\n            onSubmit={this.triggerEditChemicalSolutionControlWorksheet}\r\n            validationSchema={\r\n              chemicalSolutionControlEditWorksheetFormValidationSchema\r\n            }\r\n          >\r\n            {({ setFieldValue, values, touched, errors, handleChange }) => {\r\n              const setSpecificationReferencesValue = (name, value) => {\r\n                setFieldValue(name, value);\r\n              };\r\n              return (\r\n                <Form autoComplete=\"off\">\r\n                  <DialogContent dividers>\r\n                    <Container>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={solutionProcess}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"solutionProcess\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.solutionProcess &&\r\n                                  touched.solutionProcess\r\n                                }\r\n                                helperText={\r\n                                  errors.solutionProcess &&\r\n                                  touched.solutionProcess &&\r\n                                  errors.solutionProcess\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Solution Process\"\r\n                                name=\"solutionProcess\"\r\n                                value={values.solutionProcess}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={tankNumber}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"tankNumber\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.tankNumber && touched.tankNumber}\r\n                                helperText={\r\n                                  errors.tankNumber &&\r\n                                  touched.tankNumber &&\r\n                                  errors.tankNumber\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Tank Number\"\r\n                                name=\"tankNumber\"\r\n                                value={values.tankNumber}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={errors.tankSize && touched.tankSize}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.tankSize &&\r\n                              touched.tankSize &&\r\n                              errors.tankSize\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Tank Size\"\r\n                            name=\"tankSize\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.tankSize}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={errors.tankVolume && touched.tankVolume}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.tankVolume &&\r\n                              touched.tankVolume &&\r\n                              errors.tankVolume\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Tank Volume\"\r\n                            name=\"tankVolume\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.tankVolume}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={location}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"location\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.location && touched.location}\r\n                                helperText={\r\n                                  errors.location &&\r\n                                  touched.location &&\r\n                                  errors.location\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Location\"\r\n                                name=\"location\"\r\n                                value={values.location}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={testMethod}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"testMethod\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.testMethod && touched.testMethod}\r\n                                helperText={\r\n                                  errors.testMethod &&\r\n                                  touched.testMethod &&\r\n                                  errors.testMethod\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Test Method\"\r\n                                name=\"testMethod\"\r\n                                value={values.testMethod}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={frequencyOfTest}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"frequencyOfTest\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.frequencyOfTest &&\r\n                                  touched.frequencyOfTest\r\n                                }\r\n                                helperText={\r\n                                  errors.frequencyOfTest &&\r\n                                  touched.frequencyOfTest &&\r\n                                  errors.frequencyOfTest\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Frequency Of Test\"\r\n                                name=\"frequencyOfTest\"\r\n                                value={values.frequencyOfTest}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={temperatureRangeInCelcius}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"temperatureRangeInCelcius\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.temperatureRangeInCelcius &&\r\n                                  touched.temperatureRangeInCelcius\r\n                                }\r\n                                helperText={\r\n                                  errors.temperatureRangeInCelcius &&\r\n                                  touched.temperatureRangeInCelcius &&\r\n                                  errors.temperatureRangeInCelcius\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Temperature Range (°C)\"\r\n                                name=\"temperatureRangeInCelcius\"\r\n                                value={values.temperatureRangeInCelcius}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Solution Target Limit\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionTargetLimits\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionTargetLimits.length > 0 &&\r\n                                  values.solutionTargetLimits.map(\r\n                                    (solutionTargetLimit, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .solution &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content To Be Analyzed\"\r\n                                            name={`solutionTargetLimits.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .min &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].min\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Minimum\"\r\n                                            name={`solutionTargetLimits.${index}.min`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .min\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .target &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].target\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Target\"\r\n                                            name={`solutionTargetLimits.${index}.target`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .target\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .max &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].max\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Maximum\"\r\n                                            name={`solutionTargetLimits.${index}.max`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .max\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.solutionTargetLimits?.length >\r\n                                        1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.solutionTargetLimits.length <= 14 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          solution: \"\",\r\n                                          min: \"\",\r\n                                          target: \"\",\r\n                                          max: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Specification References: Solutions\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionContents\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionContents.length > 0 &&\r\n                                  values.solutionContents.map(\r\n                                    (solutionContent, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionContents &&\r\n                                              errors.solutionContents[index] &&\r\n                                              errors.solutionContents[index]\r\n                                                .solution &&\r\n                                              touched.solutionContents &&\r\n                                              touched.solutionContents[index]\r\n                                                .solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content to be Analyzed\"\r\n                                            name={`solutionContents.${index}.solution`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `solutionContents.${index}.solution`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionContents[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionContents &&\r\n                                              errors.solutionContents[index] &&\r\n                                              errors.solutionContents[index]\r\n                                                .value &&\r\n                                              touched.solutionContents &&\r\n                                              touched.solutionContents[index]\r\n                                                .value\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"IAe Solution Control Limit\"\r\n                                            name={`solutionContents.${index}.value`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `solutionContents.${index}.value`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionContents[index]\r\n                                                .value\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.solutionContents?.length > 1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.solutionContents.length <= 14 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() => {\r\n                                        push({\r\n                                          solution: \"\",\r\n                                          organization: \"IAe\",\r\n                                          specification:\r\n                                            \"Solution Control Limit\",\r\n                                          value: \"\",\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Specification References: Specifications\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"specificationReferences\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.specificationReferences.length > 0 &&\r\n                                  values.specificationReferences.map(\r\n                                    (specificationReference, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.specificationReferences &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ].organization &&\r\n                                              touched.specificationReferences &&\r\n                                              touched.specificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Name\"\r\n                                            name={`specificationReferences.${index}.organization`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `specificationReferences.${index}.organization`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.specificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.specificationReferences &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ].specification &&\r\n                                              touched.specificationReferences &&\r\n                                              touched.specificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Specification\"\r\n                                            name={`specificationReferences.${index}.specification`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `specificationReferences.${index}.specification`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.specificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.specificationReferences\r\n                                          ?.length > 1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.specificationReferences.length <= 9 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          organization: \"\",\r\n                                          specification: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Specification References: Values\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionSpecificationReferences\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionSpecificationReferences.length >\r\n                                  0 &&\r\n                                  values.solutionSpecificationReferences.map(\r\n                                    (specificationReferencesValue, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content to be Analyzed\"\r\n                                            name={`solutionSpecificationReferences.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Organization\"\r\n                                            name={`solutionSpecificationReferences.${index}.organization`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Specification\"\r\n                                            name={`solutionSpecificationReferences.${index}.specification`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Value\"\r\n                                            name={`solutionSpecificationReferences.${index}.value`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                <div\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <IconButton\r\n                                    aria-label=\"add\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      const {\r\n                                        solutionContents,\r\n                                        specificationReferences,\r\n                                      } = values;\r\n                                      const scLength = solutionContents.length;\r\n                                      const srLength =\r\n                                        specificationReferences.length;\r\n\r\n                                      setFieldValue(\r\n                                        `solutionSpecificationReferences`,\r\n                                        []\r\n                                      );\r\n                                      for (let i = 0; i < scLength; i++) {\r\n                                        for (let j = 0; j < srLength; j++) {\r\n                                          push({\r\n                                            solution:\r\n                                              values.solutionContents[i]\r\n                                                .solution,\r\n                                            organization:\r\n                                              values.specificationReferences[j]\r\n                                                .organization,\r\n                                            specification:\r\n                                              values.specificationReferences[j]\r\n                                                .specification,\r\n                                            value: \"\",\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <SyncIcon />\r\n                                  </IconButton>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Chemical Solution Analysis: Solutions\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"analysisSolutions\"\r\n                            render={({ remove, push }) => (\r\n                              <div>\r\n                                {values.analysisSolutions.length > 0 &&\r\n                                  values.analysisSolutions.map(\r\n                                    (_analysisSolution, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.analysisSolutions &&\r\n                                              errors.analysisSolutions[index] &&\r\n                                              errors.analysisSolutions[index]\r\n                                                .solution &&\r\n                                              touched.analysisSolutions &&\r\n                                              touched.analysisSolutions[index]\r\n                                                .solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Chemical Solution Name\"\r\n                                            name={`analysisSolutions.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.analysisSolutions[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.analysisSolutions?.length >\r\n                                        1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.analysisSolutions.length <= 29 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          solution: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Container>\r\n                  </DialogContent>\r\n                  <DialogActions style={{ margin: 4 }}>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"secondary\"\r\n                      onClick={\r\n                        !loading\r\n                          ? () => {\r\n                              toggleEditChemicalSolutionControlWorksheetDialog(\r\n                                {}\r\n                              );\r\n                            }\r\n                          : null\r\n                      }\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Cancel</span>\r\n                    </Button>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type={loading ? \"button\" : \"submit\"}\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Submit</span>\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        ) : null}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, qaChemicalSolutionControl }) => {\r\n  const { token } = auth;\r\n  const {\r\n    loading,\r\n    showEditChemicalSolutionControlWorksheetDialog,\r\n    selectedChemicalSolutionControlWorksheetToEdit,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    token,\r\n    loading,\r\n    showEditChemicalSolutionControlWorksheetDialog,\r\n    selectedChemicalSolutionControlWorksheetToEdit,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleEditChemicalSolutionControlWorksheetDialog,\r\n  editChemicalSolutionControlWorksheet,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(EditChemicalSolutionControlWorksheetDialog);\r\n","import {\r\n  AddCircleOutline as AddCircleOutlineIcon,\r\n  DeleteOutline as DeleteOutlineIcon,\r\n  Sync as SyncIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { FieldArray, Form, Formik } from \"formik\";\r\nimport React, { PureComponent } from \"react\";\r\nimport {\r\n  reviseChemicalSolutionControlWorksheet,\r\n  toggleReviseChemicalSolutionControlWorksheetDialog,\r\n} from \"../../redux/actions\";\r\nimport { SlideTransition } from \"../../components/Transitions\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { LoadingSpinner } from \"../../components/Miscellaneous\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport { chemicalSolutionControlReviseWorksheetFormValidationSchema } from \"../../constants/validationSchemas\";\r\n\r\nclass ReviseChemicalSolutionControlWorksheetDialog extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dummyOptions: [],\r\n      solutionProcess: \"\",\r\n      tankNumber: \"\",\r\n      tankSize: \"\",\r\n      tankVolume: \"\",\r\n      location: \"\",\r\n      testMethod: \"\",\r\n      frequencyOfTest: \"\",\r\n      temperatureRangeInCelcius: \"\",\r\n      solutionTargetLimits: [{ solution: \"\", min: \"\", target: \"\", max: \"\" }],\r\n      solutionContents: [\r\n        {\r\n          solution: \"\",\r\n          organization: \"IAe\",\r\n          specification: \"Solution Control Limit\",\r\n          value: \"\",\r\n        },\r\n      ],\r\n      specificationReferences: [{ organization: \"\", specification: \"\" }],\r\n      solutionSpecificationReferences: [],\r\n      analysisSolutions: [\r\n        {\r\n          solution: \"\",\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, _prevState) {\r\n    const {\r\n      showReviseChemicalSolutionControlWorksheetDialog,\r\n      selectedChemicalSolutionControlWorksheetToRevise,\r\n    } = this.props;\r\n\r\n    if (\r\n      showReviseChemicalSolutionControlWorksheetDialog !==\r\n        prevProps.showReviseChemicalSolutionControlWorksheetDialog &&\r\n      showReviseChemicalSolutionControlWorksheetDialog &&\r\n      selectedChemicalSolutionControlWorksheetToRevise\r\n    ) {\r\n      let {\r\n        solutionProcess,\r\n        tankNumber,\r\n        tankSize,\r\n        tankVolume,\r\n        location,\r\n        testMethod,\r\n        frequencyOfTest,\r\n        temperatureRangeInCelcius,\r\n        solutionTargetLimits,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      } = selectedChemicalSolutionControlWorksheetToRevise;\r\n      let solutionContents = solutionSpecificationReferences.filter((e) => {\r\n        return e.specification === \"Solution Control Limit\";\r\n      });\r\n      let specificationReferences = solutionSpecificationReferences\r\n        .map(({ organization, specification }) => ({\r\n          organization,\r\n          specification,\r\n        }))\r\n        .filter((e) => {\r\n          return (\r\n            e.organization !== \"IAe\" &&\r\n            e.specification !== \"Solution Control Limit\"\r\n          );\r\n        })\r\n        .filter(\r\n          (v, i, a) =>\r\n            a.findIndex((t) => JSON.stringify(t) === JSON.stringify(v)) === i\r\n        );\r\n      solutionSpecificationReferences = solutionSpecificationReferences.filter(\r\n        (e) => {\r\n          return (\r\n            e.organization !== \"IAe\" &&\r\n            e.specification !== \"Solution Control Limit\"\r\n          );\r\n        }\r\n      );\r\n\r\n      this.setState({\r\n        solutionProcess,\r\n        tankNumber,\r\n        tankSize,\r\n        tankVolume,\r\n        location,\r\n        testMethod,\r\n        frequencyOfTest,\r\n        temperatureRangeInCelcius,\r\n        solutionTargetLimits,\r\n        solutionContents,\r\n        specificationReferences,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      });\r\n    }\r\n  }\r\n\r\n  triggerEditChemicalSolutionControlWorksheet = (values) => {\r\n    const {\r\n      token,\r\n      loading,\r\n      selectedChemicalSolutionControlWorksheetToRevise,\r\n      reviseChemicalSolutionControlWorksheet,\r\n    } = this.props;\r\n    const { id } = jwt_decode(token);\r\n    let newWorksheet = values;\r\n\r\n    if (!loading) {\r\n      let {\r\n        solutionContents,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      } = newWorksheet;\r\n\r\n      newWorksheet.creator = id;\r\n      newWorksheet.revision =\r\n        selectedChemicalSolutionControlWorksheetToRevise?.revision\r\n          ? selectedChemicalSolutionControlWorksheetToRevise?.revision + 1\r\n          : 1;\r\n      newWorksheet.revisedWorksheet =\r\n        selectedChemicalSolutionControlWorksheetToRevise?.id;\r\n      newWorksheet.solutionSpecificationReferences =\r\n        solutionSpecificationReferences.map(\r\n          ({ solution, organization, specification, value }) => ({\r\n            solution,\r\n            organization,\r\n            specification,\r\n            value,\r\n          })\r\n        );\r\n      solutionContents = solutionContents.map(\r\n        ({ solution, organization, specification, value }) => ({\r\n          solution,\r\n          organization,\r\n          specification,\r\n          value,\r\n        })\r\n      );\r\n      newWorksheet.analysisSolutions = analysisSolutions.map(\r\n        ({ solution }) => ({\r\n          solution,\r\n        })\r\n      );\r\n      for (let i = 0; i < solutionContents.length; i++) {\r\n        const e = solutionContents[i];\r\n        newWorksheet.solutionSpecificationReferences.push(e);\r\n      }\r\n      this.setState({ solutionSpecificationReferences: [] });\r\n      reviseChemicalSolutionControlWorksheet(\r\n        selectedChemicalSolutionControlWorksheetToRevise?.id,\r\n        newWorksheet\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      showReviseChemicalSolutionControlWorksheetDialog,\r\n      toggleReviseChemicalSolutionControlWorksheetDialog,\r\n    } = this.props;\r\n    const {\r\n      dummyOptions,\r\n      solutionProcess,\r\n      tankNumber,\r\n      tankSize,\r\n      tankVolume,\r\n      location,\r\n      testMethod,\r\n      frequencyOfTest,\r\n      temperatureRangeInCelcius,\r\n      solutionTargetLimits,\r\n      solutionContents,\r\n      specificationReferences,\r\n      solutionSpecificationReferences,\r\n      analysisSolutions,\r\n    } = this.state;\r\n    let chemicalSolutionControlWorksheetFormInitialValues = {};\r\n\r\n    if (showReviseChemicalSolutionControlWorksheetDialog) {\r\n      chemicalSolutionControlWorksheetFormInitialValues = {\r\n        solutionProcess,\r\n        tankNumber,\r\n        tankSize,\r\n        tankVolume,\r\n        location,\r\n        testMethod,\r\n        frequencyOfTest,\r\n        temperatureRangeInCelcius,\r\n        solutionTargetLimits,\r\n        solutionContents,\r\n        specificationReferences,\r\n        solutionSpecificationReferences,\r\n        analysisSolutions,\r\n      };\r\n    }\r\n    return (\r\n      <Dialog\r\n        open={showReviseChemicalSolutionControlWorksheetDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"xl\"\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleReviseChemicalSolutionControlWorksheetDialog({});\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Revise chemical control worksheet\r\n        </DialogTitle>\r\n        {showReviseChemicalSolutionControlWorksheetDialog ? (\r\n          <Formik\r\n            initialValues={chemicalSolutionControlWorksheetFormInitialValues}\r\n            onSubmit={this.triggerEditChemicalSolutionControlWorksheet}\r\n            validationSchema={\r\n              chemicalSolutionControlReviseWorksheetFormValidationSchema\r\n            }\r\n          >\r\n            {({ setFieldValue, values, touched, errors, handleChange }) => {\r\n              const setSpecificationReferencesValue = (name, value) => {\r\n                setFieldValue(name, value);\r\n              };\r\n              return (\r\n                <Form autoComplete=\"off\">\r\n                  <DialogContent dividers>\r\n                    <Container>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={solutionProcess}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"solutionProcess\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.solutionProcess &&\r\n                                  touched.solutionProcess\r\n                                }\r\n                                helperText={\r\n                                  errors.solutionProcess &&\r\n                                  touched.solutionProcess &&\r\n                                  errors.solutionProcess\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Solution Process\"\r\n                                name=\"solutionProcess\"\r\n                                value={values.solutionProcess}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={tankNumber}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"tankNumber\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.tankNumber && touched.tankNumber}\r\n                                helperText={\r\n                                  errors.tankNumber &&\r\n                                  touched.tankNumber &&\r\n                                  errors.tankNumber\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Tank Number\"\r\n                                name=\"tankNumber\"\r\n                                value={values.tankNumber}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={errors.tankSize && touched.tankSize}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.tankSize &&\r\n                              touched.tankSize &&\r\n                              errors.tankSize\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Tank Size\"\r\n                            name=\"tankSize\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.tankSize}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={errors.tankVolume && touched.tankVolume}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.tankVolume &&\r\n                              touched.tankVolume &&\r\n                              errors.tankVolume\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Tank Volume\"\r\n                            name=\"tankVolume\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.tankVolume}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={location}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"location\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.location && touched.location}\r\n                                helperText={\r\n                                  errors.location &&\r\n                                  touched.location &&\r\n                                  errors.location\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Location\"\r\n                                name=\"location\"\r\n                                value={values.location}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={testMethod}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"testMethod\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={errors.testMethod && touched.testMethod}\r\n                                helperText={\r\n                                  errors.testMethod &&\r\n                                  touched.testMethod &&\r\n                                  errors.testMethod\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Test Method\"\r\n                                name=\"testMethod\"\r\n                                value={values.testMethod}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={frequencyOfTest}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"frequencyOfTest\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.frequencyOfTest &&\r\n                                  touched.frequencyOfTest\r\n                                }\r\n                                helperText={\r\n                                  errors.frequencyOfTest &&\r\n                                  touched.frequencyOfTest &&\r\n                                  errors.frequencyOfTest\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Frequency Of Test\"\r\n                                name=\"frequencyOfTest\"\r\n                                value={values.frequencyOfTest}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            defaultValue={temperatureRangeInCelcius}\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\"temperatureRangeInCelcius\", value);\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.temperatureRangeInCelcius &&\r\n                                  touched.temperatureRangeInCelcius\r\n                                }\r\n                                helperText={\r\n                                  errors.temperatureRangeInCelcius &&\r\n                                  touched.temperatureRangeInCelcius &&\r\n                                  errors.temperatureRangeInCelcius\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Temperature Range (°C)\"\r\n                                name=\"temperatureRangeInCelcius\"\r\n                                value={values.temperatureRangeInCelcius}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Solution Target Limit\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionTargetLimits\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionTargetLimits.length > 0 &&\r\n                                  values.solutionTargetLimits.map(\r\n                                    (solutionTargetLimit, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .solution &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content To Be Analyzed\"\r\n                                            name={`solutionTargetLimits.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .min &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].min\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Minimum\"\r\n                                            name={`solutionTargetLimits.${index}.min`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .min\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .target &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].target\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Target\"\r\n                                            name={`solutionTargetLimits.${index}.target`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .target\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionTargetLimits &&\r\n                                              errors.solutionTargetLimits[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.solutionTargetLimits[index]\r\n                                                .max &&\r\n                                              touched.solutionTargetLimits &&\r\n                                              touched.solutionTargetLimits[\r\n                                                index\r\n                                              ].max\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Maximum\"\r\n                                            name={`solutionTargetLimits.${index}.max`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionTargetLimits[index]\r\n                                                .max\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.solutionTargetLimits?.length >\r\n                                        1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.solutionTargetLimits.length <= 14 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          solution: \"\",\r\n                                          min: \"\",\r\n                                          target: \"\",\r\n                                          max: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Specification References: Solutions\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionContents\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionContents.length > 0 &&\r\n                                  values.solutionContents.map(\r\n                                    (solutionContent, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionContents &&\r\n                                              errors.solutionContents[index] &&\r\n                                              errors.solutionContents[index]\r\n                                                .solution &&\r\n                                              touched.solutionContents &&\r\n                                              touched.solutionContents[index]\r\n                                                .solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content to be Analyzed\"\r\n                                            name={`solutionContents.${index}.solution`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `solutionContents.${index}.solution`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionContents[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionContents &&\r\n                                              errors.solutionContents[index] &&\r\n                                              errors.solutionContents[index]\r\n                                                .value &&\r\n                                              touched.solutionContents &&\r\n                                              touched.solutionContents[index]\r\n                                                .value\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"IAe Solution Control Limit\"\r\n                                            name={`solutionContents.${index}.value`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `solutionContents.${index}.value`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.solutionContents[index]\r\n                                                .value\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.solutionContents?.length > 1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.solutionContents.length <= 14 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() => {\r\n                                        push({\r\n                                          solution: \"\",\r\n                                          organization: \"IAe\",\r\n                                          specification:\r\n                                            \"Solution Control Limit\",\r\n                                          value: \"\",\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Specification References: Specifications\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"specificationReferences\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.specificationReferences.length > 0 &&\r\n                                  values.specificationReferences.map(\r\n                                    (specificationReference, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.specificationReferences &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ].organization &&\r\n                                              touched.specificationReferences &&\r\n                                              touched.specificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Name\"\r\n                                            name={`specificationReferences.${index}.organization`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `specificationReferences.${index}.organization`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.specificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.specificationReferences &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors.specificationReferences[\r\n                                                index\r\n                                              ].specification &&\r\n                                              touched.specificationReferences &&\r\n                                              touched.specificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Specification\"\r\n                                            name={`specificationReferences.${index}.specification`}\r\n                                            onChange={(event) => {\r\n                                              setSpecificationReferencesValue(\r\n                                                `specificationReferences.${index}.specification`,\r\n                                                event.target.value\r\n                                              );\r\n                                            }}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.specificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.specificationReferences\r\n                                          ?.length > 1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.specificationReferences.length <= 9 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          organization: \"\",\r\n                                          specification: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Specification References: Values\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"solutionSpecificationReferences\"\r\n                            render={({ insert, remove, push }) => (\r\n                              <div>\r\n                                {values.solutionSpecificationReferences.length >\r\n                                  0 &&\r\n                                  values.solutionSpecificationReferences.map(\r\n                                    (specificationReferencesValue, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Solution Content to be Analyzed\"\r\n                                            name={`solutionSpecificationReferences.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Organization\"\r\n                                            name={`solutionSpecificationReferences.${index}.organization`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].organization\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            disabled\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Specification\"\r\n                                            name={`solutionSpecificationReferences.${index}.specification`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].specification\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.solutionSpecificationReferences &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ] &&\r\n                                              errors\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value &&\r\n                                              touched.solutionSpecificationReferences &&\r\n                                              touched\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Value\"\r\n                                            name={`solutionSpecificationReferences.${index}.value`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values\r\n                                                .solutionSpecificationReferences[\r\n                                                index\r\n                                              ].value\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                <div\r\n                                  style={{\r\n                                    alignItems: \"center\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                  }}\r\n                                >\r\n                                  <IconButton\r\n                                    aria-label=\"add\"\r\n                                    color=\"primary\"\r\n                                    onClick={() => {\r\n                                      const {\r\n                                        solutionContents,\r\n                                        specificationReferences,\r\n                                      } = values;\r\n                                      const scLength = solutionContents.length;\r\n                                      const srLength =\r\n                                        specificationReferences.length;\r\n\r\n                                      setFieldValue(\r\n                                        `solutionSpecificationReferences`,\r\n                                        []\r\n                                      );\r\n                                      for (let i = 0; i < scLength; i++) {\r\n                                        for (let j = 0; j < srLength; j++) {\r\n                                          push({\r\n                                            solution:\r\n                                              values.solutionContents[i]\r\n                                                .solution,\r\n                                            organization:\r\n                                              values.specificationReferences[j]\r\n                                                .organization,\r\n                                            specification:\r\n                                              values.specificationReferences[j]\r\n                                                .specification,\r\n                                            value: \"\",\r\n                                          });\r\n                                        }\r\n                                      }\r\n                                    }}\r\n                                  >\r\n                                    <SyncIcon />\r\n                                  </IconButton>\r\n                                </div>\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                        className=\"mt-4 pt-4\"\r\n                      >\r\n                        Chemical Solution Analysis: Solutions\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <FieldArray\r\n                            name=\"analysisSolutions\"\r\n                            render={({ remove, push }) => (\r\n                              <div>\r\n                                {values.analysisSolutions.length > 0 &&\r\n                                  values.analysisSolutions.map(\r\n                                    (_analysisSolution, index) => (\r\n                                      <Grid container spacing={3} key={index}>\r\n                                        <Grid item xs>\r\n                                          <TextField\r\n                                            className=\"mb-4\"\r\n                                            error={\r\n                                              errors.analysisSolutions &&\r\n                                              errors.analysisSolutions[index] &&\r\n                                              errors.analysisSolutions[index]\r\n                                                .solution &&\r\n                                              touched.analysisSolutions &&\r\n                                              touched.analysisSolutions[index]\r\n                                                .solution\r\n                                            }\r\n                                            fullWidth\r\n                                            InputLabelProps={{\r\n                                              shrink: true,\r\n                                            }}\r\n                                            label=\"Chemical Solution Name\"\r\n                                            name={`analysisSolutions.${index}.solution`}\r\n                                            onChange={handleChange}\r\n                                            type=\"text\"\r\n                                            value={\r\n                                              values.analysisSolutions[index]\r\n                                                .solution\r\n                                            }\r\n                                          />\r\n                                        </Grid>\r\n                                        {values.analysisSolutions?.length >\r\n                                        1 ? (\r\n                                          <Grid item xs={1}>\r\n                                            <IconButton\r\n                                              aria-label=\"delete\"\r\n                                              color=\"secondary\"\r\n                                              onClick={() => remove(index)}\r\n                                            >\r\n                                              <DeleteOutlineIcon />\r\n                                            </IconButton>\r\n                                          </Grid>\r\n                                        ) : null}\r\n                                      </Grid>\r\n                                    )\r\n                                  )}\r\n                                {values.analysisSolutions.length <= 29 ? (\r\n                                  <div\r\n                                    style={{\r\n                                      alignItems: \"center\",\r\n                                      display: \"flex\",\r\n                                      justifyContent: \"center\",\r\n                                    }}\r\n                                  >\r\n                                    <IconButton\r\n                                      aria-label=\"add\"\r\n                                      color=\"primary\"\r\n                                      onClick={() =>\r\n                                        push({\r\n                                          solution: \"\",\r\n                                        })\r\n                                      }\r\n                                    >\r\n                                      <AddCircleOutlineIcon />\r\n                                    </IconButton>\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Container>\r\n                  </DialogContent>\r\n                  <DialogActions style={{ margin: 4 }}>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"secondary\"\r\n                      onClick={\r\n                        !loading\r\n                          ? () => {\r\n                              toggleReviseChemicalSolutionControlWorksheetDialog(\r\n                                {}\r\n                              );\r\n                            }\r\n                          : null\r\n                      }\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Cancel</span>\r\n                    </Button>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type={loading ? \"button\" : \"submit\"}\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Submit</span>\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        ) : null}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, qaChemicalSolutionControl }) => {\r\n  const { token } = auth;\r\n  const {\r\n    loading,\r\n    showReviseChemicalSolutionControlWorksheetDialog,\r\n    selectedChemicalSolutionControlWorksheetToRevise,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    token,\r\n    loading,\r\n    showReviseChemicalSolutionControlWorksheetDialog,\r\n    selectedChemicalSolutionControlWorksheetToRevise,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleReviseChemicalSolutionControlWorksheetDialog,\r\n  reviseChemicalSolutionControlWorksheet,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(ReviseChemicalSolutionControlWorksheetDialog);\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport {\r\n  toggleDeleteChemicalSolutionControlWorksheetDialog,\r\n  deleteChemicalSolutionControlWorksheet,\r\n} from '../../redux/actions';\r\nimport { SlideTransition } from '../../components/Transitions';\r\n\r\nclass DeleteChemicalSolutionControlWorksheetDialog extends PureComponent {\r\n  render() {\r\n    const {\r\n      showDeleteChemicalSolutionControlWorksheetDialog,\r\n      selectedChemicalSolutionControlWorksheetToDelete,\r\n      toggleDeleteChemicalSolutionControlWorksheetDialog,\r\n      deleteChemicalSolutionControlWorksheet,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        open={showDeleteChemicalSolutionControlWorksheetDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleDeleteChemicalSolutionControlWorksheetDialog({});\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Confirm to delete worksheet\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure you want to permanently delete this worksheet?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              toggleDeleteChemicalSolutionControlWorksheetDialog({});\r\n            }}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              deleteChemicalSolutionControlWorksheet(\r\n                selectedChemicalSolutionControlWorksheetToDelete?.id,\r\n                {\r\n                  revisedWorksheet:\r\n                    selectedChemicalSolutionControlWorksheetToDelete?.revisedWorksheet,\r\n                }\r\n              );\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ qaChemicalSolutionControl }) => {\r\n  const {\r\n    showDeleteChemicalSolutionControlWorksheetDialog,\r\n    selectedChemicalSolutionControlWorksheetToDelete,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    showDeleteChemicalSolutionControlWorksheetDialog,\r\n    selectedChemicalSolutionControlWorksheetToDelete,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleDeleteChemicalSolutionControlWorksheetDialog,\r\n  deleteChemicalSolutionControlWorksheet,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(DeleteChemicalSolutionControlWorksheetDialog);\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport {\r\n  toggleCreateChemicalSolutionControlRecordDialog,\r\n  createChemicalSolutionControlRecord,\r\n} from \"../../redux/actions\";\r\nimport { LoadingSpinner } from \"../../components/Miscellaneous\";\r\nimport { SlideTransition } from \"../../components/Transitions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { chemicalSolutionControlCreateRecordFormValidationSchema } from \"../../constants/validationSchemas\";\r\n\r\nclass CreateChemicalSolutionControlRecordDialog extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sampleTakenDate: \"\",\r\n      sampleTakenTime: \"\",\r\n      agitationInMinutes: \"\",\r\n      temperatureInCelcius: \"\",\r\n      sampleAnalysisDate: \"\",\r\n      sampleAnalysisTime: \"\",\r\n      analysisResult0: \"\",\r\n      analysisResult1: \"\",\r\n      analysisResult2: \"\",\r\n      analysisResult3: \"\",\r\n      analysisResult4: \"\",\r\n      analysisResult5: \"\",\r\n      analysisResult6: \"\",\r\n      analysisResult7: \"\",\r\n      analysisResult8: \"\",\r\n      analysisResult9: \"\",\r\n      analysisResult10: \"\",\r\n      analysisResult11: \"\",\r\n      analysisResult12: \"\",\r\n      analysisResult13: \"\",\r\n      analysisResult14: \"\",\r\n      analysisResult15: \"\",\r\n      analysisResult16: \"\",\r\n      analysisResult17: \"\",\r\n      analysisResult18: \"\",\r\n      analysisResult19: \"\",\r\n      analysisResult20: \"\",\r\n      analysisResult21: \"\",\r\n      analysisResult22: \"\",\r\n      analysisResult23: \"\",\r\n      analysisResult24: \"\",\r\n      analysisResult25: \"\",\r\n      analysisResult26: \"\",\r\n      analysisResult27: \"\",\r\n      analysisResult28: \"\",\r\n      analysisResult29: \"\",\r\n      analysisSolutions: [],\r\n      remarks: \"\",\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    const { loading, selectedChemicalSolutionControlWorksheet } = props;\r\n    const { analysisSolutions } = selectedChemicalSolutionControlWorksheet;\r\n\r\n    if (!loading) {\r\n      return {\r\n        analysisSolutions: analysisSolutions,\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  triggerCreateChemicalSolutionControlRecord = (values) => {\r\n    const {\r\n      token,\r\n      loading,\r\n      selectedChemicalSolutionControlWorksheet,\r\n      createChemicalSolutionControlRecord,\r\n    } = this.props;\r\n    const { id } = selectedChemicalSolutionControlWorksheet;\r\n    const {\r\n      sampleTakenDate,\r\n      sampleTakenTime,\r\n      agitationInMinutes,\r\n      temperatureInCelcius,\r\n      sampleAnalysisDate,\r\n      sampleAnalysisTime,\r\n      analysisResult0,\r\n      analysisResult1,\r\n      analysisResult2,\r\n      analysisResult3,\r\n      analysisResult4,\r\n      analysisResult5,\r\n      analysisResult6,\r\n      analysisResult7,\r\n      analysisResult8,\r\n      analysisResult9,\r\n      analysisResult10,\r\n      analysisResult11,\r\n      analysisResult12,\r\n      analysisResult13,\r\n      analysisResult14,\r\n      analysisResult15,\r\n      analysisResult16,\r\n      analysisResult17,\r\n      analysisResult18,\r\n      analysisResult19,\r\n      analysisResult20,\r\n      analysisResult21,\r\n      analysisResult22,\r\n      analysisResult23,\r\n      analysisResult24,\r\n      analysisResult25,\r\n      analysisResult26,\r\n      analysisResult27,\r\n      analysisResult28,\r\n      analysisResult29,\r\n      remarks,\r\n    } = values;\r\n    const analysisResults = [\r\n      analysisResult0,\r\n      analysisResult1,\r\n      analysisResult2,\r\n      analysisResult3,\r\n      analysisResult4,\r\n      analysisResult5,\r\n      analysisResult6,\r\n      analysisResult7,\r\n      analysisResult8,\r\n      analysisResult9,\r\n      analysisResult10,\r\n      analysisResult11,\r\n      analysisResult12,\r\n      analysisResult13,\r\n      analysisResult14,\r\n      analysisResult15,\r\n      analysisResult16,\r\n      analysisResult17,\r\n      analysisResult18,\r\n      analysisResult19,\r\n      analysisResult20,\r\n      analysisResult21,\r\n      analysisResult22,\r\n      analysisResult23,\r\n      analysisResult24,\r\n      analysisResult25,\r\n      analysisResult26,\r\n      analysisResult27,\r\n      analysisResult28,\r\n      analysisResult29,\r\n    ].slice(\r\n      0,\r\n      selectedChemicalSolutionControlWorksheet?.analysisSolutions?.length\r\n    );\r\n\r\n    if (!loading) {\r\n      createChemicalSolutionControlRecord(id, {\r\n        creator: jwt_decode(token)?.id,\r\n        sampleTakenDate,\r\n        sampleTakenTime,\r\n        agitationInMinutes,\r\n        temperatureInCelcius,\r\n        sampleAnalysisDate,\r\n        sampleAnalysisTime,\r\n        analysisResults,\r\n        remarks,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      showCreateChemicalSolutionControlRecordDialog,\r\n      toggleCreateChemicalSolutionControlRecordDialog,\r\n      selectedChemicalSolutionControlWorksheet,\r\n    } = this.props;\r\n    const {\r\n      sampleTakenDate,\r\n      sampleTakenTime,\r\n      agitationInMinutes,\r\n      temperatureInCelcius,\r\n      sampleAnalysisDate,\r\n      sampleAnalysisTime,\r\n      analysisResult0,\r\n      analysisResult1,\r\n      analysisResult2,\r\n      analysisResult3,\r\n      analysisResult4,\r\n      analysisResult5,\r\n      analysisResult6,\r\n      analysisResult7,\r\n      analysisResult8,\r\n      analysisResult9,\r\n      analysisResult10,\r\n      analysisResult11,\r\n      analysisResult12,\r\n      analysisResult13,\r\n      analysisResult14,\r\n      analysisResult15,\r\n      analysisResult16,\r\n      analysisResult17,\r\n      analysisResult18,\r\n      analysisResult19,\r\n      analysisResult20,\r\n      analysisResult21,\r\n      analysisResult22,\r\n      analysisResult23,\r\n      analysisResult24,\r\n      analysisResult25,\r\n      analysisResult26,\r\n      analysisResult27,\r\n      analysisResult28,\r\n      analysisResult29,\r\n      remarks,\r\n    } = this.state;\r\n    const analysisSolutions =\r\n      selectedChemicalSolutionControlWorksheet?.analysisSolutions ?? [];\r\n    let chemicalSolutionControlRecordFormInitialValues = {};\r\n\r\n    if (showCreateChemicalSolutionControlRecordDialog) {\r\n      chemicalSolutionControlRecordFormInitialValues = {\r\n        sampleTakenDate,\r\n        sampleTakenTime,\r\n        agitationInMinutes,\r\n        temperatureInCelcius,\r\n        sampleAnalysisDate,\r\n        sampleAnalysisTime,\r\n        analysisResult0,\r\n        analysisResult1,\r\n        analysisResult2,\r\n        analysisResult3,\r\n        analysisResult4,\r\n        analysisResult5,\r\n        analysisResult6,\r\n        analysisResult7,\r\n        analysisResult8,\r\n        analysisResult9,\r\n        analysisResult10,\r\n        analysisResult11,\r\n        analysisResult12,\r\n        analysisResult13,\r\n        analysisResult14,\r\n        analysisResult15,\r\n        analysisResult16,\r\n        analysisResult17,\r\n        analysisResult18,\r\n        analysisResult19,\r\n        analysisResult20,\r\n        analysisResult21,\r\n        analysisResult22,\r\n        analysisResult23,\r\n        analysisResult24,\r\n        analysisResult25,\r\n        analysisResult26,\r\n        analysisResult27,\r\n        analysisResult28,\r\n        analysisResult29,\r\n        remarks,\r\n      };\r\n    }\r\n\r\n    return (\r\n      <Dialog\r\n        open={showCreateChemicalSolutionControlRecordDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"xl\"\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleCreateChemicalSolutionControlRecordDialog();\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Create a new chemical solution control record\r\n        </DialogTitle>\r\n        {showCreateChemicalSolutionControlRecordDialog ? (\r\n          <Formik\r\n            initialValues={chemicalSolutionControlRecordFormInitialValues}\r\n            onSubmit={this.triggerCreateChemicalSolutionControlRecord}\r\n            validationSchema={\r\n              chemicalSolutionControlCreateRecordFormValidationSchema\r\n            }\r\n          >\r\n            {({ values, touched, errors, handleChange }) => {\r\n              return (\r\n                <Form autoComplete=\"off\">\r\n                  <DialogContent dividers>\r\n                    <Container>\r\n                      <Grid\r\n                        container\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Sample Taken\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.sampleTakenDate && touched.sampleTakenDate\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.sampleTakenDate &&\r\n                              touched.sampleTakenDate &&\r\n                              errors.sampleTakenDate\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Date\"\r\n                            name=\"sampleTakenDate\"\r\n                            onChange={handleChange}\r\n                            type=\"date\"\r\n                            value={values.sampleTakenDate}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.sampleTakenTime && touched.sampleTakenTime\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.sampleTakenTime &&\r\n                              touched.sampleTakenTime &&\r\n                              errors.sampleTakenTime\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Time\"\r\n                            name=\"sampleTakenTime\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.sampleTakenTime}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.agitationInMinutes &&\r\n                              touched.agitationInMinutes\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.agitationInMinutes &&\r\n                              touched.agitationInMinutes &&\r\n                              errors.agitationInMinutes\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Agitation (minutes)\"\r\n                            name=\"agitationInMinutes\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.agitationInMinutes}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.temperatureInCelcius &&\r\n                              touched.temperatureInCelcius\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.temperatureInCelcius &&\r\n                              touched.temperatureInCelcius &&\r\n                              errors.temperatureInCelcius\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Temperature (°C)\"\r\n                            name=\"temperatureInCelcius\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.temperatureInCelcius}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Sample Analysis\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.sampleAnalysisDate &&\r\n                              touched.sampleAnalysisDate\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.sampleAnalysisDate &&\r\n                              touched.sampleAnalysisDate &&\r\n                              errors.sampleAnalysisDate\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Date\"\r\n                            name=\"sampleAnalysisDate\"\r\n                            onChange={handleChange}\r\n                            type=\"date\"\r\n                            value={values.sampleAnalysisDate}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.sampleAnalysisTime &&\r\n                              touched.sampleAnalysisTime\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.sampleAnalysisTime &&\r\n                              touched.sampleAnalysisTime &&\r\n                              errors.sampleAnalysisTime\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Time\"\r\n                            name=\"sampleAnalysisTime\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.sampleAnalysisTime}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Results\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[0] && !analysisSolutions[1]}\r\n                      >\r\n                        {analysisSolutions[0] ? (\r\n                          <Grid item xs>\r\n                            <TextField\r\n                              error={\r\n                                errors.analysisResult0 &&\r\n                                touched.analysisResult0\r\n                              }\r\n                              fullWidth\r\n                              helperText={\r\n                                errors.analysisResult0 &&\r\n                                touched.analysisResult0 &&\r\n                                errors.analysisResult0\r\n                              }\r\n                              hidden={!analysisSolutions[0]}\r\n                              InputLabelProps={{ shrink: true }}\r\n                              label={analysisSolutions[0]?.solution}\r\n                              name=\"analysisResult0\"\r\n                              onChange={handleChange}\r\n                              type=\"text\"\r\n                              value={values.analysisResult0}\r\n                            />\r\n                          </Grid>\r\n                        ) : null}\r\n                        {analysisSolutions[1] ? (\r\n                          <Grid item xs>\r\n                            <TextField\r\n                              error={\r\n                                errors.analysisResult1 &&\r\n                                touched.analysisResult1\r\n                              }\r\n                              fullWidth\r\n                              helperText={\r\n                                errors.analysisResult1 &&\r\n                                touched.analysisResult1 &&\r\n                                errors.analysisResult1\r\n                              }\r\n                              hidden={!analysisSolutions[1]}\r\n                              InputLabelProps={{ shrink: true }}\r\n                              label={analysisSolutions[1]?.solution}\r\n                              name=\"analysisResult1\"\r\n                              onChange={handleChange}\r\n                              type=\"text\"\r\n                              value={values.analysisResult1}\r\n                            />\r\n                          </Grid>\r\n                        ) : null}\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[2] && !analysisSolutions[3]}\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult2 && touched.analysisResult2\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult2 &&\r\n                              touched.analysisResult2 &&\r\n                              errors.analysisResult2\r\n                            }\r\n                            hidden={!analysisSolutions[2]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[2]?.solution}\r\n                            name=\"analysisResult2\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult2}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult3 && touched.analysisResult3\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult3 &&\r\n                              touched.analysisResult3 &&\r\n                              errors.analysisResult3\r\n                            }\r\n                            hidden={!analysisSolutions[3]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[3]?.solution}\r\n                            name=\"analysisResult3\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult3}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[4] && !analysisSolutions[5]}\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult4 && touched.analysisResult4\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult4 &&\r\n                              touched.analysisResult4 &&\r\n                              errors.analysisResult4\r\n                            }\r\n                            hidden={!analysisSolutions[4]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[4]?.solution}\r\n                            name=\"analysisResult4\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult4}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult5 && touched.analysisResult5\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult5 &&\r\n                              touched.analysisResult5 &&\r\n                              errors.analysisResult5\r\n                            }\r\n                            hidden={!analysisSolutions[5]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[5]?.solution}\r\n                            name=\"analysisResult5\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult5}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[6] && !analysisSolutions[7]}\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult6 && touched.analysisResult6\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult6 &&\r\n                              touched.analysisResult6 &&\r\n                              errors.analysisResult6\r\n                            }\r\n                            hidden={!analysisSolutions[6]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[6]?.solution}\r\n                            name=\"analysisResult6\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult6}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult7 && touched.analysisResult7\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult7 &&\r\n                              touched.analysisResult7 &&\r\n                              errors.analysisResult7\r\n                            }\r\n                            hidden={!analysisSolutions[7]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[7]?.solution}\r\n                            name=\"analysisResult7\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult7}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[8] && !analysisSolutions[9]}\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult8 && touched.analysisResult8\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult8 &&\r\n                              touched.analysisResult8 &&\r\n                              errors.analysisResult8\r\n                            }\r\n                            hidden={!analysisSolutions[8]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[8]?.solution}\r\n                            name=\"analysisResult8\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult8}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult9 && touched.analysisResult9\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult9 &&\r\n                              touched.analysisResult9 &&\r\n                              errors.analysisResult9\r\n                            }\r\n                            hidden={!analysisSolutions[9]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[9]?.solution}\r\n                            name=\"analysisResult9\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult9}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[10] && !analysisSolutions[11]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult10 &&\r\n                              touched.analysisResult10\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult10 &&\r\n                              touched.analysisResult10 &&\r\n                              errors.analysisResult10\r\n                            }\r\n                            hidden={!analysisSolutions[10]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[10]?.solution}\r\n                            name=\"analysisResult10\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult10}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult11 &&\r\n                              touched.analysisResult11\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult11 &&\r\n                              touched.analysisResult11 &&\r\n                              errors.analysisResult11\r\n                            }\r\n                            hidden={!analysisSolutions[11]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[11]?.solution}\r\n                            name=\"analysisResult11\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult11}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[12] && !analysisSolutions[13]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult12 &&\r\n                              touched.analysisResult12\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult12 &&\r\n                              touched.analysisResult12 &&\r\n                              errors.analysisResult12\r\n                            }\r\n                            hidden={!analysisSolutions[12]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[12]?.solution}\r\n                            name=\"analysisResult12\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult12}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult13 &&\r\n                              touched.analysisResult13\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult13 &&\r\n                              touched.analysisResult13 &&\r\n                              errors.analysisResult13\r\n                            }\r\n                            hidden={!analysisSolutions[13]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[13]?.solution}\r\n                            name=\"analysisResult13\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult13}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[14] && !analysisSolutions[15]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult14 &&\r\n                              touched.analysisResult14\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult14 &&\r\n                              touched.analysisResult14 &&\r\n                              errors.analysisResult14\r\n                            }\r\n                            hidden={!analysisSolutions[14]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[14]?.solution}\r\n                            name=\"analysisResult14\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult14}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult15 &&\r\n                              touched.analysisResult15\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult15 &&\r\n                              touched.analysisResult15 &&\r\n                              errors.analysisResult15\r\n                            }\r\n                            hidden={!analysisSolutions[15]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[15]?.solution}\r\n                            name=\"analysisResult15\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult15}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[16] && !analysisSolutions[17]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult16 &&\r\n                              touched.analysisResult16\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult16 &&\r\n                              touched.analysisResult16 &&\r\n                              errors.analysisResult16\r\n                            }\r\n                            hidden={!analysisSolutions[16]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[16]?.solution}\r\n                            name=\"analysisResult16\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult16}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult17 &&\r\n                              touched.analysisResult17\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult17 &&\r\n                              touched.analysisResult17 &&\r\n                              errors.analysisResult17\r\n                            }\r\n                            hidden={!analysisSolutions[17]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[17]?.solution}\r\n                            name=\"analysisResult17\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult17}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[18] && !analysisSolutions[19]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult18 &&\r\n                              touched.analysisResult18\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult18 &&\r\n                              touched.analysisResult18 &&\r\n                              errors.analysisResult18\r\n                            }\r\n                            hidden={!analysisSolutions[18]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[18]?.solution}\r\n                            name=\"analysisResult18\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult18}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult19 &&\r\n                              touched.analysisResult19\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult19 &&\r\n                              touched.analysisResult19 &&\r\n                              errors.analysisResult19\r\n                            }\r\n                            hidden={!analysisSolutions[19]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[19]?.solution}\r\n                            name=\"analysisResult19\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult19}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[20] && !analysisSolutions[21]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult20 &&\r\n                              touched.analysisResult20\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult20 &&\r\n                              touched.analysisResult20 &&\r\n                              errors.analysisResult20\r\n                            }\r\n                            hidden={!analysisSolutions[20]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[20]?.solution}\r\n                            name=\"analysisResult20\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult20}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult21 &&\r\n                              touched.analysisResult21\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult21 &&\r\n                              touched.analysisResult21 &&\r\n                              errors.analysisResult21\r\n                            }\r\n                            hidden={!analysisSolutions[21]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[21]?.solution}\r\n                            name=\"analysisResult21\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult21}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[22] && !analysisSolutions[23]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult22 &&\r\n                              touched.analysisResult22\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult22 &&\r\n                              touched.analysisResult22 &&\r\n                              errors.analysisResult22\r\n                            }\r\n                            hidden={!analysisSolutions[22]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[22]?.solution}\r\n                            name=\"analysisResult22\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult22}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult23 &&\r\n                              touched.analysisResult23\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult23 &&\r\n                              touched.analysisResult23 &&\r\n                              errors.analysisResult23\r\n                            }\r\n                            hidden={!analysisSolutions[23]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[23]?.solution}\r\n                            name=\"analysisResult23\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult23}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[24] && !analysisSolutions[25]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult24 &&\r\n                              touched.analysisResult24\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult24 &&\r\n                              touched.analysisResult24 &&\r\n                              errors.analysisResult24\r\n                            }\r\n                            hidden={!analysisSolutions[24]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[24]?.solution}\r\n                            name=\"analysisResult24\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult24}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult25 &&\r\n                              touched.analysisResult25\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult25 &&\r\n                              touched.analysisResult25 &&\r\n                              errors.analysisResult25\r\n                            }\r\n                            hidden={!analysisSolutions[25]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[25]?.solution}\r\n                            name=\"analysisResult25\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult25}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[26] && !analysisSolutions[27]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult26 &&\r\n                              touched.analysisResult26\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult26 &&\r\n                              touched.analysisResult26 &&\r\n                              errors.analysisResult26\r\n                            }\r\n                            hidden={!analysisSolutions[26]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[26]?.solution}\r\n                            name=\"analysisResult26\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult26}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult27 &&\r\n                              touched.analysisResult27\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult27 &&\r\n                              touched.analysisResult27 &&\r\n                              errors.analysisResult27\r\n                            }\r\n                            hidden={!analysisSolutions[27]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[27]?.solution}\r\n                            name=\"analysisResult27\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult27}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[28] && !analysisSolutions[29]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult28 &&\r\n                              touched.analysisResult28\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult28 &&\r\n                              touched.analysisResult28 &&\r\n                              errors.analysisResult28\r\n                            }\r\n                            hidden={!analysisSolutions[28]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[28]?.solution}\r\n                            name=\"analysisResult28\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult28}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult29 &&\r\n                              touched.analysisResult29\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult29 &&\r\n                              touched.analysisResult29 &&\r\n                              errors.analysisResult29\r\n                            }\r\n                            hidden={!analysisSolutions[29]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[29]?.solution}\r\n                            name=\"analysisResult29\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult29}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Notes\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={errors.remarks && touched.remarks}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.remarks &&\r\n                              touched.remarks &&\r\n                              errors.remarks\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Remarks\"\r\n                            name=\"remarks\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.remarks}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Container>\r\n                  </DialogContent>\r\n                  <DialogActions style={{ margin: 4 }}>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"secondary\"\r\n                      onClick={\r\n                        !loading\r\n                          ? () => {\r\n                              toggleCreateChemicalSolutionControlRecordDialog();\r\n                            }\r\n                          : null\r\n                      }\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Cancel</span>\r\n                    </Button>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"primary\"\r\n                      onClick={() => {}}\r\n                      type={loading ? \"button\" : \"submit\"}\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Submit</span>\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        ) : null}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, qaChemicalSolutionControl }) => {\r\n  const { token } = auth;\r\n  const {\r\n    loading,\r\n    showCreateChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    token,\r\n    loading,\r\n    showCreateChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleCreateChemicalSolutionControlRecordDialog,\r\n  createChemicalSolutionControlRecord,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(CreateChemicalSolutionControlRecordDialog);\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport {\r\n  toggleEditChemicalSolutionControlRecordDialog,\r\n  editChemicalSolutionControlRecord,\r\n} from \"../../redux/actions\";\r\nimport { LoadingSpinner } from \"../../components/Miscellaneous\";\r\nimport { SlideTransition } from \"../../components/Transitions\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { chemicalSolutionControlEditRecordFormValidationSchema } from \"../../constants/validationSchemas\";\r\n\r\nclass EditChemicalSolutionControlRecordDialog extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sampleTakenDate: \"\",\r\n      sampleTakenTime: \"\",\r\n      agitationInMinutes: \"\",\r\n      temperatureInCelcius: \"\",\r\n      sampleAnalysisDate: \"\",\r\n      sampleAnalysisTime: \"\",\r\n      analysisResult0: \"\",\r\n      analysisResult1: \"\",\r\n      analysisResult2: \"\",\r\n      analysisResult3: \"\",\r\n      analysisResult4: \"\",\r\n      analysisResult5: \"\",\r\n      analysisResult6: \"\",\r\n      analysisResult7: \"\",\r\n      analysisResult8: \"\",\r\n      analysisResult9: \"\",\r\n      analysisResult10: \"\",\r\n      analysisResult11: \"\",\r\n      analysisResult12: \"\",\r\n      analysisResult13: \"\",\r\n      analysisResult14: \"\",\r\n      analysisResult15: \"\",\r\n      analysisResult16: \"\",\r\n      analysisResult17: \"\",\r\n      analysisResult18: \"\",\r\n      analysisResult19: \"\",\r\n      analysisResult20: \"\",\r\n      analysisResult21: \"\",\r\n      analysisResult22: \"\",\r\n      analysisResult23: \"\",\r\n      analysisResult24: \"\",\r\n      analysisResult25: \"\",\r\n      analysisResult26: \"\",\r\n      analysisResult27: \"\",\r\n      analysisResult28: \"\",\r\n      analysisResult29: \"\",\r\n      analysisSolutions: [],\r\n      remarks: \"\",\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    const { loading, selectedChemicalSolutionControlWorksheet } = props;\r\n    const { analysisSolutions } = selectedChemicalSolutionControlWorksheet;\r\n\r\n    if (!loading) {\r\n      return {\r\n        analysisSolutions: analysisSolutions,\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  componentDidUpdate(prevProps, _prevState) {\r\n    const {\r\n      showEditChemicalSolutionControlRecordDialog,\r\n      selectedChemicalSolutionControlWorksheet,\r\n      selectedChemicalSolutionControlRecord,\r\n    } = this.props;\r\n\r\n    if (\r\n      showEditChemicalSolutionControlRecordDialog !==\r\n        prevProps.showEditChemicalSolutionControlRecordDialog &&\r\n      showEditChemicalSolutionControlRecordDialog &&\r\n      selectedChemicalSolutionControlWorksheet &&\r\n      selectedChemicalSolutionControlRecord\r\n    ) {\r\n      let {\r\n        sampleTakenDate,\r\n        sampleTakenTime,\r\n        agitationInMinutes,\r\n        temperatureInCelcius,\r\n        sampleAnalysisDate,\r\n        sampleAnalysisTime,\r\n        analysisResult0,\r\n        analysisResult1,\r\n        analysisResult2,\r\n        analysisResult3,\r\n        analysisResult4,\r\n        analysisResult5,\r\n        analysisResult6,\r\n        analysisResult7,\r\n        analysisResult8,\r\n        analysisResult9,\r\n        analysisResult10,\r\n        analysisResult11,\r\n        analysisResult12,\r\n        analysisResult13,\r\n        analysisResult14,\r\n        analysisResult15,\r\n        analysisResult16,\r\n        analysisResult17,\r\n        analysisResult18,\r\n        analysisResult19,\r\n        analysisResult20,\r\n        analysisResult21,\r\n        analysisResult22,\r\n        analysisResult23,\r\n        analysisResult24,\r\n        analysisResult25,\r\n        analysisResult26,\r\n        analysisResult27,\r\n        analysisResult28,\r\n        analysisResult29,\r\n        remarks,\r\n      } = selectedChemicalSolutionControlRecord;\r\n\r\n      this.setState({\r\n        sampleTakenDate: sampleTakenDate.substr(0, 10),\r\n        sampleTakenTime,\r\n        agitationInMinutes,\r\n        temperatureInCelcius,\r\n        sampleAnalysisDate: sampleAnalysisDate.substr(0, 10),\r\n        sampleAnalysisTime,\r\n        analysisResult0,\r\n        analysisResult1,\r\n        analysisResult2,\r\n        analysisResult3,\r\n        analysisResult4,\r\n        analysisResult5,\r\n        analysisResult6,\r\n        analysisResult7,\r\n        analysisResult8,\r\n        analysisResult9,\r\n        analysisResult10,\r\n        analysisResult11,\r\n        analysisResult12,\r\n        analysisResult13,\r\n        analysisResult14,\r\n        analysisResult15,\r\n        analysisResult16,\r\n        analysisResult17,\r\n        analysisResult18,\r\n        analysisResult19,\r\n        analysisResult20,\r\n        analysisResult21,\r\n        analysisResult22,\r\n        analysisResult23,\r\n        analysisResult24,\r\n        analysisResult25,\r\n        analysisResult26,\r\n        analysisResult27,\r\n        analysisResult28,\r\n        analysisResult29,\r\n        remarks,\r\n      });\r\n    }\r\n  }\r\n\r\n  triggerEditChemicalSolutionControlRecord = (values) => {\r\n    const {\r\n      token,\r\n      loading,\r\n      selectedChemicalSolutionControlWorksheet,\r\n      selectedChemicalSolutionControlRecord,\r\n      editChemicalSolutionControlRecord,\r\n    } = this.props;\r\n    const {\r\n      sampleTakenDate,\r\n      sampleTakenTime,\r\n      agitationInMinutes,\r\n      temperatureInCelcius,\r\n      sampleAnalysisDate,\r\n      sampleAnalysisTime,\r\n      analysisResult0,\r\n      analysisResult1,\r\n      analysisResult2,\r\n      analysisResult3,\r\n      analysisResult4,\r\n      analysisResult5,\r\n      analysisResult6,\r\n      analysisResult7,\r\n      analysisResult8,\r\n      analysisResult9,\r\n      analysisResult10,\r\n      analysisResult11,\r\n      analysisResult12,\r\n      analysisResult13,\r\n      analysisResult14,\r\n      analysisResult15,\r\n      analysisResult16,\r\n      analysisResult17,\r\n      analysisResult18,\r\n      analysisResult19,\r\n      analysisResult20,\r\n      analysisResult21,\r\n      analysisResult22,\r\n      analysisResult23,\r\n      analysisResult24,\r\n      analysisResult25,\r\n      analysisResult26,\r\n      analysisResult27,\r\n      analysisResult28,\r\n      analysisResult29,\r\n      remarks,\r\n    } = values;\r\n    const analysisResults = [\r\n      analysisResult0,\r\n      analysisResult1,\r\n      analysisResult2,\r\n      analysisResult3,\r\n      analysisResult4,\r\n      analysisResult5,\r\n      analysisResult6,\r\n      analysisResult7,\r\n      analysisResult8,\r\n      analysisResult9,\r\n      analysisResult10,\r\n      analysisResult11,\r\n      analysisResult12,\r\n      analysisResult13,\r\n      analysisResult14,\r\n      analysisResult15,\r\n      analysisResult16,\r\n      analysisResult17,\r\n      analysisResult18,\r\n      analysisResult19,\r\n      analysisResult20,\r\n      analysisResult21,\r\n      analysisResult22,\r\n      analysisResult23,\r\n      analysisResult24,\r\n      analysisResult25,\r\n      analysisResult26,\r\n      analysisResult27,\r\n      analysisResult28,\r\n      analysisResult29,\r\n    ].slice(\r\n      0,\r\n      selectedChemicalSolutionControlWorksheet?.analysisSolutions?.length\r\n    );\r\n\r\n    if (!loading) {\r\n      editChemicalSolutionControlRecord(\r\n        selectedChemicalSolutionControlWorksheet.id,\r\n        selectedChemicalSolutionControlRecord.id,\r\n        {\r\n          creator: jwt_decode(token)?.id,\r\n          sampleTakenDate,\r\n          sampleTakenTime,\r\n          agitationInMinutes,\r\n          temperatureInCelcius,\r\n          sampleAnalysisDate,\r\n          sampleAnalysisTime,\r\n          analysisResults,\r\n          remarks,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      showEditChemicalSolutionControlRecordDialog,\r\n      toggleEditChemicalSolutionControlRecordDialog,\r\n      selectedChemicalSolutionControlWorksheet,\r\n    } = this.props;\r\n    const {\r\n      sampleTakenDate,\r\n      sampleTakenTime,\r\n      agitationInMinutes,\r\n      temperatureInCelcius,\r\n      sampleAnalysisDate,\r\n      sampleAnalysisTime,\r\n      analysisResult0,\r\n      analysisResult1,\r\n      analysisResult2,\r\n      analysisResult3,\r\n      analysisResult4,\r\n      analysisResult5,\r\n      analysisResult6,\r\n      analysisResult7,\r\n      analysisResult8,\r\n      analysisResult9,\r\n      analysisResult10,\r\n      analysisResult11,\r\n      analysisResult12,\r\n      analysisResult13,\r\n      analysisResult14,\r\n      analysisResult15,\r\n      analysisResult16,\r\n      analysisResult17,\r\n      analysisResult18,\r\n      analysisResult19,\r\n      analysisResult20,\r\n      analysisResult21,\r\n      analysisResult22,\r\n      analysisResult23,\r\n      analysisResult24,\r\n      analysisResult25,\r\n      analysisResult26,\r\n      analysisResult27,\r\n      analysisResult28,\r\n      analysisResult29,\r\n      remarks,\r\n    } = this.state;\r\n    const analysisSolutions =\r\n      selectedChemicalSolutionControlWorksheet?.analysisSolutions ?? [];\r\n    let chemicalSolutionControlRecordFormInitialValues = {};\r\n\r\n    if (showEditChemicalSolutionControlRecordDialog) {\r\n      chemicalSolutionControlRecordFormInitialValues = {\r\n        sampleTakenDate,\r\n        sampleTakenTime,\r\n        agitationInMinutes,\r\n        temperatureInCelcius,\r\n        sampleAnalysisDate,\r\n        sampleAnalysisTime,\r\n        analysisResult0,\r\n        analysisResult1,\r\n        analysisResult2,\r\n        analysisResult3,\r\n        analysisResult4,\r\n        analysisResult5,\r\n        analysisResult6,\r\n        analysisResult7,\r\n        analysisResult8,\r\n        analysisResult9,\r\n        analysisResult10,\r\n        analysisResult11,\r\n        analysisResult12,\r\n        analysisResult13,\r\n        analysisResult14,\r\n        analysisResult15,\r\n        analysisResult16,\r\n        analysisResult17,\r\n        analysisResult18,\r\n        analysisResult19,\r\n        analysisResult20,\r\n        analysisResult21,\r\n        analysisResult22,\r\n        analysisResult23,\r\n        analysisResult24,\r\n        analysisResult25,\r\n        analysisResult26,\r\n        analysisResult27,\r\n        analysisResult28,\r\n        analysisResult29,\r\n        remarks,\r\n      };\r\n    }\r\n    return (\r\n      <Dialog\r\n        open={showEditChemicalSolutionControlRecordDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"xl\"\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleEditChemicalSolutionControlRecordDialog({});\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Edit chemical solution control record\r\n        </DialogTitle>\r\n        {showEditChemicalSolutionControlRecordDialog ? (\r\n          <Formik\r\n            initialValues={chemicalSolutionControlRecordFormInitialValues}\r\n            onSubmit={this.triggerEditChemicalSolutionControlRecord}\r\n            validationSchema={\r\n              chemicalSolutionControlEditRecordFormValidationSchema\r\n            }\r\n          >\r\n            {({ values, touched, errors, handleChange }) => {\r\n              return (\r\n                <Form autoComplete=\"off\">\r\n                  <DialogContent dividers>\r\n                    <Container>\r\n                      <Grid\r\n                        container\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Sample Taken\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.sampleTakenDate && touched.sampleTakenDate\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.sampleTakenDate &&\r\n                              touched.sampleTakenDate &&\r\n                              errors.sampleTakenDate\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Date\"\r\n                            name=\"sampleTakenDate\"\r\n                            onChange={handleChange}\r\n                            type=\"date\"\r\n                            value={values.sampleTakenDate}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.sampleTakenTime && touched.sampleTakenTime\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.sampleTakenTime &&\r\n                              touched.sampleTakenTime &&\r\n                              errors.sampleTakenTime\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Time\"\r\n                            name=\"sampleTakenTime\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.sampleTakenTime}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.agitationInMinutes &&\r\n                              touched.agitationInMinutes\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.agitationInMinutes &&\r\n                              touched.agitationInMinutes &&\r\n                              errors.agitationInMinutes\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Agitation (minutes)\"\r\n                            name=\"agitationInMinutes\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.agitationInMinutes}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.temperatureInCelcius &&\r\n                              touched.temperatureInCelcius\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.temperatureInCelcius &&\r\n                              touched.temperatureInCelcius &&\r\n                              errors.temperatureInCelcius\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Temperature (°C)\"\r\n                            name=\"temperatureInCelcius\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.temperatureInCelcius}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Sample Analysis\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.sampleAnalysisDate &&\r\n                              touched.sampleAnalysisDate\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.sampleAnalysisDate &&\r\n                              touched.sampleAnalysisDate &&\r\n                              errors.sampleAnalysisDate\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Date\"\r\n                            name=\"sampleAnalysisDate\"\r\n                            onChange={handleChange}\r\n                            type=\"date\"\r\n                            value={values.sampleAnalysisDate}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.sampleAnalysisTime &&\r\n                              touched.sampleAnalysisTime\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.sampleAnalysisTime &&\r\n                              touched.sampleAnalysisTime &&\r\n                              errors.sampleAnalysisTime\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Time\"\r\n                            name=\"sampleAnalysisTime\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.sampleAnalysisTime}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Results\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[0] && !analysisSolutions[1]}\r\n                      >\r\n                        {analysisSolutions[0] ? (\r\n                          <Grid item xs>\r\n                            <TextField\r\n                              error={\r\n                                errors.analysisResult0 &&\r\n                                touched.analysisResult0\r\n                              }\r\n                              fullWidth\r\n                              helperText={\r\n                                errors.analysisResult0 &&\r\n                                touched.analysisResult0 &&\r\n                                errors.analysisResult0\r\n                              }\r\n                              hidden={!analysisSolutions[0]}\r\n                              InputLabelProps={{ shrink: true }}\r\n                              label={analysisSolutions[0]?.solution}\r\n                              name=\"analysisResult0\"\r\n                              onChange={handleChange}\r\n                              type=\"text\"\r\n                              value={values.analysisResult0}\r\n                            />\r\n                          </Grid>\r\n                        ) : null}\r\n                        {analysisSolutions[1] ? (\r\n                          <Grid item xs>\r\n                            <TextField\r\n                              error={\r\n                                errors.analysisResult1 &&\r\n                                touched.analysisResult1\r\n                              }\r\n                              fullWidth\r\n                              helperText={\r\n                                errors.analysisResult1 &&\r\n                                touched.analysisResult1 &&\r\n                                errors.analysisResult1\r\n                              }\r\n                              hidden={!analysisSolutions[1]}\r\n                              InputLabelProps={{ shrink: true }}\r\n                              label={analysisSolutions[1]?.solution}\r\n                              name=\"analysisResult1\"\r\n                              onChange={handleChange}\r\n                              type=\"text\"\r\n                              value={values.analysisResult1}\r\n                            />\r\n                          </Grid>\r\n                        ) : null}\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[2] && !analysisSolutions[3]}\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult2 && touched.analysisResult2\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult2 &&\r\n                              touched.analysisResult2 &&\r\n                              errors.analysisResult2\r\n                            }\r\n                            hidden={!analysisSolutions[2]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[2]?.solution}\r\n                            name=\"analysisResult2\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult2}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult3 && touched.analysisResult3\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult3 &&\r\n                              touched.analysisResult3 &&\r\n                              errors.analysisResult3\r\n                            }\r\n                            hidden={!analysisSolutions[3]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[3]?.solution}\r\n                            name=\"analysisResult3\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult3}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[4] && !analysisSolutions[5]}\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult4 && touched.analysisResult4\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult4 &&\r\n                              touched.analysisResult4 &&\r\n                              errors.analysisResult4\r\n                            }\r\n                            hidden={!analysisSolutions[4]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[4]?.solution}\r\n                            name=\"analysisResult4\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult4}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult5 && touched.analysisResult5\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult5 &&\r\n                              touched.analysisResult5 &&\r\n                              errors.analysisResult5\r\n                            }\r\n                            hidden={!analysisSolutions[5]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[5]?.solution}\r\n                            name=\"analysisResult5\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult5}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[6] && !analysisSolutions[7]}\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult6 && touched.analysisResult6\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult6 &&\r\n                              touched.analysisResult6 &&\r\n                              errors.analysisResult6\r\n                            }\r\n                            hidden={!analysisSolutions[6]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[6]?.solution}\r\n                            name=\"analysisResult6\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult6}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult7 && touched.analysisResult7\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult7 &&\r\n                              touched.analysisResult7 &&\r\n                              errors.analysisResult7\r\n                            }\r\n                            hidden={!analysisSolutions[7]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[7]?.solution}\r\n                            name=\"analysisResult7\"\r\n                            onChange={handleChange}\r\n                            analysisSolutions\r\n                            type=\"text\"\r\n                            value={values.analysisResult7}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={!analysisSolutions[8] && !analysisSolutions[9]}\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult8 && touched.analysisResult8\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult8 &&\r\n                              touched.analysisResult8 &&\r\n                              errors.analysisResult8\r\n                            }\r\n                            hidden={!analysisSolutions[8]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[8]?.solution}\r\n                            name=\"analysisResult8\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult8}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult9 && touched.analysisResult9\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult9 &&\r\n                              touched.analysisResult9 &&\r\n                              errors.analysisResult9\r\n                            }\r\n                            hidden={!analysisSolutions[9]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[9]?.solution}\r\n                            name=\"analysisResult9\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult9}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[10] && !analysisSolutions[11]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult10 &&\r\n                              touched.analysisResult10\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult10 &&\r\n                              touched.analysisResult10 &&\r\n                              errors.analysisResult10\r\n                            }\r\n                            hidden={!analysisSolutions[10]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[10]?.solution}\r\n                            name=\"analysisResult10\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult10}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult11 &&\r\n                              touched.analysisResult11\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult11 &&\r\n                              touched.analysisResult11 &&\r\n                              errors.analysisResult11\r\n                            }\r\n                            hidden={!analysisSolutions[11]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[11]?.solution}\r\n                            name=\"analysisResult11\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult11}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[12] && !analysisSolutions[13]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult12 &&\r\n                              touched.analysisResult12\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult12 &&\r\n                              touched.analysisResult12 &&\r\n                              errors.analysisResult12\r\n                            }\r\n                            hidden={!analysisSolutions[12]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[12]?.solution}\r\n                            name=\"analysisResult12\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult12}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult13 &&\r\n                              touched.analysisResult13\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult13 &&\r\n                              touched.analysisResult13 &&\r\n                              errors.analysisResult13\r\n                            }\r\n                            hidden={!analysisSolutions[13]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[13]?.solution}\r\n                            name=\"analysisResult13\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult13}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[14] && !analysisSolutions[15]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult14 &&\r\n                              touched.analysisResult14\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult14 &&\r\n                              touched.analysisResult14 &&\r\n                              errors.analysisResult14\r\n                            }\r\n                            hidden={!analysisSolutions[14]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[14]?.solution}\r\n                            name=\"analysisResult14\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult14}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult15 &&\r\n                              touched.analysisResult15\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult15 &&\r\n                              touched.analysisResult15 &&\r\n                              errors.analysisResult15\r\n                            }\r\n                            hidden={!analysisSolutions[15]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[15]?.solution}\r\n                            name=\"analysisResult15\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult15}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[16] && !analysisSolutions[17]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult16 &&\r\n                              touched.analysisResult16\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult16 &&\r\n                              touched.analysisResult16 &&\r\n                              errors.analysisResult16\r\n                            }\r\n                            hidden={!analysisSolutions[16]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[16]?.solution}\r\n                            name=\"analysisResult16\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult16}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult17 &&\r\n                              touched.analysisResult17\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult17 &&\r\n                              touched.analysisResult17 &&\r\n                              errors.analysisResult17\r\n                            }\r\n                            hidden={!analysisSolutions[17]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[17]?.solution}\r\n                            name=\"analysisResult17\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult17}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[18] && !analysisSolutions[19]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult18 &&\r\n                              touched.analysisResult18\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult18 &&\r\n                              touched.analysisResult18 &&\r\n                              errors.analysisResult18\r\n                            }\r\n                            hidden={!analysisSolutions[18]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[18]?.solution}\r\n                            name=\"analysisResult18\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult18}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult19 &&\r\n                              touched.analysisResult19\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult19 &&\r\n                              touched.analysisResult19 &&\r\n                              errors.analysisResult19\r\n                            }\r\n                            hidden={!analysisSolutions[19]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[19]?.solution}\r\n                            name=\"analysisResult19\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult19}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[20] && !analysisSolutions[21]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult20 &&\r\n                              touched.analysisResult20\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult20 &&\r\n                              touched.analysisResult20 &&\r\n                              errors.analysisResult20\r\n                            }\r\n                            hidden={!analysisSolutions[20]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[20]?.solution}\r\n                            name=\"analysisResult20\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult20}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult21 &&\r\n                              touched.analysisResult21\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult21 &&\r\n                              touched.analysisResult21 &&\r\n                              errors.analysisResult21\r\n                            }\r\n                            hidden={!analysisSolutions[21]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[21]?.solution}\r\n                            name=\"analysisResult21\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult21}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[22] && !analysisSolutions[23]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult22 &&\r\n                              touched.analysisResult22\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult22 &&\r\n                              touched.analysisResult22 &&\r\n                              errors.analysisResult22\r\n                            }\r\n                            hidden={!analysisSolutions[22]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[22]?.solution}\r\n                            name=\"analysisResult22\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult22}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult23 &&\r\n                              touched.analysisResult23\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult23 &&\r\n                              touched.analysisResult23 &&\r\n                              errors.analysisResult23\r\n                            }\r\n                            hidden={!analysisSolutions[23]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[23]?.solution}\r\n                            name=\"analysisResult23\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult23}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[24] && !analysisSolutions[25]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult24 &&\r\n                              touched.analysisResult24\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult24 &&\r\n                              touched.analysisResult24 &&\r\n                              errors.analysisResult24\r\n                            }\r\n                            hidden={!analysisSolutions[24]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[24]?.solution}\r\n                            name=\"analysisResult24\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult24}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult25 &&\r\n                              touched.analysisResult25\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult25 &&\r\n                              touched.analysisResult25 &&\r\n                              errors.analysisResult25\r\n                            }\r\n                            hidden={!analysisSolutions[25]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[25]?.solution}\r\n                            name=\"analysisResult25\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult25}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[26] && !analysisSolutions[27]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult26 &&\r\n                              touched.analysisResult26\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult26 &&\r\n                              touched.analysisResult26 &&\r\n                              errors.analysisResult26\r\n                            }\r\n                            hidden={!analysisSolutions[26]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[26]?.solution}\r\n                            name=\"analysisResult26\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult26}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult27 &&\r\n                              touched.analysisResult27\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult27 &&\r\n                              touched.analysisResult27 &&\r\n                              errors.analysisResult27\r\n                            }\r\n                            hidden={!analysisSolutions[27]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[27]?.solution}\r\n                            name=\"analysisResult27\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult27}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                        hidden={\r\n                          !analysisSolutions[28] && !analysisSolutions[29]\r\n                        }\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult28 &&\r\n                              touched.analysisResult28\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult28 &&\r\n                              touched.analysisResult28 &&\r\n                              errors.analysisResult28\r\n                            }\r\n                            hidden={!analysisSolutions[28]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[28]?.solution}\r\n                            name=\"analysisResult28\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult28}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.analysisResult29 &&\r\n                              touched.analysisResult29\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.analysisResult29 &&\r\n                              touched.analysisResult29 &&\r\n                              errors.analysisResult29\r\n                            }\r\n                            hidden={!analysisSolutions[29]}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label={analysisSolutions[29]?.solution}\r\n                            name=\"analysisResult29\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.analysisResult29}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mt-4 pt-4\"\r\n                        style={{\r\n                          alignItems: \"center\",\r\n                          display: \"flex\",\r\n                          fontSize: 18,\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        Notes\r\n                      </Grid>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={errors.remarks && touched.remarks}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.remarks &&\r\n                              touched.remarks &&\r\n                              errors.remarks\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Remarks\"\r\n                            name=\"remarks\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.remarks}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Container>\r\n                  </DialogContent>\r\n                  <DialogActions style={{ margin: 4 }}>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"secondary\"\r\n                      onClick={\r\n                        !loading\r\n                          ? () => {\r\n                              toggleEditChemicalSolutionControlRecordDialog({});\r\n                            }\r\n                          : null\r\n                      }\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Cancel</span>\r\n                    </Button>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"primary\"\r\n                      onClick={() => {}}\r\n                      type={loading ? \"button\" : \"submit\"}\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Save</span>\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        ) : null}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, qaChemicalSolutionControl }) => {\r\n  const { token } = auth;\r\n  const {\r\n    loading,\r\n    showEditChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    token,\r\n    loading,\r\n    showEditChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleEditChemicalSolutionControlRecordDialog,\r\n  editChemicalSolutionControlRecord,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(EditChemicalSolutionControlRecordDialog);\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport {\r\n  toggleDeleteChemicalSolutionControlRecordDialog,\r\n  deleteChemicalSolutionControlRecord,\r\n} from '../../redux/actions';\r\nimport { SlideTransition } from '../../components/Transitions';\r\n\r\nclass DeleteChemicalSolutionControlRecordDialog extends PureComponent {\r\n  render() {\r\n    const {\r\n      showDeleteChemicalSolutionControlRecordDialog,\r\n      selectedChemicalSolutionControlWorksheet,\r\n      selectedChemicalSolutionControlRecord,\r\n      toggleDeleteChemicalSolutionControlRecordDialog,\r\n      deleteChemicalSolutionControlRecord,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        open={showDeleteChemicalSolutionControlRecordDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleDeleteChemicalSolutionControlRecordDialog({});\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Confirm to delete record\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure you want to permanently delete this record?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              toggleDeleteChemicalSolutionControlRecordDialog({});\r\n            }}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              deleteChemicalSolutionControlRecord(\r\n                selectedChemicalSolutionControlWorksheet.id,\r\n                selectedChemicalSolutionControlRecord.id\r\n              );\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ qaChemicalSolutionControl }) => {\r\n  const {\r\n    showDeleteChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    showDeleteChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleDeleteChemicalSolutionControlRecordDialog,\r\n  deleteChemicalSolutionControlRecord,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(DeleteChemicalSolutionControlRecordDialog);\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport {\r\n  toggleVerifyChemicalSolutionControlRecordDialog,\r\n  verifyChemicalSolutionControlRecord,\r\n} from '../../redux/actions';\r\nimport { SlideTransition } from '../../components/Transitions';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nclass VerifyChemicalSolutionControlRecordDialog extends PureComponent {\r\n  render() {\r\n    const {\r\n      token,\r\n      showVerifyChemicalSolutionControlRecordDialog,\r\n      selectedChemicalSolutionControlWorksheet,\r\n      selectedChemicalSolutionControlRecord,\r\n      toggleVerifyChemicalSolutionControlRecordDialog,\r\n      verifyChemicalSolutionControlRecord,\r\n    } = this.props;\r\n    const { id: userId } = jwt_decode(token);\r\n\r\n    return (\r\n      <Dialog\r\n        open={showVerifyChemicalSolutionControlRecordDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleVerifyChemicalSolutionControlRecordDialog();\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Confirm to verify\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure you want to verify this record?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              toggleVerifyChemicalSolutionControlRecordDialog();\r\n            }}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              verifyChemicalSolutionControlRecord(\r\n                selectedChemicalSolutionControlWorksheet.id,\r\n                selectedChemicalSolutionControlRecord.id,\r\n                {\r\n                  verifier: userId,\r\n                  result: 'Fail',\r\n                }\r\n              );\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Fail\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              verifyChemicalSolutionControlRecord(\r\n                selectedChemicalSolutionControlWorksheet.id,\r\n                selectedChemicalSolutionControlRecord.id,\r\n                {\r\n                  verifier: userId,\r\n                  result: 'Pass',\r\n                }\r\n              );\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Pass\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, qaChemicalSolutionControl }) => {\r\n  const { token } = auth;\r\n  const {\r\n    showVerifyChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    token,\r\n    showVerifyChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleVerifyChemicalSolutionControlRecordDialog,\r\n  verifyChemicalSolutionControlRecord,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(VerifyChemicalSolutionControlRecordDialog);\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  toggleUndoVerifyChemicalSolutionControlRecordDialog,\r\n  undoVerifyChemicalSolutionControlRecord,\r\n} from \"../../redux/actions\";\r\nimport { SlideTransition } from \"../../components/Transitions\";\r\n\r\nclass UndoVerifyChemicalSolutionControlRecordDialog extends PureComponent {\r\n  render() {\r\n    const {\r\n      showUndoVerifyChemicalSolutionControlRecordDialog,\r\n      selectedChemicalSolutionControlWorksheet,\r\n      selectedChemicalSolutionControlRecord,\r\n      toggleUndoVerifyChemicalSolutionControlRecordDialog,\r\n      undoVerifyChemicalSolutionControlRecord,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        open={showUndoVerifyChemicalSolutionControlRecordDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleUndoVerifyChemicalSolutionControlRecordDialog();\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Confirm to undo verify\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure you want to undo verify this record?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              toggleUndoVerifyChemicalSolutionControlRecordDialog();\r\n            }}\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              undoVerifyChemicalSolutionControlRecord(\r\n                selectedChemicalSolutionControlWorksheet.id,\r\n                selectedChemicalSolutionControlRecord.id,\r\n                {\r\n                  verifier: null,\r\n                  result: \"\",\r\n                }\r\n              );\r\n            }}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Undo Verify\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ qaChemicalSolutionControl }) => {\r\n  const {\r\n    showUndoVerifyChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    showUndoVerifyChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleUndoVerifyChemicalSolutionControlRecordDialog,\r\n  undoVerifyChemicalSolutionControlRecord,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(UndoVerifyChemicalSolutionControlRecordDialog);\r\n","import React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { Form, Formik } from \"formik\";\r\nimport {\r\n  toggleAttachCcrChemicalSolutionControlRecordDialog,\r\n  attachCcrChemicalSolutionControlRecord,\r\n} from \"../../redux/actions\";\r\nimport { LoadingSpinner } from \"../../components/Miscellaneous\";\r\nimport { SlideTransition } from \"../../components/Transitions\";\r\nimport { chemicalSolutionControlRecordAttachCcrFormValidationSchema } from \"../../constants/validationSchemas\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\n\r\nclass AttachCcrChemicalSolutionControlRecordDialog extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dummyOptions: [],\r\n      chemicalChargingRecordNumber: \"\",\r\n      chemicalChargingRecordReceivedDate: \"\",\r\n    };\r\n  }\r\n\r\n  triggerAttachCcrChemicalSolutionControlRecord = (values) => {\r\n    const {\r\n      loading,\r\n      selectedChemicalSolutionControlWorksheet,\r\n      selectedChemicalSolutionControlRecord,\r\n      attachCcrChemicalSolutionControlRecord,\r\n    } = this.props;\r\n    const { chemicalChargingRecordNumber, chemicalChargingRecordReceivedDate } =\r\n      values;\r\n\r\n    if (!loading) {\r\n      attachCcrChemicalSolutionControlRecord(\r\n        selectedChemicalSolutionControlWorksheet.id,\r\n        selectedChemicalSolutionControlRecord.id,\r\n        {\r\n          chemicalChargingRecordNumber: chemicalChargingRecordNumber,\r\n          chemicalChargingRecordReceivedDate:\r\n            chemicalChargingRecordReceivedDate,\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      showAttachCcrChemicalSolutionControlRecordDialog,\r\n      toggleAttachCcrChemicalSolutionControlRecordDialog,\r\n    } = this.props;\r\n    const {\r\n      dummyOptions,\r\n      chemicalChargingRecordNumber,\r\n      chemicalChargingRecordReceivedDate,\r\n    } = this.state;\r\n    let chemicalChargingRecordFormInitialValues = {};\r\n\r\n    if (showAttachCcrChemicalSolutionControlRecordDialog) {\r\n      chemicalChargingRecordFormInitialValues = {\r\n        chemicalChargingRecordNumber,\r\n        chemicalChargingRecordReceivedDate,\r\n      };\r\n    }\r\n\r\n    return (\r\n      <Dialog\r\n        open={showAttachCcrChemicalSolutionControlRecordDialog}\r\n        TransitionComponent={SlideTransition}\r\n        fullWidth\r\n        maxWidth=\"xl\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        onClose={() => {\r\n          toggleAttachCcrChemicalSolutionControlRecordDialog();\r\n        }}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Attach Chemical Charging Record (CCR)\r\n        </DialogTitle>\r\n        {showAttachCcrChemicalSolutionControlRecordDialog ? (\r\n          <Formik\r\n            initialValues={chemicalChargingRecordFormInitialValues}\r\n            onSubmit={this.triggerAttachCcrChemicalSolutionControlRecord}\r\n            validationSchema={\r\n              chemicalSolutionControlRecordAttachCcrFormValidationSchema\r\n            }\r\n          >\r\n            {({ setFieldValue, values, touched, errors, handleChange }) => {\r\n              return (\r\n                <Form autoComplete=\"off\">\r\n                  <DialogContent dividers>\r\n                    <Container>\r\n                      <Grid\r\n                        container\r\n                        spacing={3}\r\n                        className=\"mb-4 pb-4 mt-4 pt-4\"\r\n                      >\r\n                        <Grid item xs>\r\n                          <Autocomplete\r\n                            freeSolo\r\n                            fullWidth\r\n                            getOptionLabel={(option) => option}\r\n                            onInputChange={(_event, value) => {\r\n                              setFieldValue(\r\n                                \"chemicalChargingRecordNumber\",\r\n                                value\r\n                              );\r\n                            }}\r\n                            openOnFocus\r\n                            options={dummyOptions}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                error={\r\n                                  errors.chemicalChargingRecordNumber &&\r\n                                  touched.chemicalChargingRecordNumber\r\n                                }\r\n                                helperText={\r\n                                  errors.chemicalChargingRecordNumber &&\r\n                                  touched.chemicalChargingRecordNumber &&\r\n                                  errors.chemicalChargingRecordNumber\r\n                                }\r\n                                InputLabelProps={{ shrink: true }}\r\n                                label=\"Chemical Charging Record Number\"\r\n                                name=\"chemicalChargingRecordNumber\"\r\n                                value={values.chemicalChargingRecordNumber}\r\n                              />\r\n                            )}\r\n                            renderOption={(option, { inputValue }) => {\r\n                              const matches = match(option, inputValue);\r\n                              const parts = parse(option, matches);\r\n                              return (\r\n                                <div>\r\n                                  {parts.map((part, index) => (\r\n                                    <span\r\n                                      key={index}\r\n                                      style={{\r\n                                        fontWeight: part.highlight ? 700 : 400,\r\n                                      }}\r\n                                    >\r\n                                      {part.text}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              );\r\n                            }}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs>\r\n                          <TextField\r\n                            error={\r\n                              errors.chemicalChargingRecordReceivedDate &&\r\n                              touched.chemicalChargingRecordReceivedDate\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.chemicalChargingRecordReceivedDate &&\r\n                              touched.chemicalChargingRecordReceivedDate &&\r\n                              errors.chemicalChargingRecordReceivedDate\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Chemical Charging Record Received Date\"\r\n                            name=\"chemicalChargingRecordReceivedDate\"\r\n                            onChange={handleChange}\r\n                            type=\"date\"\r\n                            value={values.chemicalChargingRecordReceivedDate}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Container>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"secondary\"\r\n                      onClick={\r\n                        !loading\r\n                          ? () => {\r\n                              toggleAttachCcrChemicalSolutionControlRecordDialog();\r\n                            }\r\n                          : null\r\n                      }\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Cancel</span>\r\n                    </Button>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"primary\"\r\n                      onClick={() => {}}\r\n                      type={loading ? \"button\" : \"submit\"}\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Submit</span>\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        ) : null}\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, qaChemicalSolutionControl }) => {\r\n  const { token } = auth;\r\n  const {\r\n    loading,\r\n    showAttachCcrChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  } = qaChemicalSolutionControl;\r\n\r\n  return {\r\n    token,\r\n    loading,\r\n    showAttachCcrChemicalSolutionControlRecordDialog,\r\n    selectedChemicalSolutionControlWorksheet,\r\n    selectedChemicalSolutionControlRecord,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleAttachCcrChemicalSolutionControlRecordDialog,\r\n  attachCcrChemicalSolutionControlRecord,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(AttachCcrChemicalSolutionControlRecordDialog);\r\n","import React, { PureComponent, Fragment, Suspense } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  Button,\r\n  ButtonGroup,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  IconButton,\r\n  Tooltip,\r\n  Chip,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Add as AddIcon,\r\n  CloseOutlined as CloseOutlinedIcon,\r\n  DeleteForever as DeleteForeverIcon,\r\n  DoneAllOutlined as DoneAllOutlinedIcon,\r\n  UndoOutlined as UndoOutlinedIcon,\r\n  EditOutlined as EditOutlinedIcon,\r\n  SubjectOutlined as SubjectOutlinedIcon,\r\n  UpdateOutlined as UpdateOutlinedIcon,\r\n  PostAddOutlined as PostAddOutlinedIcon,\r\n  CheckOutlined as CheckOutlinedIcon,\r\n  ClearOutlined as ClearOutlinedIcon,\r\n} from \"@material-ui/icons\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport {\r\n  changeSelectedChemicalSolutionControlWorksheet,\r\n  getChemicalSolutionControlWorksheets,\r\n  toggleCreateChemicalSolutionControlWorksheetDialog,\r\n  toggleEditChemicalSolutionControlWorksheetDialog,\r\n  toggleDeleteChemicalSolutionControlWorksheetDialog,\r\n  toggleReviseChemicalSolutionControlWorksheetDialog,\r\n  toggleCreateChemicalSolutionControlRecordDialog,\r\n  toggleEditChemicalSolutionControlRecordDialog,\r\n  toggleDeleteChemicalSolutionControlRecordDialog,\r\n  toggleVerifyChemicalSolutionControlRecordDialog,\r\n  toggleUndoVerifyChemicalSolutionControlRecordDialog,\r\n  toggleAttachCcrChemicalSolutionControlRecordDialog,\r\n  changeSelectedChemicalSolutionControlStatus,\r\n  editChemicalSolutionControlWorksheet,\r\n  deleteChemicalSolutionControlWorksheet,\r\n  editChemicalSolutionControlRecord,\r\n} from \"../../redux/actions\";\r\nimport Breadcrumb from \"../../containers/navs/Breadcrumb\";\r\nimport CreateChemicalSolutionControlWorksheetDialog from \"../../containers/dialogs/CreateChemicalSolutionControlWorksheetDialog\";\r\nimport EditChemicalSolutionControlWorksheetDialog from \"../../containers/dialogs/EditChemicalSolutionControlWorksheetDialog\";\r\nimport ReviseChemicalSolutionControlWorksheetDialog from \"../../containers/dialogs/ReviseChemicalSolutionControlWorksheetDialog\";\r\nimport DeleteChemicalSolutionControlWorksheetDialog from \"../../containers/dialogs/DeleteChemicalSolutionControlWorksheetDialog\";\r\nimport CreateChemicalSolutionControlRecordDialog from \"../../containers/dialogs/CreateChemicalSolutionControlRecordDialog\";\r\nimport EditChemicalSolutionControlRecordDialog from \"../../containers/dialogs/EditChemicalSolutionControlRecordDialog\";\r\nimport DeleteChemicalSolutionControlRecordDialog from \"../../containers/dialogs/DeleteChemicalSolutionControlRecordDialog\";\r\nimport VerifyChemicalSolutionControlRecordDialog from \"../../containers/dialogs/VerifyChemicalSolutionControlRecordDialog\";\r\nimport UndoVerifyChemicalSolutionControlRecordDialog from \"../../containers/dialogs/UndoVerifyChemicalSolutionControlRecordDialog\";\r\nimport AttachCcrChemicalSolutionControlRecordDialog from \"../../containers/dialogs/AttachCcrChemicalSolutionControlRecordDialog\";\r\nimport { Separator } from \"../../components/Layouts\";\r\nimport {\r\n  chemicalSolutionAnalysisTableOptions,\r\n  chemicalSolutionControlTableOptions,\r\n  chemicalSolutionControlWorksheetsTableOptions,\r\n  solutionTargetLimitsTableOptions,\r\n  specificationReferencesTableOptions,\r\n} from \"../../constants/tableOptions\";\r\n\r\nclass QaChemicalSolutionControl extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      chemicalSolutionControlTableData: [],\r\n      solutionTargetLimitsTableData: [],\r\n      specificationReferencesTableData: [],\r\n      chemicalSolutionAnalysisTableData: [],\r\n      hideWorksheets: false,\r\n      chemicalSolutionAnalysisLabel0: null,\r\n      chemicalSolutionAnalysisLabel1: null,\r\n      chemicalSolutionAnalysisLabel2: null,\r\n      chemicalSolutionAnalysisLabel3: null,\r\n      chemicalSolutionAnalysisLabel4: null,\r\n      chemicalSolutionAnalysisLabel5: null,\r\n      chemicalSolutionAnalysisLabel6: null,\r\n      chemicalSolutionAnalysisLabel7: null,\r\n      chemicalSolutionAnalysisLabel8: null,\r\n      chemicalSolutionAnalysisLabel9: null,\r\n      chemicalSolutionAnalysisLabel10: null,\r\n      chemicalSolutionAnalysisLabel11: null,\r\n      chemicalSolutionAnalysisLabel12: null,\r\n      chemicalSolutionAnalysisLabel13: null,\r\n      chemicalSolutionAnalysisLabel14: null,\r\n      chemicalSolutionAnalysisLabel15: null,\r\n      chemicalSolutionAnalysisLabel16: null,\r\n      chemicalSolutionAnalysisLabel17: null,\r\n      chemicalSolutionAnalysisLabel18: null,\r\n      chemicalSolutionAnalysisLabel19: null,\r\n      chemicalSolutionAnalysisLabel20: null,\r\n      chemicalSolutionAnalysisLabel21: null,\r\n      chemicalSolutionAnalysisLabel22: null,\r\n      chemicalSolutionAnalysisLabel23: null,\r\n      chemicalSolutionAnalysisLabel24: null,\r\n      chemicalSolutionAnalysisLabel25: null,\r\n      chemicalSolutionAnalysisLabel26: null,\r\n      chemicalSolutionAnalysisLabel27: null,\r\n      chemicalSolutionAnalysisLabel28: null,\r\n      chemicalSolutionAnalysisLabel29: null,\r\n      chemicalSolutionAnalysisChartData: null,\r\n      chemicalSolutionAnalysisChartOptions: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const {\r\n      selectedChemicalSolutionControlStatus,\r\n      getChemicalSolutionControlWorksheets,\r\n    } = this.props;\r\n\r\n    this._isMounted = true;\r\n    getChemicalSolutionControlWorksheets(selectedChemicalSolutionControlStatus);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { changeSelectedChemicalSolutionControlWorksheet } = this.props;\r\n\r\n    this._isMounted = false;\r\n    changeSelectedChemicalSolutionControlWorksheet({});\r\n  }\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    const { loading, selectedChemicalSolutionControlWorksheet } = props;\r\n    const {\r\n      solutionProcess,\r\n      tankNumber,\r\n      tankSize,\r\n      tankVolume,\r\n      location,\r\n      testMethod,\r\n      frequencyOfTest,\r\n      temperatureRangeInCelcius,\r\n      solutionSpecificationReferences,\r\n      analysisSolutions,\r\n      records,\r\n    } = selectedChemicalSolutionControlWorksheet;\r\n    const chemicalSolutionControlTableData = [\r\n      { parameter: \"Solution Process\", value: solutionProcess },\r\n      { parameter: \"Tank Number\", value: tankNumber },\r\n      { parameter: \"Tank Size\", value: tankSize },\r\n      { parameter: \"Tank Volume\", value: tankVolume },\r\n      { parameter: \"Location\", value: location },\r\n      { parameter: \"Test Method\", value: testMethod },\r\n      { parameter: \"Frequency of Test\", value: frequencyOfTest },\r\n      {\r\n        parameter: \"Temperature Range (°C)\",\r\n        value: temperatureRangeInCelcius,\r\n      },\r\n    ];\r\n    let specificationReferencesTableData = [];\r\n    let chemicalSolutionAnalysisTableData = records ?? [];\r\n    let chemicalSolutionAnalysisChartData = [];\r\n\r\n    if (!loading && analysisSolutions) {\r\n      if (solutionSpecificationReferences) {\r\n        const reduce = solutionSpecificationReferences.reduce((res, curr) => {\r\n          if (res[curr.solution]) res[curr.solution].push(curr);\r\n          else Object.assign(res, { [curr.solution]: [curr] });\r\n          return res;\r\n        }, {});\r\n        const reduceArray = Object.values(reduce);\r\n\r\n        for (let i = 0; i < reduceArray.length; i++) {\r\n          const e = reduceArray[i];\r\n          let row = {};\r\n\r\n          row.rowName = e[0].solution;\r\n          for (let j = 0; j < e.length; j++) {\r\n            const f = e[j];\r\n\r\n            row[\"columnName\" + j] = `${f?.organization}: ${f?.specification}`;\r\n            row[\"columnValue\" + j] = f?.value;\r\n          }\r\n          specificationReferencesTableData.push(row);\r\n        }\r\n      }\r\n\r\n      if (chemicalSolutionAnalysisTableData) {\r\n        for (let i = 0; i < chemicalSolutionAnalysisTableData.length; i++) {\r\n          const e = chemicalSolutionAnalysisTableData[i];\r\n          const analysisResults = e?.analysisResults;\r\n\r\n          for (let j = 0; j < analysisResults.length; j++) {\r\n            const f = analysisResults[j];\r\n\r\n            chemicalSolutionAnalysisTableData[i][\"analysisResult\" + j] = f;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < analysisSolutions.length; i++) {\r\n        const e = analysisSolutions[i];\r\n        let data = [];\r\n        let counter = 0;\r\n\r\n        for (let j = 0; j < chemicalSolutionAnalysisTableData.length; j++) {\r\n          const f = chemicalSolutionAnalysisTableData[j];\r\n          const analysisResults = f.analysisResults;\r\n\r\n          if (!isNaN(parseFloat(analysisResults[i]))) {\r\n            data[counter] = [\r\n              new Date(f.sampleTakenDate).getTime(),\r\n              parseFloat(analysisResults[i]),\r\n            ];\r\n            counter++;\r\n          }\r\n        }\r\n        counter = 0;\r\n        chemicalSolutionAnalysisChartData.push({\r\n          name: `${e.solution}`,\r\n          data,\r\n        });\r\n      }\r\n\r\n      return {\r\n        chemicalSolutionControlTableData:\r\n          chemicalSolutionControlTableData ?? [],\r\n        solutionTargetLimitsTableData:\r\n          selectedChemicalSolutionControlWorksheet?.solutionTargetLimits ?? [],\r\n        specificationReferencesTableData: specificationReferencesTableData,\r\n        chemicalSolutionAnalysisTableData: chemicalSolutionAnalysisTableData,\r\n        chemicalSolutionAnalysisLabel0: analysisSolutions[0]\r\n          ? `${analysisSolutions[0]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel1: analysisSolutions[1]\r\n          ? `${analysisSolutions[1]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel2: analysisSolutions[2]\r\n          ? `${analysisSolutions[2]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel3: analysisSolutions[3]\r\n          ? `${analysisSolutions[3]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel4: analysisSolutions[4]\r\n          ? `${analysisSolutions[4]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel5: analysisSolutions[5]\r\n          ? `${analysisSolutions[5]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel6: analysisSolutions[6]\r\n          ? `${analysisSolutions[6]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel7: analysisSolutions[7]\r\n          ? `${analysisSolutions[7]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel8: analysisSolutions[8]\r\n          ? `${analysisSolutions[8]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel9: analysisSolutions[9]\r\n          ? `${analysisSolutions[9]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel10: analysisSolutions[10]\r\n          ? `${analysisSolutions[10]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel11: analysisSolutions[11]\r\n          ? `${analysisSolutions[11]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel12: analysisSolutions[12]\r\n          ? `${analysisSolutions[12]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel13: analysisSolutions[13]\r\n          ? `${analysisSolutions[13]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel14: analysisSolutions[14]\r\n          ? `${analysisSolutions[14]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel15: analysisSolutions[15]\r\n          ? `${analysisSolutions[15]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel16: analysisSolutions[16]\r\n          ? `${analysisSolutions[16]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel17: analysisSolutions[17]\r\n          ? `${analysisSolutions[17]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel18: analysisSolutions[18]\r\n          ? `${analysisSolutions[18]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel19: analysisSolutions[19]\r\n          ? `${analysisSolutions[19]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel20: analysisSolutions[20]\r\n          ? `${analysisSolutions[20]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel21: analysisSolutions[21]\r\n          ? `${analysisSolutions[21]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel22: analysisSolutions[22]\r\n          ? `${analysisSolutions[22]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel23: analysisSolutions[23]\r\n          ? `${analysisSolutions[23]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel24: analysisSolutions[24]\r\n          ? `${analysisSolutions[24]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel25: analysisSolutions[25]\r\n          ? `${analysisSolutions[25]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel26: analysisSolutions[26]\r\n          ? `${analysisSolutions[26]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel27: analysisSolutions[27]\r\n          ? `${analysisSolutions[27]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel28: analysisSolutions[28]\r\n          ? `${analysisSolutions[28]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisLabel29: analysisSolutions[29]\r\n          ? `${analysisSolutions[29]?.solution}`\r\n          : null,\r\n        chemicalSolutionAnalysisChartData,\r\n      };\r\n    }\r\n    return {};\r\n  }\r\n\r\n  render() {\r\n    const { _isMounted } = this;\r\n    const {\r\n      match,\r\n      token,\r\n      loading,\r\n      selectedChemicalSolutionControlStatus,\r\n      chemicalSolutionControlWorksheets,\r\n      selectedChemicalSolutionControlWorksheet,\r\n      toggleCreateChemicalSolutionControlWorksheetDialog,\r\n      toggleEditChemicalSolutionControlWorksheetDialog,\r\n      toggleDeleteChemicalSolutionControlWorksheetDialog,\r\n      toggleReviseChemicalSolutionControlWorksheetDialog,\r\n      toggleCreateChemicalSolutionControlRecordDialog,\r\n      toggleEditChemicalSolutionControlRecordDialog,\r\n      toggleDeleteChemicalSolutionControlRecordDialog,\r\n      toggleVerifyChemicalSolutionControlRecordDialog,\r\n      toggleUndoVerifyChemicalSolutionControlRecordDialog,\r\n      toggleAttachCcrChemicalSolutionControlRecordDialog,\r\n      changeSelectedChemicalSolutionControlStatus,\r\n      changeSelectedChemicalSolutionControlWorksheet,\r\n    } = this.props;\r\n    const {\r\n      chemicalSolutionControlTableData,\r\n      solutionTargetLimitsTableData,\r\n      specificationReferencesTableData,\r\n      chemicalSolutionAnalysisTableData,\r\n      chemicalSolutionAnalysisLabel0,\r\n      chemicalSolutionAnalysisLabel1,\r\n      chemicalSolutionAnalysisLabel2,\r\n      chemicalSolutionAnalysisLabel3,\r\n      chemicalSolutionAnalysisLabel4,\r\n      chemicalSolutionAnalysisLabel5,\r\n      chemicalSolutionAnalysisLabel6,\r\n      chemicalSolutionAnalysisLabel7,\r\n      chemicalSolutionAnalysisLabel8,\r\n      chemicalSolutionAnalysisLabel9,\r\n      chemicalSolutionAnalysisLabel10,\r\n      chemicalSolutionAnalysisLabel11,\r\n      chemicalSolutionAnalysisLabel12,\r\n      chemicalSolutionAnalysisLabel13,\r\n      chemicalSolutionAnalysisLabel14,\r\n      chemicalSolutionAnalysisLabel15,\r\n      chemicalSolutionAnalysisLabel16,\r\n      chemicalSolutionAnalysisLabel17,\r\n      chemicalSolutionAnalysisLabel18,\r\n      chemicalSolutionAnalysisLabel19,\r\n      chemicalSolutionAnalysisLabel20,\r\n      chemicalSolutionAnalysisLabel21,\r\n      chemicalSolutionAnalysisLabel22,\r\n      chemicalSolutionAnalysisLabel23,\r\n      chemicalSolutionAnalysisLabel24,\r\n      chemicalSolutionAnalysisLabel25,\r\n      chemicalSolutionAnalysisLabel26,\r\n      chemicalSolutionAnalysisLabel27,\r\n      chemicalSolutionAnalysisLabel28,\r\n      chemicalSolutionAnalysisLabel29,\r\n      hideWorksheets,\r\n      chemicalSolutionAnalysisChartData,\r\n    } = this.state;\r\n    const { authorization } = jwt_decode(token);\r\n    const {\r\n      superAdmin,\r\n      chemicalSolutionControlCreateWorksheet,\r\n      chemicalSolutionControlCreateRecord,\r\n      chemicalSolutionControlVerifyRecord,\r\n    } = authorization;\r\n    const solutionTargetLimitsTableDataExists = solutionTargetLimitsTableData[0]\r\n      ?.solution\r\n      ? true\r\n      : \"excluded\";\r\n    const chemicalSolutionControlWorksheetsTableColumns = [\r\n      {\r\n        label: \"Actions\",\r\n        name: \"id\",\r\n        options: {\r\n          download: false,\r\n          empty: true,\r\n          filter: false,\r\n          print: false,\r\n          searchable: false,\r\n          sort: false,\r\n          customBodyRender: (value) => {\r\n            let rowData;\r\n\r\n            for (let i = 0; i < chemicalSolutionControlWorksheets.length; i++) {\r\n              if (chemicalSolutionControlWorksheets[i].id === value) {\r\n                rowData = chemicalSolutionControlWorksheets[i];\r\n              }\r\n            }\r\n            return (\r\n              <div>\r\n                {rowData.revised === \"Active\" ? (\r\n                  <ButtonGroup size=\"small\" variant=\"contained\">\r\n                    {superAdmin || chemicalSolutionControlCreateWorksheet ? (\r\n                      <Button\r\n                        onClick={() => {\r\n                          toggleEditChemicalSolutionControlWorksheetDialog(\r\n                            rowData\r\n                          );\r\n                        }}\r\n                        style={{ backgroundColor: \"#4caf50\" }}\r\n                      >\r\n                        <EditOutlinedIcon\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"white\" }}\r\n                        />\r\n                      </Button>\r\n                    ) : null}\r\n\r\n                    {(superAdmin || chemicalSolutionControlCreateWorksheet) &&\r\n                    !rowData?.records?.length ? (\r\n                      <Button\r\n                        onClick={() => {\r\n                          if (\r\n                            selectedChemicalSolutionControlWorksheet?.id ===\r\n                            rowData?.id\r\n                          ) {\r\n                            changeSelectedChemicalSolutionControlWorksheet({});\r\n                          }\r\n                          toggleDeleteChemicalSolutionControlWorksheetDialog(\r\n                            rowData\r\n                          );\r\n                        }}\r\n                        style={{ backgroundColor: \"#4caf50\" }}\r\n                      >\r\n                        <DeleteForeverIcon\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"white\" }}\r\n                        />\r\n                      </Button>\r\n                    ) : null}\r\n\r\n                    {(superAdmin || chemicalSolutionControlCreateWorksheet) &&\r\n                    rowData?.records?.length &&\r\n                    rowData?.revised === \"Active\" ? (\r\n                      <Button\r\n                        onClick={() => {\r\n                          toggleReviseChemicalSolutionControlWorksheetDialog(\r\n                            rowData\r\n                          );\r\n                        }}\r\n                        style={{ backgroundColor: \"#4caf50\" }}\r\n                      >\r\n                        <UpdateOutlinedIcon\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"white\" }}\r\n                        />\r\n                      </Button>\r\n                    ) : null}\r\n\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.setState({ hideWorksheets: true });\r\n                        changeSelectedChemicalSolutionControlWorksheet(rowData);\r\n                      }}\r\n                      disabled={\r\n                        value === selectedChemicalSolutionControlWorksheet?.id\r\n                      }\r\n                      style={{ backgroundColor: \"#4caf50\" }}\r\n                    >\r\n                      <SubjectOutlinedIcon\r\n                        fontSize=\"small\"\r\n                        style={{ color: \"white\" }}\r\n                      />\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                ) : (\r\n                  <ButtonGroup size=\"small\" variant=\"contained\">\r\n                    {superAdmin || chemicalSolutionControlCreateWorksheet ? (\r\n                      <Button\r\n                        onClick={() => {\r\n                          toggleEditChemicalSolutionControlWorksheetDialog(\r\n                            rowData\r\n                          );\r\n                        }}\r\n                        style={{ backgroundColor: \"#f44336\" }}\r\n                      >\r\n                        <EditOutlinedIcon\r\n                          fontSize=\"small\"\r\n                          style={{ color: \"white\" }}\r\n                        />\r\n                      </Button>\r\n                    ) : null}\r\n\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.setState({ hideWorksheets: true });\r\n                        changeSelectedChemicalSolutionControlWorksheet(rowData);\r\n                      }}\r\n                      disabled={\r\n                        value === selectedChemicalSolutionControlWorksheet?.id\r\n                      }\r\n                      style={{ backgroundColor: \"#f44336\" }}\r\n                    >\r\n                      <SubjectOutlinedIcon\r\n                        fontSize=\"small\"\r\n                        style={{ color: \"white\" }}\r\n                      />\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      },\r\n      {\r\n        label: \"Status\",\r\n        name: \"revised\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          display: \"false\",\r\n          filter: false,\r\n          customBodyRender: (value) => {\r\n            switch (value) {\r\n              case \"Active\":\r\n                return (\r\n                  <div>\r\n                    <Chip\r\n                      label={value}\r\n                      size=\"small\"\r\n                      icon={<CheckOutlinedIcon style={{ color: \"white\" }} />}\r\n                      style={{ backgroundColor: \"#4caf50\", color: \"white\" }}\r\n                    />\r\n                  </div>\r\n                );\r\n              case \"Revised\":\r\n                return (\r\n                  <div>\r\n                    <Chip\r\n                      label={value}\r\n                      size=\"small\"\r\n                      icon={<ClearOutlinedIcon style={{ color: \"white\" }} />}\r\n                      style={{ backgroundColor: \"#f44336\", color: \"white\" }}\r\n                    />\r\n                  </div>\r\n                );\r\n              default:\r\n                return (\r\n                  <div>\r\n                    <Chip label=\"No Status\" size=\"small\" />\r\n                  </div>\r\n                );\r\n            }\r\n          },\r\n        },\r\n      },\r\n      {\r\n        label: \"Solution Process\",\r\n        name: \"solutionProcess\",\r\n        options: {\r\n          filter: false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Tank Number\",\r\n        name: \"tankNumber\",\r\n        options: {\r\n          display: \"false\",\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Tank Size\",\r\n        name: \"tankSize\",\r\n        options: {\r\n          display: \"false\",\r\n          filter: false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Tank Volume\",\r\n        name: \"tankVolume\",\r\n        options: {\r\n          display: \"false\",\r\n          filter: false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Location\",\r\n        name: \"location\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Test Method\",\r\n        name: \"testMethod\",\r\n        options: {\r\n          display: \"false\",\r\n          filter: false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Frequency Of Test\",\r\n        name: \"frequencyOfTest\",\r\n        options: {\r\n          display: \"false\",\r\n          filter: false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Temperature Range (°C)\",\r\n        name: \"temperatureRangeInCelcius\",\r\n        options: {\r\n          display: \"false\",\r\n          filter: false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Creator\",\r\n        name: \"creatorName\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Revision\",\r\n        name: \"revision\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Creation Date\",\r\n        name: \"creationDateFormated\",\r\n        options: {\r\n          filter: false,\r\n          searchable: false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n    ];\r\n    const chemicalSolutionControlTableColumns = [\r\n      {\r\n        label: \"Parameter\",\r\n        name: \"parameter\",\r\n        options: {\r\n          display: selectedChemicalSolutionControlWorksheet?.solutionProcess\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n          customBodyRender: (value) => {\r\n            return <b>{value}</b>;\r\n          },\r\n          customHeadRender: () => (\r\n            <th\r\n              key={\"parameter\"}\r\n              style={{ borderBottom: \"1px solid rgba(224, 224, 224, 1)\" }}\r\n            />\r\n          ),\r\n        },\r\n      },\r\n      {\r\n        label: \"Value\",\r\n        name: \"value\",\r\n        options: {\r\n          display: selectedChemicalSolutionControlWorksheet?.solutionProcess\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n          customHeadRender: () => (\r\n            <th\r\n              key={\"value\"}\r\n              style={{ borderBottom: \"1px solid rgba(224, 224, 224, 1)\" }}\r\n            />\r\n          ),\r\n        },\r\n      },\r\n    ];\r\n    const solutionTargetLimitsTableColumns = [\r\n      {\r\n        label: \"Solution Content to be Analyzed\",\r\n        name: \"solution\",\r\n        options: {\r\n          display: solutionTargetLimitsTableDataExists,\r\n          sortThirdClickReset: true,\r\n          viewColumns: false,\r\n        },\r\n      },\r\n      {\r\n        label: \"Min\",\r\n        name: \"min\",\r\n        options: {\r\n          display: solutionTargetLimitsTableDataExists,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Target\",\r\n        name: \"target\",\r\n        options: {\r\n          display: solutionTargetLimitsTableDataExists,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: \"Max\",\r\n        name: \"max\",\r\n        options: {\r\n          display: solutionTargetLimitsTableDataExists,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n    ];\r\n    const specificationReferencesTableColumns = [\r\n      {\r\n        label: \"Solution Content to be Analyzed\",\r\n        name: \"rowName\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName0\r\n            ? true\r\n            : \"excluded\",\r\n          sortThirdClickReset: true,\r\n          viewColumns: false,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName0,\r\n        name: \"columnValue0\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName0\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName0\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName1,\r\n        name: \"columnValue1\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName1\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName1\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName2,\r\n        name: \"columnValue2\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName2\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName2\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName3,\r\n        name: \"columnValue3\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName3\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName3\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName4,\r\n        name: \"columnValue4\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName4\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName4\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName5,\r\n        name: \"columnValue5\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName5\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName5\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName6,\r\n        name: \"columnValue6\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName6\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName6\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName7,\r\n        name: \"columnValue7\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName7\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName7\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName8,\r\n        name: \"columnValue8\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName8\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName8\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName9,\r\n        name: \"columnValue9\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName9\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName9\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n      {\r\n        label: specificationReferencesTableData[0]?.columnName10,\r\n        name: \"columnValue10\",\r\n        options: {\r\n          display: specificationReferencesTableData[0]?.columnName10\r\n            ? true\r\n            : \"excluded\",\r\n          download: specificationReferencesTableData[0]?.columnName10\r\n            ? true\r\n            : false,\r\n          sortThirdClickReset: true,\r\n        },\r\n      },\r\n    ];\r\n    const chemicalSolutionAnalysisTableColumns = [\r\n      {\r\n        label: \"Actions\",\r\n        name: \"id\",\r\n        options: {\r\n          download: false,\r\n          empty: true,\r\n          filter: false,\r\n          print: false,\r\n          searchable: false,\r\n          sort: false,\r\n          customBodyRender: (value) => {\r\n            let rowData;\r\n\r\n            for (let i = 0; i < chemicalSolutionAnalysisTableData.length; i++) {\r\n              if (chemicalSolutionAnalysisTableData[i].id === value) {\r\n                rowData = chemicalSolutionAnalysisTableData[i];\r\n              }\r\n            }\r\n            return (\r\n              <div>\r\n                <ButtonGroup color=\"primary\" size=\"small\">\r\n                  {!rowData?.verifierName &&\r\n                  (superAdmin || chemicalSolutionControlCreateRecord) ? (\r\n                    <Button\r\n                      onClick={() => {\r\n                        toggleEditChemicalSolutionControlRecordDialog(rowData);\r\n                      }}\r\n                    >\r\n                      <EditOutlinedIcon fontSize=\"small\" />\r\n                    </Button>\r\n                  ) : null}\r\n\r\n                  {!rowData?.verifierName &&\r\n                  (superAdmin || chemicalSolutionControlCreateRecord) ? (\r\n                    <Button\r\n                      onClick={() => {\r\n                        toggleDeleteChemicalSolutionControlRecordDialog(\r\n                          rowData\r\n                        );\r\n                      }}\r\n                    >\r\n                      <DeleteForeverIcon fontSize=\"small\" />\r\n                    </Button>\r\n                  ) : null}\r\n\r\n                  {!rowData?.verifierName &&\r\n                  (superAdmin || chemicalSolutionControlVerifyRecord) ? (\r\n                    <Button\r\n                      onClick={() => {\r\n                        toggleVerifyChemicalSolutionControlRecordDialog(\r\n                          rowData\r\n                        );\r\n                      }}\r\n                    >\r\n                      <DoneAllOutlinedIcon fontSize=\"small\" />\r\n                    </Button>\r\n                  ) : null}\r\n\r\n                  {rowData?.verifierName &&\r\n                  (superAdmin || chemicalSolutionControlVerifyRecord) ? (\r\n                    <Button\r\n                      onClick={() => {\r\n                        toggleUndoVerifyChemicalSolutionControlRecordDialog(\r\n                          rowData\r\n                        );\r\n                      }}\r\n                    >\r\n                      <UndoOutlinedIcon fontSize=\"small\" />\r\n                    </Button>\r\n                  ) : null}\r\n\r\n                  {!rowData?.chemicalChargingRecordNumber &&\r\n                  rowData?.verifierName &&\r\n                  (superAdmin || chemicalSolutionControlCreateRecord) ? (\r\n                    <Button\r\n                      onClick={() => {\r\n                        toggleAttachCcrChemicalSolutionControlRecordDialog(\r\n                          rowData\r\n                        );\r\n                      }}\r\n                    >\r\n                      <PostAddOutlinedIcon fontSize=\"small\" />\r\n                    </Button>\r\n                  ) : null}\r\n                </ButtonGroup>\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      },\r\n      {\r\n        label: \"Sample Taken Date\",\r\n        name: \"sampleTakenDateFormated\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"8.75rem\",\r\n              minWidth: \"8.75rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: \"Sample Taken Time\",\r\n        name: \"sampleTakenTime\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"6rem\",\r\n              minWidth: \"6rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: \"Agitation (minutes)\",\r\n        name: \"agitationInMinutes\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"8.5rem\",\r\n              minWidth: \"8.5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: \"Temp. (°C)\",\r\n        name: \"temperatureInCelcius\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"5rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: \"Sample Analysis Date\",\r\n        name: \"sampleAnalysisDateFormated\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"8.75rem\",\r\n              minWidth: \"8.75rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: \"Sample Analysis Time\",\r\n        name: \"sampleAnalysisTime\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"6rem\",\r\n              minWidth: \"6rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel0,\r\n        name: \"analysisResult0\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel0 ? true : \"excluded\",\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel1,\r\n        name: \"analysisResult1\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel1 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel1 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel2,\r\n        name: \"analysisResult2\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel2 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel2 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel3,\r\n        name: \"analysisResult3\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel3 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel3 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel4,\r\n        name: \"analysisResult4\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel4 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel4 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel5,\r\n        name: \"analysisResult5\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel5 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel5 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel6,\r\n        name: \"analysisResult6\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel6 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel6 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel7,\r\n        name: \"analysisResult7\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel7 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel7 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel8,\r\n        name: \"analysisResult8\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel8 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel8 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel9,\r\n        name: \"analysisResult9\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel9 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel9 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel10,\r\n        name: \"analysisResult10\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel10 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel10 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel11,\r\n        name: \"analysisResult11\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel11 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel11 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel12,\r\n        name: \"analysisResult12\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel12 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel12 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel13,\r\n        name: \"analysisResult13\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel13 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel13 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel14,\r\n        name: \"analysisResult14\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel14 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel14 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel15,\r\n        name: \"analysisResult15\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel15 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel15 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel16,\r\n        name: \"analysisResult16\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel16 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel16 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel17,\r\n        name: \"analysisResult17\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel17 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel17 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel18,\r\n        name: \"analysisResult18\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel18 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel18 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel19,\r\n        name: \"analysisResult19\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel19 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel19 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel20,\r\n        name: \"analysisResult20\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel20 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel20 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel21,\r\n        name: \"analysisResult21\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel21 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel21 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel22,\r\n        name: \"analysisResult22\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel22 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel22 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel23,\r\n        name: \"analysisResult23\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel23 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel23 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel24,\r\n        name: \"analysisResult24\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel24 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel24 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel25,\r\n        name: \"analysisResult25\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel25 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel25 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel26,\r\n        name: \"analysisResult26\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel26 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel26 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel27,\r\n        name: \"analysisResult27\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel27 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel27 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel28,\r\n        name: \"analysisResult28\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel28 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel28 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: chemicalSolutionAnalysisLabel29,\r\n        name: \"analysisResult29\",\r\n        options: {\r\n          display: chemicalSolutionAnalysisLabel29 ? true : \"excluded\",\r\n          download: chemicalSolutionAnalysisLabel29 ? true : false,\r\n          sortThirdClickReset: true,\r\n          setCellProps: () => ({\r\n            style: {\r\n              maxWidth: \"15rem\",\r\n              minWidth: \"5rem\",\r\n            },\r\n          }),\r\n        },\r\n      },\r\n      {\r\n        label: \"Technician\",\r\n        name: \"creatorName\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        label: \"Result\",\r\n        name: \"result\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        label: \"Verifier\",\r\n        name: \"verifierName\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        label: \"CCR Number\",\r\n        name: \"chemicalChargingRecordNumber\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        label: \"CCR Received\",\r\n        name: \"chemicalChargingRecordReceivedDateFormated\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          display: false,\r\n        },\r\n      },\r\n      {\r\n        label: \"Remarks\",\r\n        name: \"remarks\",\r\n        options: {\r\n          sortThirdClickReset: true,\r\n          display: false,\r\n        },\r\n      },\r\n    ];\r\n\r\n    chemicalSolutionControlWorksheetsTableOptions.textLabels = {\r\n      body: {\r\n        noMatch:\r\n          !loading && _isMounted\r\n            ? \"❌ There is no matching data to display\"\r\n            : \"⏳ Loading...\",\r\n      },\r\n    };\r\n\r\n    chemicalSolutionControlTableOptions.textLabels = {\r\n      body: {\r\n        noMatch: !loading\r\n          ? \"❌ There is no matching data to display\"\r\n          : \"⏳ Loading...\",\r\n      },\r\n    };\r\n\r\n    solutionTargetLimitsTableOptions.viewColumns =\r\n      solutionTargetLimitsTableData[0]?.solution ? true : false;\r\n\r\n    solutionTargetLimitsTableOptions.textLabels = {\r\n      body: {\r\n        noMatch: !loading\r\n          ? \"❌ There is no matching data to display\"\r\n          : \"⏳ Loading...\",\r\n      },\r\n    };\r\n\r\n    specificationReferencesTableOptions.viewColumns =\r\n      specificationReferencesTableData[0]?.columnName0 ? true : false;\r\n\r\n    specificationReferencesTableOptions.textLabels = {\r\n      body: {\r\n        noMatch: !loading\r\n          ? \"❌ There is no matching data to display\"\r\n          : \"⏳ Loading...\",\r\n      },\r\n    };\r\n\r\n    chemicalSolutionAnalysisTableOptions.textLabels = {\r\n      body: {\r\n        noMatch: !loading\r\n          ? \"❌ There is no matching data to display\"\r\n          : \"⏳ Loading...\",\r\n      },\r\n    };\r\n\r\n    chemicalSolutionAnalysisTableOptions.customToolbar = () => {\r\n      if (superAdmin || chemicalSolutionControlCreateRecord) {\r\n        return (\r\n          <Tooltip\r\n            title={\"New Record\"}\r\n            onClick={() => toggleCreateChemicalSolutionControlRecordDialog()}\r\n          >\r\n            <IconButton>\r\n              <AddIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Suspense fallback={<div className=\"loading\" />}>\r\n        <Fragment>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Breadcrumb heading=\"F-DP 704.05\" match={match} />\r\n              {!selectedChemicalSolutionControlWorksheet?.id ? (\r\n                <span className=\"top-right-button-container\">\r\n                  <FormControl>\r\n                    <Select\r\n                      value={selectedChemicalSolutionControlStatus}\r\n                      onChange={(event) =>\r\n                        changeSelectedChemicalSolutionControlStatus(\r\n                          event.target.value\r\n                        )\r\n                      }\r\n                    >\r\n                      <MenuItem value={\"active\"}>Active</MenuItem>\r\n                      <MenuItem value={\"revised\"}>Revised</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  {superAdmin || chemicalSolutionControlCreateWorksheet ? (\r\n                    <Button\r\n                      className=\"text-zero ml-4\"\r\n                      color=\"primary\"\r\n                      onClick={\r\n                        toggleCreateChemicalSolutionControlWorksheetDialog\r\n                      }\r\n                      variant=\"contained\"\r\n                    >\r\n                      New Worksheet\r\n                    </Button>\r\n                  ) : null}\r\n                </span>\r\n              ) : null}\r\n              <Separator className=\"mb-5\" />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Card\r\n            className=\"pt-5 pl-2 pr-2 pb-2 mb-5\"\r\n            elevation={4}\r\n            hidden={hideWorksheets}\r\n          >\r\n            <CardContent>\r\n              <div\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  display: \"flex\",\r\n                  fontSize: 24,\r\n                  justifyContent: \"center\",\r\n                  minHeight: 0,\r\n                  minWidth: 0,\r\n                  padding: 0,\r\n                }}\r\n              >\r\n                CHEMICAL SOLUTION CONTROL AND RECORDS WORKSHEETS\r\n              </div>\r\n              <div\r\n                style={{\r\n                  alignItems: \"center\",\r\n                  display: \"flex\",\r\n                  fontSize: 24,\r\n                  justifyContent: \"center\",\r\n                  minHeight: 0,\r\n                  minWidth: 0,\r\n                  padding: 0,\r\n                }}\r\n              >\r\n                Chemical Lab. & P.C, Jl. Padjajaran No. 154 Bandung\r\n              </div>\r\n            </CardContent>\r\n            <CardContent>\r\n              <MUIDataTable\r\n                columns={chemicalSolutionControlWorksheetsTableColumns}\r\n                data={\r\n                  !loading && _isMounted\r\n                    ? chemicalSolutionControlWorksheets\r\n                    : []\r\n                }\r\n                options={chemicalSolutionControlWorksheetsTableOptions}\r\n              />\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {Object.keys(selectedChemicalSolutionControlWorksheet).length !== 0 &&\r\n          selectedChemicalSolutionControlWorksheet ? (\r\n            <Card className=\"pl-2 pr-2 pb-2\" elevation={4}>\r\n              <CardContent>\r\n                <div style={{ display: \"flex\" }}>\r\n                  <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={() => {\r\n                      changeSelectedChemicalSolutionControlWorksheet({});\r\n                      this.setState({ hideWorksheets: false });\r\n                    }}\r\n                    style={{\r\n                      marginLeft: \"auto\",\r\n                    }}\r\n                  >\r\n                    <CloseOutlinedIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    fontSize: 24,\r\n                    justifyContent: \"center\",\r\n                    minHeight: 0,\r\n                    minWidth: 0,\r\n                    padding: 0,\r\n                  }}\r\n                >\r\n                  CHEMICAL SOLUTION CONTROL AND RECORDS\r\n                </div>\r\n              </CardContent>\r\n              <CardContent>\r\n                <MUIDataTable\r\n                  className=\"content-card mb-5\"\r\n                  columns={chemicalSolutionControlTableColumns}\r\n                  data={!loading ? chemicalSolutionControlTableData : []}\r\n                  options={chemicalSolutionControlTableOptions}\r\n                />\r\n                <MUIDataTable\r\n                  className=\"content-card mt-5 mb-5\"\r\n                  columns={solutionTargetLimitsTableColumns}\r\n                  data={!loading ? solutionTargetLimitsTableData : []}\r\n                  options={solutionTargetLimitsTableOptions}\r\n                  title={\"Solution Target Limit\"}\r\n                />\r\n                <MUIDataTable\r\n                  className=\"content-card mt-5 mb-5\"\r\n                  columns={specificationReferencesTableColumns}\r\n                  data={!loading ? specificationReferencesTableData : []}\r\n                  options={specificationReferencesTableOptions}\r\n                  title={\"Specification References\"}\r\n                />\r\n                <MUIDataTable\r\n                  className=\"content-card mt-5\"\r\n                  columns={chemicalSolutionAnalysisTableColumns}\r\n                  data={!loading ? chemicalSolutionAnalysisTableData : []}\r\n                  options={chemicalSolutionAnalysisTableOptions}\r\n                  title={\"Chemical Solution Analysis Records\"}\r\n                />\r\n                <div id=\"wrapper\">\r\n                  {chemicalSolutionAnalysisLabel0 ? (\r\n                    <div id=\"chart0\" className=\"mt-5\">\r\n                      <ReactApexChart\r\n                        options={{\r\n                          chart: {\r\n                            id: \"chemicalSolutionAnalysisChart\",\r\n                            type: \"line\",\r\n                          },\r\n                          colors: [\r\n                            \"#f44336\",\r\n                            \"#e91e63\",\r\n                            \"#9c27b0\",\r\n                            \"#673ab7\",\r\n                            \"#3f51b5\",\r\n                            \"#2196f3\",\r\n                            \"#03a9f4\",\r\n                            \"#00bcd4\",\r\n                            \"#009688\",\r\n                            \"#4caf50\",\r\n                            \"#8bc34a\",\r\n                            \"#cddc39\",\r\n                            \"#ffeb3b\",\r\n                            \"#ffc107\",\r\n                            \"#ff9800\",\r\n                            \"#ff5722\",\r\n                            \"#795548\",\r\n                            \"#9e9e9e\",\r\n                            \"#607d8b\",\r\n                            \"#000000\",\r\n                          ],\r\n                          xaxis: {\r\n                            type: \"datetime\",\r\n                          },\r\n                          yaxis: {\r\n                            tickAmount: 7,\r\n                            labels: {\r\n                              minWidth: 40,\r\n                            },\r\n                          },\r\n                          grid: {\r\n                            xaxis: {\r\n                              lines: {\r\n                                show: true,\r\n                              },\r\n                            },\r\n                            yaxis: {\r\n                              lines: {\r\n                                show: true,\r\n                              },\r\n                            },\r\n                          },\r\n                          markers: {\r\n                            size: 2.5,\r\n                          },\r\n                          stroke: {\r\n                            curve: \"smooth\",\r\n                          },\r\n                          legend: {\r\n                            position: \"right\",\r\n                            horizontalAlign: \"left\",\r\n                            width: 142,\r\n                            floating: false,\r\n                            itemMargin: { vertical: 5 },\r\n                            markers: { radius: 5 },\r\n                          },\r\n                        }}\r\n                        series={\r\n                          chemicalSolutionAnalysisChartData ?? [{ data: [] }]\r\n                        }\r\n                        height={500}\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    alignItems: \"center\",\r\n                    display: \"flex\",\r\n                    fontSize: 12,\r\n                    justifyContent: \"left\",\r\n                    minHeight: 0,\r\n                    minWidth: 0,\r\n                    padding: 0,\r\n                    marginTop: 25,\r\n                    marginLeft: 25,\r\n                  }}\r\n                >\r\n                  F-DP 704.05.01\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          ) : null}\r\n\r\n          <Grid container>\r\n            <Separator className=\"mb-5\" />\r\n          </Grid>\r\n        </Fragment>\r\n\r\n        {_isMounted ? <CreateChemicalSolutionControlWorksheetDialog /> : []}\r\n        {_isMounted ? <EditChemicalSolutionControlWorksheetDialog /> : []}\r\n        {_isMounted ? <DeleteChemicalSolutionControlWorksheetDialog /> : []}\r\n        {_isMounted ? <ReviseChemicalSolutionControlWorksheetDialog /> : []}\r\n        {_isMounted ? <CreateChemicalSolutionControlRecordDialog /> : []}\r\n        {_isMounted ? <EditChemicalSolutionControlRecordDialog /> : []}\r\n        {_isMounted ? <DeleteChemicalSolutionControlRecordDialog /> : []}\r\n        {_isMounted ? <VerifyChemicalSolutionControlRecordDialog /> : []}\r\n        {_isMounted ? <UndoVerifyChemicalSolutionControlRecordDialog /> : []}\r\n        {_isMounted ? <AttachCcrChemicalSolutionControlRecordDialog /> : []}\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, qaChemicalSolutionControl }) => {\r\n  const { token } = auth;\r\n  const {\r\n    loading,\r\n    selectedChemicalSolutionControlStatus,\r\n    chemicalSolutionControlWorksheets,\r\n    selectedChemicalSolutionControlWorksheet,\r\n  } = qaChemicalSolutionControl;\r\n  return {\r\n    token,\r\n    loading,\r\n    selectedChemicalSolutionControlStatus,\r\n    chemicalSolutionControlWorksheets,\r\n    selectedChemicalSolutionControlWorksheet,\r\n  };\r\n};\r\nconst mapActionsToProps = {\r\n  getChemicalSolutionControlWorksheets,\r\n  toggleCreateChemicalSolutionControlWorksheetDialog,\r\n  toggleEditChemicalSolutionControlWorksheetDialog,\r\n  toggleDeleteChemicalSolutionControlWorksheetDialog,\r\n  toggleReviseChemicalSolutionControlWorksheetDialog,\r\n  toggleCreateChemicalSolutionControlRecordDialog,\r\n  toggleEditChemicalSolutionControlRecordDialog,\r\n  toggleDeleteChemicalSolutionControlRecordDialog,\r\n  toggleVerifyChemicalSolutionControlRecordDialog,\r\n  toggleUndoVerifyChemicalSolutionControlRecordDialog,\r\n  toggleAttachCcrChemicalSolutionControlRecordDialog,\r\n  changeSelectedChemicalSolutionControlStatus,\r\n  changeSelectedChemicalSolutionControlWorksheet,\r\n  editChemicalSolutionControlWorksheet,\r\n  deleteChemicalSolutionControlWorksheet,\r\n  editChemicalSolutionControlRecord,\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(QaChemicalSolutionControl);\r\n"],"sourceRoot":""}