{"version":3,"sources":["constants/menus.js","containers/navs/Sidebar.js","components/svg/MenuIcon.js","components/svg/MobileMenuIcon.js","containers/modals/ChangePasswordModal.js","containers/modals/ProfileModal.js","containers/navs/Topnav.js","layout/AppLayout.js","views/app/index.js","components/Backgrounds.js","constants/styles.js","constants/validationSchemas.js"],"names":["dashboardsMenu","id","icon","label","to","organizationUnitMenu","userManagementMenu","laboratoryTestMenu","chemicalSolutionControlMenu","electroplatingChemicalProcessControlMenu","Sidebar","props","handleWindowResize","event","isTrusted","containerClassnames","nextClasses","getMenuClassesForResize","setContainerClassnames","join","selectedMenuHasSubItems","handleDocumentClick","e","container","getContainer","isMenuClick","target","classList","contains","parentElement","setState","viewingParentMenu","toggle","classes","menuHiddenBreakpoint","subHiddenBreakpoint","split","filter","x","windowWidth","window","innerWidth","push","includes","ReactDOM","findDOMNode","hasSubItems","getIsHasSubItem","changeSelectedMenuHasSubItems","menuClickCount","currentClasses","clickIndex","handleProps","addEvents","forEach","document","addEventListener","removeEvents","removeEventListener","setSelectedLiActive","callback","oldli","querySelector","state","selectedParentMenu","menu","remove","oldliSub","selectedSublink","add","selectedlink","getAttribute","selectedParentNoSubItem","setHasSubItemStatus","hasSubmenu","menuItem","find","subs","length","openSubMenu","selectedParent","hasSubMenu","preventDefault","addContainerClassname","toggleMenuCollapse","menuKey","collapsedMenus","indexOf","this","prevProps","location","pathname","scrollTo","className","style","opacity","options","suppressScrollX","wheelPropagation","Nav","vertical","map","item","NavItem","classnames","active","newWindow","href","rel","onClick","sub","index","Collapse","isOpen","thirdSub","thirdIndex","token","authorization","jwt_decode","superAdmin","laboratoryTestAdmin","laboratoryTestView","chemicalSolutionControlAdmin","chemicalSolutionControlView","electroplatingChemicalProcessControlAdmin","electroplatingChemicalProcessControlView","splice","PureComponent","mapActionToProps","changeDefaultClassnames","withRouter","connect","auth","MenuIcon","xmlns","viewBox","y","width","height","MobileMenuIcon","ChangePasswordModal","triggerChangePassword","values","loading","changePassword","newPassword","confirmNewPassword","toastNewPasswordsNotMatched","password","showChangePasswordModal","toggleChangePasswordModal","Modal","backdrop","Fragment","initialValues","onSubmit","validationSchema","changePasswordFormValidationSchema","touched","errors","handleChange","handleBlur","autoComplete","ModalHeader","ModalBody","Container","Row","Col","TextField","error","fullWidth","helperText","InputLabelProps","shrink","name","onBlur","onChange","type","value","ModalFooter","Button","color","variant","mapActionsToProps","ProfileModal","triggerChangeProfile","changeProfile","nik","organization","iaeEmail","phoneNo","_prevState","showChangeProfileModal","console","log","toggleChangeProfileModal","changeProfileFormValidationSchema","placeholder","xs","TopNav","isInFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","toggleFullScreen","docElm","documentElement","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","menuButtonClick","setTimeout","createEvent","initEvent","dispatchEvent","mobileMenuButtonClick","clickOnMobileMenu","history","logoutUser","UncontrolledDropdown","DropdownToggle","size","Avatar","src","backEndUrl","DropdownMenu","right","DropdownItem","divider","changeLocale","settings","locale","AppLayout","children","appliedTheme","createTheme","light","ThemeProvider","theme","refreshUser","Dashboards","React","lazy","OrganizationUnit","UserManagement","QaLaboratoryTest","QaChemicalSolutionControl","QaElectroplatingChemicalProcessControl","App","match","url","fallback","exact","from","path","render","AuthBackground","background","backgroundMode","enable","fpsLimit","interactivity","detect_on","events","onclick","mode","onhover","parallax","force","smooth","resize","modes","bubble","distance","duration","speed","grab","line_linked","particles_nb","repulse","particles","move","attract","rotateX","rotateY","bounce","direction","out_mode","random","straight","number","density","value_area","anim","opacity_min","sync","minimumValue","shape","size_min","retina_detect","AppBackground","detectRetina","detectsOn","onHover","quantity","collisions","links","outMode","palette","primary","contrastText","dark","main","secondary","registerUserFormValidationSchema","Yup","registerNik","required","min","max","matches","registerPassword","registerConfirmPassword","oneOf","loginUserFormValidationSchema","loginUsername","loginPassword","laboratoryTestFormByAdminValidationSchema","laboratory","nullable","organizationUnit","requestNumber","material","specification","program","budgetNumber","reasonOfTest","manufacturer","manufacturingDate","expiryDate","batchNumber","sample","condition","unit","typeOfTest","testAccordingToSpecification","requester","requestApprover","reporter","reportApprover","laboratoryTestRequestFormValidationSchema","laboratoryTestRequestReceiveFormValidationSchema","requestDate","requestReceiveDate","workdayEstimation","estimationCloseDate","laboratoryTestReportFormValidationSchema","reportDate","reportNumber","chemicalSolutionControlCreateWorksheetFormValidationSchema","solutionProcess","tankNumber","tankSize","tankVolume","testMethod","frequencyOfTest","temperatureRangeInCelcius","chemicalSolutionControlEditWorksheetFormValidationSchema","chemicalSolutionControlReviseWorksheetFormValidationSchema","chemicalSolutionControlCreateRecordFormValidationSchema","sampleTakenDate","sampleTakenTime","agitationInMinutes","temperatureInCelcius","sampleAnalysisDate","sampleAnalysisTime","remarks","chemicalSolutionControlEditRecordFormValidationSchema","chemicalSolutionControlRecordAttachCcrFormValidationSchema","chemicalChargingRecordNumber","chemicalChargingRecordReceivedDate"],"mappings":"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","file":"static/js/18.133f5fce.chunk.js","sourcesContent":["const dashboardsMenu = {\r\n  id: \"dashboards\",\r\n  icon: \"iconsminds-home\",\r\n  label: \"Dashboards\",\r\n  to: \"/app/dashboards\",\r\n};\r\n\r\nconst organizationUnitMenu = {\r\n  id: \"organization-unit\",\r\n  icon: \"iconsminds-network\",\r\n  label: \"Organization\",\r\n  to: \"/app/organization-unit\",\r\n};\r\n\r\n// Deprecated\r\n// const mediaMenu = {\r\n//   id: \"media\",\r\n//   icon: \"iconsminds-tv\",\r\n//   label: \"Media\",\r\n//   to: \"/app/media\",\r\n// };\r\n\r\nconst userManagementMenu = {\r\n  id: \"user-management\",\r\n  icon: \"iconsminds-male-female\",\r\n  label: \"Users\",\r\n  to: \"/app/user-management\",\r\n};\r\n\r\nconst laboratoryTestMenu = {\r\n  id: \"laboratory-test\",\r\n  icon: \"iconsminds-atom\",\r\n  label: \"F-DP 704.04\",\r\n  to: \"/app/laboratory-test\",\r\n};\r\n\r\nconst chemicalSolutionControlMenu = {\r\n  id: \"chemical-solution-control\",\r\n  icon: \"iconsminds-chemical\",\r\n  label: \"F-DP 704.05.01\",\r\n  to: \"/app/chemical-solution-control\",\r\n};\r\n\r\nconst electroplatingChemicalProcessControlMenu = {\r\n  id: \"electroplating-chemical-process-control\",\r\n  icon: \"iconsminds-flash-2\",\r\n  label: \"F-DP 704.05.04\",\r\n  to: \"/app/electroplating-chemical-process-control\",\r\n};\r\n\r\nexport {\r\n  dashboardsMenu,\r\n  organizationUnitMenu,\r\n  // mediaMenu,\r\n  userManagementMenu,\r\n  laboratoryTestMenu,\r\n  chemicalSolutionControlMenu,\r\n  electroplatingChemicalProcessControlMenu,\r\n};\r\n","import React, { PureComponent, Fragment } from \"react\";\r\nimport { Collapse, Nav, NavItem } from \"reactstrap\";\r\nimport {\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n  setContainerClassnames,\r\n} from \"../../redux/actions\";\r\nimport {\r\n  chemicalSolutionControlMenu,\r\n  dashboardsMenu,\r\n  electroplatingChemicalProcessControlMenu,\r\n  laboratoryTestMenu,\r\n  // mediaMenu,\r\n  organizationUnitMenu,\r\n  userManagementMenu,\r\n} from \"../../constants/menus\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\r\nimport ReactDOM from \"react-dom\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Sidebar extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedParentMenu: \"\",\r\n      viewingParentMenu: \"\",\r\n      collapsedMenus: [],\r\n      menu: \"\",\r\n    };\r\n  }\r\n\r\n  handleWindowResize = (event) => {\r\n    if (event && !event.isTrusted) {\r\n      return;\r\n    }\r\n    const { containerClassnames } = this.props;\r\n    let nextClasses = this.getMenuClassesForResize(containerClassnames);\r\n    this.props.setContainerClassnames(\r\n      0,\r\n      nextClasses.join(\" \"),\r\n      this.props.selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  handleDocumentClick = (e) => {\r\n    const container = this.getContainer();\r\n    let isMenuClick = false;\r\n    if (\r\n      e.target &&\r\n      e.target.classList &&\r\n      (e.target.classList.contains(\"menu-button\") ||\r\n        e.target.classList.contains(\"menu-button-mobile\"))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.classList &&\r\n      (e.target.parentElement.classList.contains(\"menu-button\") ||\r\n        e.target.parentElement.classList.contains(\"menu-button-mobile\"))\r\n    ) {\r\n      isMenuClick = true;\r\n    } else if (\r\n      e.target.parentElement &&\r\n      e.target.parentElement.parentElement &&\r\n      e.target.parentElement.parentElement.classList &&\r\n      (e.target.parentElement.parentElement.classList.contains(\"menu-button\") ||\r\n        e.target.parentElement.parentElement.classList.contains(\r\n          \"menu-button-mobile\"\r\n        ))\r\n    ) {\r\n      isMenuClick = true;\r\n    }\r\n    if (container.contains(e.target) || container === e.target || isMenuClick) {\r\n      return;\r\n    }\r\n    this.setState({\r\n      viewingParentMenu: \"\",\r\n    });\r\n    this.toggle();\r\n  };\r\n\r\n  getMenuClassesForResize = (classes) => {\r\n    const { menuHiddenBreakpoint, subHiddenBreakpoint } = this.props;\r\n    let nextClasses = classes.split(\" \").filter((x) => x !== \"\");\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth < menuHiddenBreakpoint) {\r\n      nextClasses.push(\"menu-mobile\");\r\n    } else if (windowWidth < subHiddenBreakpoint) {\r\n      nextClasses = nextClasses.filter((x) => x !== \"menu-mobile\");\r\n      if (\r\n        nextClasses.includes(\"menu-default\") &&\r\n        !nextClasses.includes(\"menu-sub-hidden\")\r\n      ) {\r\n        nextClasses.push(\"menu-sub-hidden\");\r\n      }\r\n    } else {\r\n      nextClasses = nextClasses.filter((x) => x !== \"menu-mobile\");\r\n      if (\r\n        nextClasses.includes(\"menu-default\") &&\r\n        nextClasses.includes(\"menu-sub-hidden\")\r\n      ) {\r\n        nextClasses = nextClasses.filter((x) => x !== \"menu-sub-hidden\");\r\n      }\r\n    }\r\n    return nextClasses;\r\n  };\r\n\r\n  getContainer = () => {\r\n    return ReactDOM.findDOMNode(this);\r\n  };\r\n\r\n  toggle = () => {\r\n    const hasSubItems = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubItems);\r\n    const { containerClassnames, menuClickCount } = this.props;\r\n    const currentClasses = containerClassnames\r\n      ? containerClassnames.split(\" \").filter((x) => x !== \"\")\r\n      : \"\";\r\n    let clickIndex = -1;\r\n\r\n    if (!hasSubItems) {\r\n      if (\r\n        currentClasses.includes(\"menu-default\") &&\r\n        (menuClickCount % 4 === 0 || menuClickCount % 4 === 3)\r\n      ) {\r\n        clickIndex = 1;\r\n      } else if (\r\n        currentClasses.includes(\"menu-sub-hidden\") &&\r\n        (menuClickCount === 2 || menuClickCount === 3)\r\n      ) {\r\n        clickIndex = 0;\r\n      } else if (\r\n        currentClasses.includes(\"menu-hidden\") ||\r\n        currentClasses.includes(\"menu-mobile\")\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    } else {\r\n      if (currentClasses.includes(\"menu-sub-hidden\") && menuClickCount === 3) {\r\n        clickIndex = 2;\r\n      } else if (\r\n        currentClasses.includes(\"menu-hidden\") ||\r\n        currentClasses.includes(\"menu-mobile\")\r\n      ) {\r\n        clickIndex = 0;\r\n      }\r\n    }\r\n    if (clickIndex >= 0) {\r\n      this.props.setContainerClassnames(\r\n        clickIndex,\r\n        containerClassnames,\r\n        hasSubItems\r\n      );\r\n    }\r\n  };\r\n\r\n  handleProps = () => {\r\n    this.addEvents();\r\n  };\r\n\r\n  addEvents = () => {\r\n    [\"click\", \"touchstart\", \"touchend\"].forEach((event) =>\r\n      document.addEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  removeEvents = () => {\r\n    [\"click\", \"touchstart\", \"touchend\"].forEach((event) =>\r\n      document.removeEventListener(event, this.handleDocumentClick, true)\r\n    );\r\n  };\r\n\r\n  setSelectedLiActive = (callback) => {\r\n    const oldli = document.querySelector(\".sub-menu  li.active\");\r\n    const { selectedParentMenu, menu } = this.state;\r\n\r\n    if (oldli != null) {\r\n      oldli.classList.remove(\"active\");\r\n    }\r\n\r\n    const oldliSub = document.querySelector(\".third-level-menu  li.active\");\r\n    if (oldliSub != null) {\r\n      oldliSub.classList.remove(\"active\");\r\n    }\r\n\r\n    const selectedSublink = document.querySelector(\r\n      \".third-level-menu  a.active\"\r\n    );\r\n    if (selectedSublink != null) {\r\n      selectedSublink.parentElement.classList.add(\"active\");\r\n    }\r\n\r\n    const selectedlink = document.querySelector(\".sub-menu  a.active\");\r\n    if (selectedlink != null) {\r\n      selectedlink.parentElement.classList.add(\"active\");\r\n      this.setState(\r\n        {\r\n          selectedParentMenu:\r\n            selectedlink.parentElement.parentElement.getAttribute(\r\n              \"data-parent\"\r\n            ),\r\n        },\r\n        callback\r\n      );\r\n    } else {\r\n      let selectedParentNoSubItem = document.querySelector(\r\n        \".main-menu  li a.active\"\r\n      );\r\n      if (selectedParentNoSubItem != null) {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu:\r\n              selectedParentNoSubItem.getAttribute(\"data-flag\"),\r\n          },\r\n          callback\r\n        );\r\n      } else if (selectedParentMenu === \"\") {\r\n        this.setState(\r\n          {\r\n            selectedParentMenu: menu[0].id,\r\n          },\r\n          callback\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  setHasSubItemStatus = () => {\r\n    const hasSubmenu = this.getIsHasSubItem();\r\n    this.props.changeSelectedMenuHasSubItems(hasSubmenu);\r\n    this.toggle();\r\n  };\r\n\r\n  getIsHasSubItem = () => {\r\n    const { selectedParentMenu, menu } = this.state;\r\n    const menuItem = menu.find((x) => x.id === selectedParentMenu);\r\n\r\n    if (menuItem)\r\n      return menuItem && menuItem.subs && menuItem.subs.length > 0\r\n        ? true\r\n        : false;\r\n    else return false;\r\n  };\r\n\r\n  openSubMenu = (e, menuItem) => {\r\n    const selectedParent = menuItem.id;\r\n    const hasSubMenu = menuItem.subs && menuItem.subs.length > 0;\r\n    this.props.changeSelectedMenuHasSubItems(hasSubMenu);\r\n    if (!hasSubMenu) {\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n        selectedParentMenu: selectedParent,\r\n      });\r\n      this.toggle();\r\n    } else {\r\n      e.preventDefault();\r\n\r\n      const { containerClassnames, menuClickCount } = this.props;\r\n      const currentClasses = containerClassnames\r\n        ? containerClassnames.split(\" \").filter((x) => x !== \"\")\r\n        : \"\";\r\n\r\n      if (!currentClasses.includes(\"menu-mobile\")) {\r\n        if (\r\n          currentClasses.includes(\"menu-sub-hidden\") &&\r\n          (menuClickCount === 2 || menuClickCount === 0)\r\n        ) {\r\n          this.props.setContainerClassnames(3, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes(\"menu-hidden\") &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(2, containerClassnames, hasSubMenu);\r\n        } else if (\r\n          currentClasses.includes(\"menu-default\") &&\r\n          !currentClasses.includes(\"menu-sub-hidden\") &&\r\n          (menuClickCount === 1 || menuClickCount === 3)\r\n        ) {\r\n          this.props.setContainerClassnames(0, containerClassnames, hasSubMenu);\r\n        }\r\n      } else {\r\n        this.props.addContainerClassname(\r\n          \"sub-show-temporary\",\r\n          containerClassnames\r\n        );\r\n      }\r\n      this.setState({\r\n        viewingParentMenu: selectedParent,\r\n      });\r\n    }\r\n  };\r\n\r\n  toggleMenuCollapse = (e, menuKey) => {\r\n    let { collapsedMenus } = this.state;\r\n\r\n    e.preventDefault();\r\n    if (collapsedMenus.indexOf(menuKey) > -1) {\r\n      this.setState({\r\n        collapsedMenus: collapsedMenus.filter((x) => x !== menuKey),\r\n      });\r\n    } else {\r\n      collapsedMenus.push(menuKey);\r\n      this.setState({\r\n        collapsedMenus,\r\n      });\r\n    }\r\n    return false;\r\n  };\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    const { token } = props;\r\n    const { authorization } = jwt_decode(token);\r\n    const {\r\n      superAdmin,\r\n      laboratoryTestAdmin,\r\n      laboratoryTestView,\r\n      chemicalSolutionControlAdmin,\r\n      chemicalSolutionControlView,\r\n      electroplatingChemicalProcessControlAdmin,\r\n      electroplatingChemicalProcessControlView,\r\n    } = authorization;\r\n    let menu = [];\r\n\r\n    menu.push(dashboardsMenu);\r\n    menu.push(organizationUnitMenu);\r\n    if (superAdmin) {\r\n      // menu.splice(1, 0, mediaMenu);\r\n      menu.splice(3, 0, userManagementMenu);\r\n      menu.splice(4, 0, laboratoryTestMenu);\r\n      menu.splice(5, 0, chemicalSolutionControlMenu);\r\n      menu.splice(6, 0, electroplatingChemicalProcessControlMenu);\r\n    } else {\r\n      if (\r\n        laboratoryTestAdmin ||\r\n        chemicalSolutionControlAdmin ||\r\n        electroplatingChemicalProcessControlAdmin\r\n      ) {\r\n        menu.push(userManagementMenu);\r\n      }\r\n      if (laboratoryTestView) {\r\n        menu.push(laboratoryTestMenu);\r\n      }\r\n      if (chemicalSolutionControlView) {\r\n        menu.push(chemicalSolutionControlMenu);\r\n      }\r\n      if (electroplatingChemicalProcessControlView) {\r\n        menu.push(electroplatingChemicalProcessControlMenu);\r\n      }\r\n    }\r\n    return {\r\n      menu: menu,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    this.handleWindowResize();\r\n    this.handleProps();\r\n    this.setSelectedLiActive(this.setHasSubItemStatus);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      this.setSelectedLiActive(this.setHasSubItemStatus);\r\n\r\n      window.scrollTo(0, 0);\r\n    }\r\n    this.handleProps();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeEvents();\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  render() {\r\n    const { selectedParentMenu, viewingParentMenu, collapsedMenus, menu } =\r\n      this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"sidebar\"\r\n        style={{\r\n          opacity: 0.95,\r\n        }}\r\n      >\r\n        <div className=\"main-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              <Nav vertical className=\"list-unstyled\">\r\n                {menu &&\r\n                  menu.map((item) => {\r\n                    return (\r\n                      <NavItem\r\n                        key={item.id}\r\n                        className={classnames({\r\n                          active:\r\n                            (selectedParentMenu === item.id &&\r\n                              viewingParentMenu === \"\") ||\r\n                            viewingParentMenu === item.id,\r\n                        })}\r\n                      >\r\n                        {item.newWindow ? (\r\n                          <a\r\n                            href={item.to}\r\n                            rel=\"noopener noreferrer\"\r\n                            target=\"_blank\"\r\n                          >\r\n                            <i className={item.icon} /> {item.label}\r\n                          </a>\r\n                        ) : (\r\n                          <NavLink\r\n                            to={item.to}\r\n                            onClick={(e) => this.openSubMenu(e, item)}\r\n                            data-flag={item.id}\r\n                          >\r\n                            <i className={item.icon} /> {item.label}\r\n                          </NavLink>\r\n                        )}\r\n                      </NavItem>\r\n                    );\r\n                  })}\r\n              </Nav>\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n        <div className=\"sub-menu\">\r\n          <div className=\"scroll\">\r\n            <PerfectScrollbar\r\n              options={{ suppressScrollX: true, wheelPropagation: false }}\r\n            >\r\n              {menu &&\r\n                menu.map((item) => {\r\n                  return (\r\n                    <Nav\r\n                      key={item.id}\r\n                      className={classnames({\r\n                        \"d-block\":\r\n                          (selectedParentMenu === item.id &&\r\n                            viewingParentMenu === \"\") ||\r\n                          viewingParentMenu === item.id,\r\n                      })}\r\n                      data-parent={item.id}\r\n                    >\r\n                      {item.subs &&\r\n                        item.subs.map((sub, index) => {\r\n                          return (\r\n                            <NavItem\r\n                              key={`${item.id}_${index}`}\r\n                              className={`${\r\n                                sub.subs && sub.subs.length > 0\r\n                                  ? \"has-sub-item\"\r\n                                  : \"\"\r\n                              }`}\r\n                            >\r\n                              {sub.newWindow ? (\r\n                                <a\r\n                                  href={sub.to}\r\n                                  rel=\"noopener noreferrer\"\r\n                                  target=\"_blank\"\r\n                                >\r\n                                  <i className={sub.icon} /> {sub.label}\r\n                                </a>\r\n                              ) : sub.subs && sub.subs.length > 0 ? (\r\n                                <Fragment>\r\n                                  <NavLink\r\n                                    className={`rotate-arrow-icon opacity-50 ${\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                        ? \"\"\r\n                                        : \"collapsed\"\r\n                                    }`}\r\n                                    to={sub.to}\r\n                                    id={`${item.id}_${index}`}\r\n                                    onClick={(e) =>\r\n                                      this.toggleMenuCollapse(\r\n                                        e,\r\n                                        `${item.id}_${index}`\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <i className=\"simple-icon-arrow-down\" />{\" \"}\r\n                                    {sub.label}\r\n                                  </NavLink>\r\n\r\n                                  <Collapse\r\n                                    isOpen={\r\n                                      collapsedMenus.indexOf(\r\n                                        `${item.id}_${index}`\r\n                                      ) === -1\r\n                                    }\r\n                                  >\r\n                                    <Nav className=\"third-level-menu\">\r\n                                      {sub.subs.map((thirdSub, thirdIndex) => {\r\n                                        return (\r\n                                          <NavItem\r\n                                            key={`${item.id}_${index}_${thirdIndex}`}\r\n                                          >\r\n                                            {thirdSub.newWindow ? (\r\n                                              <a\r\n                                                href={thirdSub.to}\r\n                                                rel=\"noopener noreferrer\"\r\n                                                target=\"_blank\"\r\n                                              >\r\n                                                <i className={thirdSub.icon} />{\" \"}\r\n                                                {thirdSub.label}\r\n                                              </a>\r\n                                            ) : (\r\n                                              <NavLink to={thirdSub.to}>\r\n                                                <i className={thirdSub.icon} />{\" \"}\r\n                                                {thirdSub.label}\r\n                                              </NavLink>\r\n                                            )}\r\n                                          </NavItem>\r\n                                        );\r\n                                      })}\r\n                                    </Nav>\r\n                                  </Collapse>\r\n                                </Fragment>\r\n                              ) : (\r\n                                <NavLink to={sub.to}>\r\n                                  <i className={sub.icon} /> {sub.label}\r\n                                </NavLink>\r\n                              )}\r\n                            </NavItem>\r\n                          );\r\n                        })}\r\n                    </Nav>\r\n                  );\r\n                })}\r\n            </PerfectScrollbar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, menu }) => {\r\n  const { token } = auth;\r\n  const {\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n  } = menu;\r\n\r\n  return {\r\n    token,\r\n    containerClassnames,\r\n    subHiddenBreakpoint,\r\n    menuHiddenBreakpoint,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n  };\r\n};\r\n\r\nconst mapActionToProps = {\r\n  setContainerClassnames,\r\n  addContainerClassname,\r\n  changeDefaultClassnames,\r\n  changeSelectedMenuHasSubItems,\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapActionToProps)(Sidebar));\r\n","import React, { Fragment } from 'react';\r\n\r\nconst MenuIcon = () => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<svg\r\n\t\t\t\tclassName='main'\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\tviewBox='0 0 9 17'>\r\n\t\t\t\t<rect x='0.48' y='0.5' width='7' height='1' />\r\n\t\t\t\t<rect x='0.48' y='7.5' width='7' height='1' />\r\n\t\t\t\t<rect x='0.48' y='15.5' width='7' height='1' />\r\n\t\t\t</svg>\r\n\t\t\t<svg\r\n\t\t\t\tclassName='sub'\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\tviewBox='0 0 18 17'>\r\n\t\t\t\t<rect x='1.56' y='0.5' width='16' height='1' />\r\n\t\t\t\t<rect x='1.56' y='7.5' width='16' height='1' />\r\n\t\t\t\t<rect x='1.56' y='15.5' width='16' height='1' />\r\n\t\t\t</svg>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default MenuIcon;\r\n","import React from 'react';\r\n\r\nconst MobileMenuIcon = () => {\r\n\treturn (\r\n\t\t<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 26 17'>\r\n\t\t\t<rect x='0.5' y='0.5' width='25' height='1' />\r\n\t\t\t<rect x='0.5' y='7.5' width='25' height='1' />\r\n\t\t\t<rect x='0.5' y='15.5' width='25' height='1' />\r\n\t\t</svg>\r\n\t);\r\n};\r\n\r\nexport default MobileMenuIcon;\r\n","import {\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { changePassword, toggleChangePasswordModal } from \"../../redux/actions\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { LoadingSpinner } from \"../../components/Miscellaneous\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { changePasswordFormValidationSchema } from \"../../constants/validationSchemas\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { toastNewPasswordsNotMatched } from \"../../components/Toasts\";\r\n\r\nclass ChangePasswordModal extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newPassword: \"\",\r\n      confirmNewPassword: \"\",\r\n    };\r\n  }\r\n\r\n  triggerChangePassword = (values) => {\r\n    const { token, loading, changePassword } = this.props;\r\n    const { id } = jwt_decode(token);\r\n    const { newPassword, confirmNewPassword } = values;\r\n\r\n    if (!loading) {\r\n      if (newPassword !== confirmNewPassword) {\r\n        return toastNewPasswordsNotMatched();\r\n      }\r\n      changePassword({ id, password: newPassword });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { loading, showChangePasswordModal, toggleChangePasswordModal } =\r\n      this.props;\r\n    const { newPassword, confirmNewPassword } = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        backdrop={true}\r\n        className={`modal-form-m`}\r\n        isOpen={showChangePasswordModal}\r\n        toggle={toggleChangePasswordModal}\r\n      >\r\n        {showChangePasswordModal ? (\r\n          <React.Fragment>\r\n            <Formik\r\n              initialValues={{\r\n                newPassword,\r\n                confirmNewPassword,\r\n              }}\r\n              onSubmit={this.triggerChangePassword}\r\n              validationSchema={changePasswordFormValidationSchema}\r\n            >\r\n              {({ values, touched, errors, handleChange, handleBlur }) => (\r\n                <Form autoComplete=\"off\">\r\n                  <ModalHeader>Change Password</ModalHeader>\r\n                  <ModalBody>\r\n                    <Container>\r\n                      <Row className=\"mb-4 pb-4 mt-4 pt-4\">\r\n                        <Col>\r\n                          <TextField\r\n                            error={errors.newPassword && touched.newPassword}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.newPassword &&\r\n                              touched.newPassword &&\r\n                              errors.newPassword\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"New Password\"\r\n                            name=\"newPassword\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            type=\"password\"\r\n                            value={values.newPassword}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className=\"mb-4 pb-4 mt-4 pt-4\">\r\n                        <Col>\r\n                          <TextField\r\n                            error={\r\n                              errors.confirmNewPassword &&\r\n                              touched.confirmNewPassword\r\n                            }\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.confirmNewPassword &&\r\n                              touched.confirmNewPassword &&\r\n                              errors.confirmNewPassword\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Confirm New Password\"\r\n                            name=\"confirmNewPassword\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            type=\"password\"\r\n                            value={values.confirmNewPassword}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state`}\r\n                      color=\"secondary\"\r\n                      onClick={\r\n                        !loading\r\n                          ? () => {\r\n                              toggleChangePasswordModal();\r\n                            }\r\n                          : null\r\n                      }\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <span className=\"label\">Cancel</span>\r\n                    </Button>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"primary\"\r\n                      type={loading ? \"button\" : \"submit\"}\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Save</span>\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { token, loading, showChangePasswordModal } = auth;\r\n\r\n  return {\r\n    token,\r\n    loading,\r\n    showChangePasswordModal,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  toggleChangePasswordModal,\r\n  changePassword,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ChangePasswordModal);\r\n","import {\r\n  Col,\r\n  Container,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { changeProfile, toggleChangeProfileModal } from \"../../redux/actions\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { LoadingSpinner } from \"../../components/Miscellaneous\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { changeProfileFormValidationSchema } from \"../../constants/validationSchemas\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nclass ProfileModal extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nik: \"\",\r\n      name: \"\",\r\n      organization: \"\",\r\n      iaeEmail: \"\",\r\n      phoneNo: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps, _prevState) {\r\n    const { token, showChangeProfileModal } = this.props;\r\n    const { nik, name, organization, iaeEmail, phoneNo } = jwt_decode(token);\r\n    console.log(jwt_decode(token));\r\n\r\n    if (\r\n      showChangeProfileModal !== prevProps.showChangeProfileModal &&\r\n      showChangeProfileModal\r\n    ) {\r\n      this.setState({\r\n        nik: nik,\r\n        name: name,\r\n        organization: organization,\r\n        iaeEmail: iaeEmail,\r\n        phoneNo: phoneNo,\r\n      });\r\n    }\r\n  }\r\n\r\n  triggerChangeProfile = (values) => {\r\n    const { token, loading, changeProfile } = this.props;\r\n    const { id } = jwt_decode(token);\r\n    const { nik, name, organization, iaeEmail, phoneNo } = values;\r\n\r\n    if (!loading) {\r\n      changeProfile({ id, nik, name, organization, iaeEmail, phoneNo });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { loading, showChangeProfileModal, toggleChangeProfileModal } =\r\n      this.props;\r\n    const { nik, name, organization, iaeEmail, phoneNo } = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        backdrop={true}\r\n        className={`modal-form-m`}\r\n        isOpen={showChangeProfileModal}\r\n        toggle={toggleChangeProfileModal}\r\n      >\r\n        {showChangeProfileModal ? (\r\n          <React.Fragment>\r\n            <Formik\r\n              initialValues={{\r\n                nik,\r\n                name,\r\n                organization,\r\n                iaeEmail,\r\n                phoneNo,\r\n              }}\r\n              onSubmit={this.triggerChangeProfile}\r\n              validationSchema={changeProfileFormValidationSchema}\r\n            >\r\n              {({ values, touched, errors, handleChange, handleBlur }) => (\r\n                <Form autoComplete=\"off\">\r\n                  <ModalHeader>Profile</ModalHeader>\r\n                  <ModalBody>\r\n                    <Container>\r\n                      <Row className=\"mb-4 pb-4 mt-4 pt-4\">\r\n                        <Col>\r\n                          <TextField\r\n                            error={errors.nik && touched.nik}\r\n                            fullWidth\r\n                            helperText={errors.nik && touched.nik && errors.nik}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"NIK\"\r\n                            name=\"nik\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.nik}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className=\"mb-4 pb-4 mt-4 pt-4\">\r\n                        <Col>\r\n                          <TextField\r\n                            error={errors.name && touched.name}\r\n                            fullWidth\r\n                            InputLabelProps={{ shrink: true }}\r\n                            helperText={\r\n                              errors.name && touched.name && errors.name\r\n                            }\r\n                            label=\"Full Name\"\r\n                            name=\"name\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.name}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className=\"mb-4 pb-4 mt-4 pt-4\">\r\n                        <Col>\r\n                          <TextField\r\n                            error={errors.organization && touched.organization}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.organization &&\r\n                              touched.organization &&\r\n                              errors.organization\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Organization Code\"\r\n                            name=\"organization\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            placeholder=\"XX0000\"\r\n                            type=\"text\"\r\n                            value={values.organization}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                      <Row xs=\"8\" className=\"mb-4 pb-4 mt-4 pt-4\">\r\n                        <Col>\r\n                          <TextField\r\n                            error={errors.iaeEmail && touched.iaeEmail}\r\n                            fullWidth\r\n                            InputLabelProps={{ shrink: true }}\r\n                            helperText={\r\n                              errors.iaeEmail &&\r\n                              touched.iaeEmail &&\r\n                              errors.iaeEmail\r\n                            }\r\n                            label=\"Email\"\r\n                            name=\"iaeEmail\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                            value={values.iaeEmail}\r\n                          />\r\n                        </Col>\r\n                        <Col xs=\"4\" className=\"pt-4\">\r\n                          @indonesian-aerospace.com\r\n                        </Col>\r\n                      </Row>\r\n                      <Row className=\"mb-4 pb-4 mt-4 pt-4\">\r\n                        <Col>\r\n                          <TextField\r\n                            error={errors.phoneNo && touched.phoneNo}\r\n                            fullWidth\r\n                            helperText={\r\n                              errors.phoneNo &&\r\n                              touched.phoneNo &&\r\n                              errors.phoneNo\r\n                            }\r\n                            InputLabelProps={{ shrink: true }}\r\n                            label=\"Phone Number\"\r\n                            name=\"phoneNo\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            placeholder=\"XXXX\"\r\n                            type=\"text\"\r\n                            value={values.phoneNo}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Container>\r\n                  </ModalBody>\r\n                  <ModalFooter>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state`}\r\n                      color=\"secondary\"\r\n                      onClick={\r\n                        !loading\r\n                          ? () => {\r\n                              toggleChangeProfileModal();\r\n                            }\r\n                          : null\r\n                      }\r\n                      type=\"button\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Cancel</span>\r\n                    </Button>\r\n                    <Button\r\n                      className={`btn-shadow btn-multiple-state ${\r\n                        loading ? \"show-spinner\" : \"\"\r\n                      }`}\r\n                      color=\"primary\"\r\n                      type={loading ? \"button\" : \"submit\"}\r\n                      variant=\"contained\"\r\n                    >\r\n                      <LoadingSpinner />\r\n                      <span className=\"label\">Save</span>\r\n                    </Button>\r\n                  </ModalFooter>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </React.Fragment>\r\n        ) : null}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth }) => {\r\n  const { token, loading, showChangeProfileModal } = auth;\r\n  return {\r\n    token,\r\n    loading,\r\n    showChangeProfileModal,\r\n  };\r\n};\r\nconst mapActionsToProps = {\r\n  toggleChangeProfileModal,\r\n  changeProfile,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(ProfileModal);\r\n","import React, { PureComponent } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Col, Row } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n} from \"reactstrap\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { MenuIcon, MobileMenuIcon } from \"../../components/svg\";\r\nimport {\r\n  changeLocale,\r\n  clickOnMobileMenu,\r\n  logoutUser,\r\n  setContainerClassnames,\r\n  toggleChangePasswordModal,\r\n  toggleChangeProfileModal,\r\n} from \"../../redux/actions\";\r\n\r\nimport ChangePasswordModal from \"../modals/ChangePasswordModal\";\r\n\r\nimport ProfileModal from \"../modals/ProfileModal\";\r\nimport { backEndUrl } from \"../../constants/defaultValues\";\r\n\r\nclass TopNav extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isInFullScreen: false,\r\n      nik: \"\",\r\n      name: \"\",\r\n      organization: \"\",\r\n      iaeEmail: \"\",\r\n    };\r\n  }\r\n\r\n  isInFullScreen = () => {\r\n    return (\r\n      (document.fullscreenElement && document.fullscreenElement !== null) ||\r\n      (document.webkitFullscreenElement &&\r\n        document.webkitFullscreenElement !== null) ||\r\n      (document.mozFullScreenElement &&\r\n        document.mozFullScreenElement !== null) ||\r\n      (document.msFullscreenElement && document.msFullscreenElement !== null)\r\n    );\r\n  };\r\n\r\n  toggleFullScreen = () => {\r\n    const isInFullScreen = this.isInFullScreen();\r\n    let docElm = document.documentElement;\r\n    if (!isInFullScreen) {\r\n      if (docElm.requestFullscreen) {\r\n        docElm.requestFullscreen();\r\n      } else if (docElm.mozRequestFullScreen) {\r\n        docElm.mozRequestFullScreen();\r\n      } else if (docElm.webkitRequestFullScreen) {\r\n        docElm.webkitRequestFullScreen();\r\n      } else if (docElm.msRequestFullscreen) {\r\n        docElm.msRequestFullscreen();\r\n      }\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n      }\r\n    }\r\n    this.setState({\r\n      isInFullScreen: !isInFullScreen,\r\n    });\r\n  };\r\n\r\n  menuButtonClick = (e, menuClickCount, containerClassnames) => {\r\n    const { selectedMenuHasSubItems, setContainerClassnames } = this.props;\r\n\r\n    e.preventDefault();\r\n    setTimeout(() => {\r\n      let event = document.createEvent(\"HTMLEvents\");\r\n      event.initEvent(\"resize\", false, false);\r\n      window.dispatchEvent(event);\r\n    }, 350);\r\n    setContainerClassnames(\r\n      ++menuClickCount,\r\n      containerClassnames,\r\n      selectedMenuHasSubItems\r\n    );\r\n  };\r\n\r\n  mobileMenuButtonClick = (e, containerClassnames) => {\r\n    e.preventDefault();\r\n    this.props.clickOnMobileMenu(containerClassnames);\r\n  };\r\n\r\n  static getDerivedStateFromProps(props) {\r\n    const { token } = props;\r\n    const { nik, name, organization, iaeEmail } = jwt_decode(token);\r\n\r\n    return {\r\n      nik: nik,\r\n      name: name,\r\n      organization: organization,\r\n      iaeEmail: iaeEmail,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      history,\r\n      containerClassnames,\r\n      menuClickCount,\r\n      token,\r\n      toggleChangeProfileModal,\r\n      toggleChangePasswordModal,\r\n      logoutUser,\r\n    } = this.props;\r\n    const { isInFullScreen, name, nik } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar fixed-top\">\r\n          <div className=\"d-flex align-items-center navbar-left\">\r\n            <NavLink\r\n              to=\"#\"\r\n              className=\"menu-button d-none d-md-block\"\r\n              onClick={(e) =>\r\n                this.menuButtonClick(e, menuClickCount, containerClassnames)\r\n              }\r\n            >\r\n              <MenuIcon />\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"#\"\r\n              className=\"menu-button-mobile d-xs-block d-sm-block d-md-none\"\r\n              onClick={(e) =>\r\n                this.mobileMenuButtonClick(e, containerClassnames)\r\n              }\r\n            >\r\n              <MobileMenuIcon />\r\n            </NavLink>\r\n          </div>\r\n          <div className=\"navbar-right\">\r\n            <div className=\"header-icons d-inline-block align-middle\">\r\n              <button\r\n                className=\"header-icon btn btn-empty d-none d-sm-inline-block\"\r\n                type=\"button\"\r\n                id=\"fullScreenButton\"\r\n                onClick={this.toggleFullScreen}\r\n              >\r\n                {isInFullScreen ? (\r\n                  <i className=\"simple-icon-size-actual d-block\" />\r\n                ) : (\r\n                  <i className=\"simple-icon-size-fullscreen d-block\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"user d-inline-block\">\r\n              <UncontrolledDropdown className=\"dropdown-menu-right\">\r\n                <DropdownToggle className=\"p-0\" color=\"empty\">\r\n                  <div>\r\n                    <Row className=\"align-items-center\">\r\n                      <Col xs={{ size: \"auto\" }}>{name}</Col>\r\n                      <Col xs={{ size: \"auto\" }}>\r\n                        <Avatar\r\n                          variant=\"rounded\"\r\n                          src={`${backEndUrl}/assets/img/user/portrait/minified/${nik}.jpg`}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </DropdownToggle>\r\n                <DropdownMenu className=\"mt-3\" right>\r\n                  <DropdownItem onClick={() => toggleChangeProfileModal()}>\r\n                    Profile\r\n                  </DropdownItem>\r\n                  <DropdownItem onClick={() => toggleChangePasswordModal()}>\r\n                    Change Password\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem onClick={() => logoutUser(token, history)}>\r\n                    Sign Out\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n\r\n        <ProfileModal />\r\n        <ChangePasswordModal />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, menu, settings }) => {\r\n  const { token } = auth;\r\n  const { containerClassnames, menuClickCount, selectedMenuHasSubItems } = menu;\r\n  const { locale } = settings;\r\n\r\n  return {\r\n    token,\r\n    containerClassnames,\r\n    menuClickCount,\r\n    selectedMenuHasSubItems,\r\n    locale,\r\n  };\r\n};\r\n\r\nconst mapActionsToProps = {\r\n  setContainerClassnames,\r\n  clickOnMobileMenu,\r\n  changeLocale,\r\n  toggleChangeProfileModal,\r\n  toggleChangePasswordModal,\r\n  logoutUser,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(TopNav);\r\n","import React, { PureComponent } from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { createTheme } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Sidebar from \"../containers/navs/Sidebar\";\r\nimport TopNav from \"../containers/navs/Topnav\";\r\nimport { AppBackground } from \"../components/Backgrounds\";\r\nimport { dark, light } from \"../constants/styles\";\r\nimport { refreshUser } from \"../redux/actions\";\r\n\r\nclass AppLayout extends PureComponent {\r\n  render() {\r\n    const { history, children, containerClassnames } = this.props;\r\n    const appliedTheme = createTheme(true ? light : dark);\r\n\r\n    return (\r\n      <div id=\"app-container\" className={containerClassnames}>\r\n        <ThemeProvider theme={appliedTheme}>\r\n          <AppBackground />\r\n          <TopNav history={history} />\r\n          <Sidebar />\r\n          <main>\r\n            <div className=\"container-fluid\">{children}</div>\r\n          </main>\r\n        </ThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = ({ menu }) => {\r\n  const { containerClassnames } = menu;\r\n\r\n  return { containerClassnames };\r\n};\r\n\r\nconst mapActionToProps = { refreshUser };\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, mapActionToProps)(AppLayout)\r\n);\r\n","import React, { PureComponent, Suspense } from \"react\";\r\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport AppLayout from \"../../layout/AppLayout\";\r\n\r\nconst Dashboards = React.lazy(() => import(\"./dashboards\"));\r\n// const Media = React.lazy(() => import(\"./media\"));\r\nconst OrganizationUnit = React.lazy(() => import(\"./organizationUnit\"));\r\nconst UserManagement = React.lazy(() => import(\"./userManagement\"));\r\nconst QaLaboratoryTest = React.lazy(() => import(\"./qaLaboratoryTest\"));\r\nconst QaChemicalSolutionControl = React.lazy(() =>\r\n  import(\"./qaChemicalSolutionControl\")\r\n);\r\nconst QaElectroplatingChemicalProcessControl = React.lazy(() =>\r\n  import(\"./qaElectroplatingChemicalProcessControl\")\r\n);\r\n\r\nclass App extends PureComponent {\r\n  render() {\r\n    const { match, token } = this.props;\r\n    const { url } = match;\r\n    const { authorization } = jwt_decode(token);\r\n    const {\r\n      superAdmin,\r\n      laboratoryTestAdmin,\r\n      laboratoryTestView,\r\n      chemicalSolutionControlAdmin,\r\n      chemicalSolutionControlView,\r\n      electroplatingChemicalProcessControlView,\r\n    } = authorization;\r\n\r\n    return (\r\n      <AppLayout>\r\n        <div className=\"dashboard-wrapper\">\r\n          <Suspense fallback={<div className=\"loading\" />}>\r\n            <Switch>\r\n              <Redirect exact from={`${url}/`} to={`${url}/dashboards`} />\r\n\r\n              <Route\r\n                path={`${url}/dashboards`}\r\n                render={(props) => <Dashboards {...props} />}\r\n              />\r\n\r\n              {/* Deprecated */}\r\n              {/* {superAdmin ? (\r\n                <Route\r\n                  path={`${url}/media`}\r\n                  render={(props) => <Media {...props} />}\r\n                />\r\n              ) : null} */}\r\n\r\n              <Route\r\n                path={`${url}/organization-unit`}\r\n                render={(props) => <OrganizationUnit {...props} />}\r\n              />\r\n\r\n              {superAdmin ||\r\n              laboratoryTestAdmin ||\r\n              chemicalSolutionControlAdmin ? (\r\n                <Route\r\n                  path={`${url}/user-management`}\r\n                  render={(props) => <UserManagement {...props} />}\r\n                />\r\n              ) : null}\r\n\r\n              {superAdmin || laboratoryTestView ? (\r\n                <Route\r\n                  path={`${url}/laboratory-test`}\r\n                  render={(props) => <QaLaboratoryTest {...props} />}\r\n                />\r\n              ) : null}\r\n\r\n              {superAdmin || chemicalSolutionControlView ? (\r\n                <Route\r\n                  path={`${url}/chemical-solution-control`}\r\n                  render={(props) => <QaChemicalSolutionControl {...props} />}\r\n                />\r\n              ) : null}\r\n\r\n              {superAdmin || electroplatingChemicalProcessControlView ? (\r\n                <Route\r\n                  path={`${url}/electroplating-chemical-process-control`}\r\n                  render={(props) => (\r\n                    <QaElectroplatingChemicalProcessControl {...props} />\r\n                  )}\r\n                />\r\n              ) : null}\r\n\r\n              <Redirect to=\"/error\" />\r\n            </Switch>\r\n          </Suspense>\r\n        </div>\r\n      </AppLayout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ auth, menu }) => {\r\n  const { token } = auth;\r\n  const { containerClassnames } = menu;\r\n\r\n  return { token, containerClassnames };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, {})(App));\r\n","import Particles from \"react-tsparticles\";\r\n\r\nconst AuthBackground = () => (\r\n  <Particles\r\n    id=\"tsparticles\"\r\n    options={{\r\n      background: {\r\n        color: {\r\n          value: \"#000\",\r\n        },\r\n      },\r\n      backgroundMode: {\r\n        enable: true,\r\n      },\r\n      fpsLimit: 60,\r\n      interactivity: {\r\n        detect_on: \"canvas\",\r\n        events: {\r\n          onclick: {\r\n            enable: true,\r\n            mode: \"repulse\",\r\n          },\r\n          onhover: {\r\n            enable: true,\r\n            mode: \"bubble\",\r\n            parallax: {\r\n              enable: false,\r\n              force: 2,\r\n              smooth: 10,\r\n            },\r\n          },\r\n          resize: true,\r\n        },\r\n        modes: {\r\n          bubble: {\r\n            distance: 200,\r\n            duration: 2,\r\n            opacity: 0,\r\n            size: 0,\r\n            speed: 2,\r\n          },\r\n          grab: {\r\n            distance: 400,\r\n            line_linked: {\r\n              opacity: 1,\r\n            },\r\n          },\r\n          push: {\r\n            particles_nb: 4,\r\n          },\r\n          remove: {\r\n            particles_nb: 2,\r\n          },\r\n          repulse: {\r\n            distance: 400,\r\n            duration: 0.4,\r\n          },\r\n        },\r\n      },\r\n      particles: {\r\n        color: {\r\n          value: \"#ffffff\",\r\n        },\r\n        line_linked: {\r\n          color: \"#ffffff\",\r\n          distance: 150,\r\n          enable: false,\r\n          opacity: 0.4,\r\n          width: 1,\r\n        },\r\n        move: {\r\n          attract: {\r\n            enable: false,\r\n            rotateX: 600,\r\n            rotateY: 600,\r\n          },\r\n          bounce: false,\r\n          direction: \"none\",\r\n          enable: true,\r\n          out_mode: \"out\",\r\n          random: true,\r\n          speed: 0.01,\r\n          straight: false,\r\n        },\r\n        number: {\r\n          density: {\r\n            enable: true,\r\n            value_area: 800,\r\n          },\r\n          value: 600,\r\n        },\r\n        opacity: {\r\n          anim: {\r\n            enable: true,\r\n            opacity_min: 0.3,\r\n            speed: 5,\r\n            sync: false,\r\n          },\r\n          random: {\r\n            enable: true,\r\n            minimumValue: 0.3,\r\n          },\r\n          value: 0.6,\r\n        },\r\n        shape: {\r\n          type: \"circle\",\r\n        },\r\n        size: {\r\n          anim: {\r\n            enable: false,\r\n            size_min: 0.3,\r\n            speed: 4,\r\n            sync: false,\r\n          },\r\n          random: false,\r\n          value: 1,\r\n        },\r\n      },\r\n      retina_detect: true,\r\n    }}\r\n  />\r\n);\r\n\r\nconst AppBackground = () => (\r\n  <Particles\r\n    id=\"tsparticles\"\r\n    options={{\r\n      background: {\r\n        color: {\r\n          value: \"#FFFFFFFF\",\r\n        },\r\n      },\r\n      backgroundMode: {\r\n        enable: true,\r\n      },\r\n      detectRetina: true,\r\n      fpsLimit: 60,\r\n      interactivity: {\r\n        detectsOn: \"canvas\",\r\n        events: {\r\n          onClick: {\r\n            enable: true,\r\n            mode: \"push\",\r\n          },\r\n          onHover: {\r\n            enable: true,\r\n            mode: \"repulse\",\r\n          },\r\n          resize: true,\r\n        },\r\n        modes: {\r\n          bubble: {\r\n            distance: 400,\r\n            duration: 2,\r\n            opacity: 0.75,\r\n            size: 40,\r\n          },\r\n          push: {\r\n            quantity: 4,\r\n          },\r\n          repulse: {\r\n            distance: 25,\r\n            duration: 0.4,\r\n          },\r\n        },\r\n      },\r\n      particles: {\r\n        collisions: {\r\n          enable: true,\r\n        },\r\n        color: {\r\n          value: [\"#4791db\", \"#1976d2\", \"#115293\"],\r\n        },\r\n        links: {\r\n          color: \"#1976d2\",\r\n          distance: 100,\r\n          enable: true,\r\n          opacity: 0.25,\r\n          width: 1,\r\n        },\r\n        move: {\r\n          direction: \"none\",\r\n          enable: true,\r\n          outMode: \"bounce\",\r\n          random: false,\r\n          speed: 0.5,\r\n          straight: false,\r\n        },\r\n        number: {\r\n          density: {\r\n            enable: true,\r\n            value_area: 1000,\r\n          },\r\n          value: 150,\r\n        },\r\n        opacity: {\r\n          value: 0.75,\r\n        },\r\n        shape: {\r\n          type: \"circle\",\r\n        },\r\n        size: {\r\n          random: true,\r\n          value: 3,\r\n        },\r\n      },\r\n    }}\r\n  />\r\n);\r\n\r\nexport { AuthBackground, AppBackground };\r\n","const light = {\r\n  palette: {\r\n    primary: {\r\n      contrastText: \"#fff\",\r\n      dark: \"#115293\",\r\n      light: \"#4791db\",\r\n      main: \"#1976d2\",\r\n    },\r\n    secondary: {\r\n      contrastText: \"#fff\",\r\n      dark: \"#9a0036\",\r\n      light: \"#e33371\",\r\n      main: \"#dc004e\",\r\n    },\r\n    type: \"light\",\r\n  },\r\n};\r\n\r\nconst dark = {\r\n  palette: {\r\n    type: \"dark\",\r\n  },\r\n};\r\n\r\nexport { light, dark };\r\n","import * as Yup from \"yup\";\r\n\r\nconst registerUserFormValidationSchema = Yup.object().shape({\r\n  registerNik: Yup.string()\r\n    .required(\"NIK is required\")\r\n    .min(6, \"Must be exactly 6 digits\")\r\n    .max(6, \"Must be exactly 6 digits\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\"),\r\n  registerPassword: Yup.string().required(\"Password is required\"),\r\n  registerConfirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"registerPassword\"), null], \"Password doesn't match\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nconst loginUserFormValidationSchema = Yup.object().shape({\r\n  loginUsername: Yup.string().required(\"Username / NIK is required\"),\r\n  loginPassword: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst changePasswordFormValidationSchema = Yup.object().shape({\r\n  newPassword: Yup.string().required(\"Username / NIK is required\"),\r\n  confirmNewPassword: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst changeProfileFormValidationSchema = Yup.object().shape({\r\n  nik: Yup.string()\r\n    .required(\"NIK is required\")\r\n    .min(6, \"Must be exactly 6 digits\")\r\n    .max(6, \"Must be exactly 6 digits\")\r\n    .matches(/^[0-9]+$/, \"Must be only digits\"),\r\n  name: Yup.string().required(\"Required\"),\r\n  organization: Yup.string()\r\n    .required(\"Required\")\r\n    .min(6, \"Must be exactly 6 digits\")\r\n    .max(6, \"Must be exactly 6 digits\")\r\n    .matches(/^[a-zA-Z]{2}/, \"First two characters must be letters\"),\r\n  iaeEmail: Yup.string(),\r\n  phoneNo: Yup.string(),\r\n});\r\n\r\nconst laboratoryTestFormByAdminValidationSchema = Yup.object().shape({\r\n  laboratory: Yup.string().nullable().required(\"Required\"),\r\n  organizationUnit: Yup.string().nullable().required(\"Required\"),\r\n  requestNumber: Yup.string().nullable().required(\"Required\"),\r\n  material: Yup.string().nullable().required(\"Required\"),\r\n  type: Yup.string().nullable().required(\"Required\"),\r\n  specification: Yup.string().nullable().required(\"Required\"),\r\n  program: Yup.string().nullable().required(\"Required\"),\r\n  budgetNumber: Yup.string().nullable().required(\"Required\"),\r\n  reasonOfTest: Yup.string().nullable().required(\"Required\"),\r\n  manufacturer: Yup.string().nullable().required(\"Required\"),\r\n  manufacturingDate: Yup.string().nullable().required(\"Required\"),\r\n  expiryDate: Yup.string().nullable().required(\"Required\"),\r\n  batchNumber: Yup.string().nullable().required(\"Required\"),\r\n  sample: Yup.string().nullable().required(\"Required\"),\r\n  condition: Yup.string().nullable().required(\"Required\"),\r\n  unit: Yup.string().nullable().required(\"Required\"),\r\n  quantity: Yup.string().nullable().required(\"Required\"),\r\n  typeOfTest: Yup.string().nullable().required(\"Required\"),\r\n  testAccordingToSpecification: Yup.string().nullable().required(\"Required\"),\r\n  requester: Yup.string().nullable().required(\"Required\"),\r\n  requestApprover: Yup.string().nullable().required(\"Required\"),\r\n  reporter: Yup.string().nullable().required(\"Required\"),\r\n  reportApprover: Yup.string().nullable().required(\"Required\"),\r\n});\r\n\r\nconst laboratoryTestRequestFormValidationSchema = Yup.object().shape({\r\n  laboratory: Yup.string().nullable().required(\"Required\"),\r\n  organizationUnit: Yup.string().nullable().required(\"Required\"),\r\n  requestNumber: Yup.string().nullable().required(\"Required\"),\r\n  material: Yup.string().nullable().required(\"Required\"),\r\n  type: Yup.string().nullable().required(\"Required\"),\r\n  specification: Yup.string().nullable().required(\"Required\"),\r\n  program: Yup.string().nullable().required(\"Required\"),\r\n  budgetNumber: Yup.string().nullable().required(\"Required\"),\r\n  reasonOfTest: Yup.string().nullable().required(\"Required\"),\r\n  manufacturer: Yup.string().nullable().required(\"Required\"),\r\n  manufacturingDate: Yup.string().nullable().required(\"Required\"),\r\n  expiryDate: Yup.string().nullable().required(\"Required\"),\r\n  batchNumber: Yup.string().nullable().required(\"Required\"),\r\n  sample: Yup.string().nullable().required(\"Required\"),\r\n  condition: Yup.string().nullable().required(\"Required\"),\r\n  unit: Yup.string().nullable().required(\"Required\"),\r\n  quantity: Yup.string().nullable().required(\"Required\"),\r\n  typeOfTest: Yup.string().nullable().required(\"Required\"),\r\n  testAccordingToSpecification: Yup.string().nullable().required(\"Required\"),\r\n});\r\n\r\nconst laboratoryTestRequestReceiveFormValidationSchema = Yup.object().shape({\r\n  requestDate: Yup.date().nullable().required(\"Required\"),\r\n  requestReceiveDate: Yup.string().nullable().required(\"Required\"),\r\n  workdayEstimation: Yup.string().nullable().required(\"Required\"),\r\n  estimationCloseDate: Yup.string().nullable().required(\"Required\"),\r\n});\r\n\r\nconst laboratoryTestReportFormValidationSchema = Yup.object().shape({\r\n  reportDate: Yup.string().nullable().required(\"Required\"),\r\n  reportNumber: Yup.string().nullable().required(\"Required\"),\r\n});\r\n\r\nconst chemicalSolutionControlCreateWorksheetFormValidationSchema =\r\n  Yup.object().shape({\r\n    solutionProcess: Yup.string().nullable().required(\"Required\"),\r\n    tankNumber: Yup.string().nullable().required(\"Required\"),\r\n    tankSize: Yup.string().nullable().required(\"Required\"),\r\n    tankVolume: Yup.string().nullable().required(\"Required\"),\r\n    location: Yup.string().nullable().required(\"Required\"),\r\n    testMethod: Yup.string().nullable().required(\"Required\"),\r\n    frequencyOfTest: Yup.string().nullable().required(\"Required\"),\r\n    temperatureRangeInCelcius: Yup.string().nullable().required(\"Required\"),\r\n  });\r\n\r\nconst chemicalSolutionControlEditWorksheetFormValidationSchema =\r\n  Yup.object().shape({\r\n    solutionProcess: Yup.string().nullable().required(\"Required\"),\r\n    tankNumber: Yup.string().nullable().required(\"Required\"),\r\n    tankSize: Yup.string().nullable().required(\"Required\"),\r\n    tankVolume: Yup.string().nullable().required(\"Required\"),\r\n    location: Yup.string().nullable().required(\"Required\"),\r\n    testMethod: Yup.string().nullable().required(\"Required\"),\r\n    frequencyOfTest: Yup.string().nullable().required(\"Required\"),\r\n    temperatureRangeInCelcius: Yup.string().nullable().required(\"Required\"),\r\n  });\r\n\r\nconst chemicalSolutionControlReviseWorksheetFormValidationSchema =\r\n  Yup.object().shape({\r\n    solutionProcess: Yup.string().nullable().required(\"Required\"),\r\n    tankNumber: Yup.string().nullable().required(\"Required\"),\r\n    tankSize: Yup.string().nullable().required(\"Required\"),\r\n    tankVolume: Yup.string().nullable().required(\"Required\"),\r\n    location: Yup.string().nullable().required(\"Required\"),\r\n    testMethod: Yup.string().nullable().required(\"Required\"),\r\n    frequencyOfTest: Yup.string().nullable().required(\"Required\"),\r\n    temperatureRangeInCelcius: Yup.string().nullable().required(\"Required\"),\r\n  });\r\n\r\nconst chemicalSolutionControlCreateRecordFormValidationSchema =\r\n  Yup.object().shape({\r\n    sampleTakenDate: Yup.date().nullable().required(\"Required\"),\r\n    sampleTakenTime: Yup.string().nullable().required(\"Required\"),\r\n    agitationInMinutes: Yup.string().nullable().required(\"Required\"),\r\n    temperatureInCelcius: Yup.string().nullable().required(\"Required\"),\r\n    sampleAnalysisDate: Yup.date().nullable().required(\"Required\"),\r\n    sampleAnalysisTime: Yup.string().nullable().required(\"Required\"),\r\n    remarks: Yup.string().nullable(),\r\n  });\r\n\r\nconst chemicalSolutionControlEditRecordFormValidationSchema =\r\n  Yup.object().shape({\r\n    sampleTakenDate: Yup.date().nullable().required(\"Required\"),\r\n    sampleTakenTime: Yup.string().nullable().required(\"Required\"),\r\n    agitationInMinutes: Yup.string().nullable().required(\"Required\"),\r\n    temperatureInCelcius: Yup.string().nullable().required(\"Required\"),\r\n    sampleAnalysisDate: Yup.date().nullable().required(\"Required\"),\r\n    sampleAnalysisTime: Yup.string().nullable().required(\"Required\"),\r\n    remarks: Yup.string().nullable(),\r\n  });\r\n\r\nconst chemicalSolutionControlRecordAttachCcrFormValidationSchema =\r\n  Yup.object().shape({\r\n    chemicalChargingRecordNumber: Yup.string().nullable().required(\"Required\"),\r\n    chemicalChargingRecordReceivedDate: Yup.date()\r\n      .nullable()\r\n      .required(\"Required\"),\r\n  });\r\n\r\nexport {\r\n  registerUserFormValidationSchema,\r\n  loginUserFormValidationSchema,\r\n  changePasswordFormValidationSchema,\r\n  changeProfileFormValidationSchema,\r\n  laboratoryTestFormByAdminValidationSchema,\r\n  laboratoryTestRequestFormValidationSchema,\r\n  laboratoryTestRequestReceiveFormValidationSchema,\r\n  laboratoryTestReportFormValidationSchema,\r\n  chemicalSolutionControlCreateWorksheetFormValidationSchema,\r\n  chemicalSolutionControlEditWorksheetFormValidationSchema,\r\n  chemicalSolutionControlReviseWorksheetFormValidationSchema,\r\n  chemicalSolutionControlCreateRecordFormValidationSchema,\r\n  chemicalSolutionControlEditRecordFormValidationSchema,\r\n  chemicalSolutionControlRecordAttachCcrFormValidationSchema,\r\n};\r\n"],"sourceRoot":""}